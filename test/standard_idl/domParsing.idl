[Constructor]
interface DOMParser {
    [NewObject]
    Document parseFromString(DOMString str, SupportedType type);
};

enum SupportedType {
    "text/html",
    "text/xml",
    "application/xml",
    "application/xhtml+xml",
    "image/svg+xml"
};
[Constructor]
interface XMLSerializer {
    DOMString serializeToString(Node root);
};
partial interface Element {
    [CEReactions,
     TreatNullAs=EmptyString]
    attribute DOMString innerHTML;
    [CEReactions,
     TreatNullAs=EmptyString]
    attribute DOMString outerHTML;
    [CEReactions]
    void insertAdjacentHTML(DOMString position,
                                              DOMString text);
};
partial interface Range {
    [CEReactions,
     NewObject]
    DocumentFragment createContextualFragment(DOMString fragment);
};