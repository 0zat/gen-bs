(*generated by gen-bs tool*)
(* internal use *)
(* This code is generated by gen-bs tool *)

type _baseClass
(* functions for variadic *)
type ('own, 'return, 'args) variadic_func
type 'args variadic_args

external apply : ('own, 'return, 'args) variadic_func ->
                 'own -> 'args variadic_args -> 'return = "apply" [@@bs.send]

let to_arg ary =
  let to_arg : 'a array -> 'a variadic_args [@bs] = 
    [%bs.raw "function(a){ return a}"]
  in
  Js_unsafe.fn_run1 to_arg ary

let unsafe_add ary mem = 
  let unsafe_add : 'a variadic_args -> 'b -> ('b * 'a) variadic_args [@bs] = 
    [%bs.raw "function(a, b){ return [b].concat(a)}"]
  in
  Js_unsafe.fn_run2 unsafe_add ary mem
(* functions for override *)
let access_array f x = Array.map f x
let access_null f x = Js_null.bind x (Js_unsafe.fn_mk1 f) 
let access_undef f x = Js_undefined.bind x (Js_unsafe.fn_mk1 f) 
(*let access_promise f x = Js_promise.then_ f x*)

let undef_to_opt f x = Js_undefined.to_opt (f x)
let null_to_opt f x = Js_null.to_opt (f x)
let identity x = x


(* types of javascript objects*)
type _console
and ('a) console_like
and console = (_baseClass) console_like
and ('a) _eventSource
and ('a) eventSource_like = (('a) _eventSource) eventTarget_like
and eventSource = (_baseClass) eventSource_like
and ('a) _hTMLIFrameElement
and ('a) hTMLIFrameElement_like = (('a) _hTMLIFrameElement) hTMLElement_like
and hTMLIFrameElement = (_baseClass) hTMLIFrameElement_like
and ('a) _cSSStyleRule
and ('a) cSSStyleRule_like = (('a) _cSSStyleRule) cSSRule_like
and cSSStyleRule = (_baseClass) cSSStyleRule_like
and ('a) _xMLHttpRequestUpload
and ('a) xMLHttpRequestUpload_like = (('a) _xMLHttpRequestUpload) xMLHttpRequestEventTarget_like
and xMLHttpRequestUpload = (_baseClass) xMLHttpRequestUpload_like
and _performance
and ('a) performance_like
and performance = (_baseClass) performance_like
and ('a) _cSSFontFaceRule
and ('a) cSSFontFaceRule_like = (('a) _cSSFontFaceRule) cSSRule_like
and cSSFontFaceRule = (_baseClass) cSSFontFaceRule_like
and ('a) _hTMLAudioElement
and ('a) hTMLAudioElement_like = (('a) _hTMLAudioElement) hTMLMediaElement_like
and hTMLAudioElement = (_baseClass) hTMLAudioElement_like
and _customElementRegistry
and ('a) customElementRegistry_like
and customElementRegistry = (_baseClass) customElementRegistry_like
and ('a) _sVGGraphicsElement
and ('a) sVGGraphicsElement_like = (('a) _sVGGraphicsElement) sVGElement_like
and sVGGraphicsElement = (_baseClass) sVGGraphicsElement_like
and _gamepadList
and ('a) gamepadList_like
and gamepadList = (_baseClass) gamepadList_like
and ('a) _uIEvent
and ('a) uIEvent_like = (('a) _uIEvent) event_like
and uIEvent = (_baseClass) uIEvent_like
and ('a) _hTMLScriptElement
and ('a) hTMLScriptElement_like = (('a) _hTMLScriptElement) hTMLElement_like
and hTMLScriptElement = (_baseClass) hTMLScriptElement_like
and ('a) _hTMLObjectElement
and ('a) hTMLObjectElement_like = (('a) _hTMLObjectElement) hTMLElement_like
and hTMLObjectElement = (_baseClass) hTMLObjectElement_like
and ('a) _gamepadEvent
and ('a) gamepadEvent_like = (('a) _gamepadEvent) event_like
and gamepadEvent = (_baseClass) gamepadEvent_like
and _uRLSearchParams
and ('a) uRLSearchParams_like
and uRLSearchParams = (_baseClass) uRLSearchParams_like
and ('a) _hTMLOptionsCollection
and ('a) hTMLOptionsCollection_like = (('a) _hTMLOptionsCollection) hTMLCollection_like
and hTMLOptionsCollection = (_baseClass) hTMLOptionsCollection_like
and _gamepadButton
and ('a) gamepadButton_like
and gamepadButton = (_baseClass) gamepadButton_like
and ('a) _hTMLMediaElement
and ('a) hTMLMediaElement_like = (('a) _hTMLMediaElement) hTMLElement_like
and hTMLMediaElement = (_baseClass) hTMLMediaElement_like
and _elementContentEditable
and ('a) elementContentEditable_like
and elementContentEditable = (_baseClass) elementContentEditable_like
and _mimeTypeArray
and ('a) mimeTypeArray_like
and mimeTypeArray = (_baseClass) mimeTypeArray_like
and _formData
and ('a) formData_like
and formData = (_baseClass) formData_like
and ('a) _dOMMatrix
and ('a) dOMMatrix_like = (('a) _dOMMatrix) dOMMatrixReadOnly_like
and dOMMatrix = (_baseClass) dOMMatrix_like
and ('a) _comment
and ('a) comment_like = (('a) _comment) characterData_like
and comment = (_baseClass) comment_like
and _treeWalker
and ('a) treeWalker_like
and treeWalker = (_baseClass) treeWalker_like
and _dOMMatrixReadOnly
and ('a) dOMMatrixReadOnly_like
and dOMMatrixReadOnly = (_baseClass) dOMMatrixReadOnly_like
and ('a) _hTMLImageElement
and ('a) hTMLImageElement_like = (('a) _hTMLImageElement) hTMLElement_like
and hTMLImageElement = (_baseClass) hTMLImageElement_like
and ('a) _hTMLTableColElement
and ('a) hTMLTableColElement_like = (('a) _hTMLTableColElement) hTMLElement_like
and hTMLTableColElement = (_baseClass) hTMLTableColElement_like
and _parentNode
and ('a) parentNode_like
and parentNode = (_baseClass) parentNode_like
and ('a) _webGLFramebuffer
and ('a) webGLFramebuffer_like = (('a) _webGLFramebuffer) webGLObject_like
and webGLFramebuffer = (_baseClass) webGLFramebuffer_like
and _range
and ('a) range_like
and range = (_baseClass) range_like
and _windowOrWorkerGlobalScope
and ('a) windowOrWorkerGlobalScope_like
and windowOrWorkerGlobalScope = (_baseClass) windowOrWorkerGlobalScope_like
and ('a) _hTMLTitleElement
and ('a) hTMLTitleElement_like = (('a) _hTMLTitleElement) hTMLElement_like
and hTMLTitleElement = (_baseClass) hTMLTitleElement_like
and _vREyeParameters
and ('a) vREyeParameters_like
and vREyeParameters = (_baseClass) vREyeParameters_like
and ('a) _hTMLDataElement
and ('a) hTMLDataElement_like = (('a) _hTMLDataElement) hTMLElement_like
and hTMLDataElement = (_baseClass) hTMLDataElement_like
and _webGLUniformLocation
and ('a) webGLUniformLocation_like
and webGLUniformLocation = (_baseClass) webGLUniformLocation_like
and ('a) _serviceWorkerRegistration
and ('a) serviceWorkerRegistration_like = (('a) _serviceWorkerRegistration) eventTarget_like
and serviceWorkerRegistration = (_baseClass) serviceWorkerRegistration_like
and _oESTextureHalfFloat
and ('a) oESTextureHalfFloat_like
and oESTextureHalfFloat = (_baseClass) oESTextureHalfFloat_like
and ('a) _serviceWorkerContainer
and ('a) serviceWorkerContainer_like = (('a) _serviceWorkerContainer) eventTarget_like
and serviceWorkerContainer = (_baseClass) serviceWorkerContainer_like
and _oESVertexArrayObject
and ('a) oESVertexArrayObject_like
and oESVertexArrayObject = (_baseClass) oESVertexArrayObject_like
and ('a) _xMLHttpRequest
and ('a) xMLHttpRequest_like = (('a) _xMLHttpRequest) xMLHttpRequestEventTarget_like
and xMLHttpRequest = (_baseClass) xMLHttpRequest_like
and ('a) _hTMLMetaElement
and ('a) hTMLMetaElement_like = (('a) _hTMLMetaElement) hTMLElement_like
and hTMLMetaElement = (_baseClass) hTMLMetaElement_like
and _testRunner
and ('a) testRunner_like
and testRunner = (_baseClass) testRunner_like
and ('a) _bluetoothPermissionResult
and ('a) bluetoothPermissionResult_like = (('a) _bluetoothPermissionResult) permissionStatus_like
and bluetoothPermissionResult = (_baseClass) bluetoothPermissionResult_like
and ('a) _forceTouchEvent
and ('a) forceTouchEvent_like = (('a) _forceTouchEvent) uIEvent_like
and forceTouchEvent = (_baseClass) forceTouchEvent_like
and ('a) _errorEvent
and ('a) errorEvent_like = (('a) _errorEvent) event_like
and errorEvent = (_baseClass) errorEvent_like
and _eventTarget
and ('a) eventTarget_like
and eventTarget = (_baseClass) eventTarget_like
and ('a) _hTMLTableHeaderCellElement
and ('a) hTMLTableHeaderCellElement_like = (('a) _hTMLTableHeaderCellElement) hTMLTableCellElement_like
and hTMLTableHeaderCellElement = (_baseClass) hTMLTableHeaderCellElement_like
and _nodeIterator
and ('a) nodeIterator_like
and nodeIterator = (_baseClass) nodeIterator_like
and ('a) _hTMLLIElement
and ('a) hTMLLIElement_like = (('a) _hTMLLIElement) hTMLElement_like
and hTMLLIElement = (_baseClass) hTMLLIElement_like
and ('a) _permissionStatus
and ('a) permissionStatus_like = (('a) _permissionStatus) eventTarget_like
and permissionStatus = (_baseClass) permissionStatus_like
and ('a) _hTMLOptGroupElement
and ('a) hTMLOptGroupElement_like = (('a) _hTMLOptGroupElement) hTMLElement_like
and hTMLOptGroupElement = (_baseClass) hTMLOptGroupElement_like
and _bluetoothRemoteGATTServer
and ('a) bluetoothRemoteGATTServer_like
and bluetoothRemoteGATTServer = (_baseClass) bluetoothRemoteGATTServer_like
and ('a) _messageEvent
and ('a) messageEvent_like = (('a) _messageEvent) event_like
and messageEvent = (_baseClass) messageEvent_like
and ('a) _dissimilarOriginWindow
and ('a) dissimilarOriginWindow_like = (('a) _dissimilarOriginWindow) globalScope_like
and dissimilarOriginWindow = (_baseClass) dissimilarOriginWindow_like
and ('a) _sVGSVGElement
and ('a) sVGSVGElement_like = (('a) _sVGSVGElement) sVGGraphicsElement_like
and sVGSVGElement = (_baseClass) sVGSVGElement_like
and ('a) _beforeUnloadEvent
and ('a) beforeUnloadEvent_like = (('a) _beforeUnloadEvent) event_like
and beforeUnloadEvent = (_baseClass) beforeUnloadEvent_like
and ('a) _keyboardEvent
and ('a) keyboardEvent_like = (('a) _keyboardEvent) uIEvent_like
and keyboardEvent = (_baseClass) keyboardEvent_like
and ('a) _vR
and ('a) vR_like = (('a) _vR) eventTarget_like
and vR = (_baseClass) vR_like
and ('a) _touchEvent
and ('a) touchEvent_like = (('a) _touchEvent) uIEvent_like
and touchEvent = (_baseClass) touchEvent_like
and ('a) _hTMLElement
and ('a) hTMLElement_like = (('a) _hTMLElement) element_like
and hTMLElement = (_baseClass) hTMLElement_like
and ('a) _hTMLFieldSetElement
and ('a) hTMLFieldSetElement_like = (('a) _hTMLFieldSetElement) hTMLElement_like
and hTMLFieldSetElement = (_baseClass) hTMLFieldSetElement_like
and ('a) _hTMLDListElement
and ('a) hTMLDListElement_like = (('a) _hTMLDListElement) hTMLElement_like
and hTMLDListElement = (_baseClass) hTMLDListElement_like
and _webGLRenderingContextBase
and ('a) webGLRenderingContextBase_like
and webGLRenderingContextBase = (_baseClass) webGLRenderingContextBase_like
and _webGLRenderingContext
and ('a) webGLRenderingContext_like
and webGLRenderingContext = (_baseClass) webGLRenderingContext_like
and ('a) _documentFragment
and ('a) documentFragment_like = (('a) _documentFragment) node_like
and documentFragment = (_baseClass) documentFragment_like
and _location
and ('a) location_like
and location = (_baseClass) location_like
and _body
and ('a) body_like
and body = (_baseClass) body_like
and ('a) _dOMRect
and ('a) dOMRect_like = (('a) _dOMRect) dOMRectReadOnly_like
and dOMRect = (_baseClass) dOMRect_like
and _history
and ('a) history_like
and history = (_baseClass) history_like
and _nodeList
and ('a) nodeList_like
and nodeList = (_baseClass) nodeList_like
and ('a) _hTMLBodyElement
and ('a) hTMLBodyElement_like = (('a) _hTMLBodyElement) hTMLElement_like
and hTMLBodyElement = (_baseClass) hTMLBodyElement_like
and ('a) _bluetoothDevice
and ('a) bluetoothDevice_like = (('a) _bluetoothDevice) eventTarget_like
and bluetoothDevice = (_baseClass) bluetoothDevice_like
and _bluetoothDeviceEventHandlers
and ('a) bluetoothDeviceEventHandlers_like
and bluetoothDeviceEventHandlers = (_baseClass) bluetoothDeviceEventHandlers_like
and ('a) _hTMLLegendElement
and ('a) hTMLLegendElement_like = (('a) _hTMLLegendElement) hTMLElement_like
and hTMLLegendElement = (_baseClass) hTMLLegendElement_like
and _screen
and ('a) screen_like
and screen = (_baseClass) screen_like
and _pluginArray
and ('a) pluginArray_like
and pluginArray = (_baseClass) pluginArray_like
and _bluetoothCharacteristicProperties
and ('a) bluetoothCharacteristicProperties_like
and bluetoothCharacteristicProperties = (_baseClass) bluetoothCharacteristicProperties_like
and _dOMRectReadOnly
and ('a) dOMRectReadOnly_like
and dOMRectReadOnly = (_baseClass) dOMRectReadOnly_like
and ('a) _cSSSupportsRule
and ('a) cSSSupportsRule_like = (('a) _cSSSupportsRule) cSSConditionRule_like
and cSSSupportsRule = (_baseClass) cSSSupportsRule_like
and ('a) _cSSImportRule
and ('a) cSSImportRule_like = (('a) _cSSImportRule) cSSRule_like
and cSSImportRule = (_baseClass) cSSImportRule_like
and _bluetoothRemoteGATTDescriptor
and ('a) bluetoothRemoteGATTDescriptor_like
and bluetoothRemoteGATTDescriptor = (_baseClass) bluetoothRemoteGATTDescriptor_like
and _childNode
and ('a) childNode_like
and childNode = (_baseClass) childNode_like
and _nonDocumentTypeChildNode
and ('a) nonDocumentTypeChildNode_like
and nonDocumentTypeChildNode = (_baseClass) nonDocumentTypeChildNode_like
and _dOMParser
and ('a) dOMParser_like
and dOMParser = (_baseClass) dOMParser_like
and _uRL
and ('a) uRL_like
and uRL = (_baseClass) uRL_like
and _elementCSSInlineStyle
and ('a) elementCSSInlineStyle_like
and elementCSSInlineStyle = (_baseClass) elementCSSInlineStyle_like
and _fileList
and ('a) fileList_like
and fileList = (_baseClass) fileList_like
and _webGLObject
and ('a) webGLObject_like
and webGLObject = (_baseClass) webGLObject_like
and ('a) _radioNodeList
and ('a) radioNodeList_like = (('a) _radioNodeList) nodeList_like
and radioNodeList = (_baseClass) radioNodeList_like
and _browserElement
and ('a) browserElement_like
and browserElement = (_baseClass) browserElement_like
and _browserElementCommon
and ('a) browserElementCommon_like
and browserElementCommon = (_baseClass) browserElementCommon_like
and _browserElementPrivileged
and ('a) browserElementPrivileged_like
and browserElementPrivileged = (_baseClass) browserElementPrivileged_like
and ('a) _file
and ('a) file_like = (('a) _file) blob_like
and file = (_baseClass) file_like
and _workerNavigator
and ('a) workerNavigator_like
and workerNavigator = (_baseClass) workerNavigator_like
and _styleSheet
and ('a) styleSheet_like
and styleSheet = (_baseClass) styleSheet_like
and _linkStyle
and ('a) linkStyle_like
and linkStyle = (_baseClass) linkStyle_like
and ('a) _hTMLBaseElement
and ('a) hTMLBaseElement_like = (('a) _hTMLBaseElement) hTMLElement_like
and hTMLBaseElement = (_baseClass) hTMLBaseElement_like
and _hTMLCollection
and ('a) hTMLCollection_like
and hTMLCollection = (_baseClass) hTMLCollection_like
and ('a) _hTMLUListElement
and ('a) hTMLUListElement_like = (('a) _hTMLUListElement) hTMLElement_like
and hTMLUListElement = (_baseClass) hTMLUListElement_like
and _performanceTiming
and ('a) performanceTiming_like
and performanceTiming = (_baseClass) performanceTiming_like
and ('a) _extendableMessageEvent
and ('a) extendableMessageEvent_like = (('a) _extendableMessageEvent) extendableEvent_like
and extendableMessageEvent = (_baseClass) extendableMessageEvent_like
and ('a) _hTMLHtmlElement
and ('a) hTMLHtmlElement_like = (('a) _hTMLHtmlElement) hTMLElement_like
and hTMLHtmlElement = (_baseClass) hTMLHtmlElement_like
and ('a) _hTMLTimeElement
and ('a) hTMLTimeElement_like = (('a) _hTMLTimeElement) hTMLElement_like
and hTMLTimeElement = (_baseClass) hTMLTimeElement_like
and _touch
and ('a) touch_like
and touch = (_baseClass) touch_like
and ('a) _storageEvent
and ('a) storageEvent_like = (('a) _storageEvent) event_like
and storageEvent = (_baseClass) storageEvent_like
and _nonElementParentNode
and ('a) nonElementParentNode_like
and nonElementParentNode = (_baseClass) nonElementParentNode_like
and _cSSRuleList
and ('a) cSSRuleList_like
and cSSRuleList = (_baseClass) cSSRuleList_like
and ('a) _hTMLTableSectionElement
and ('a) hTMLTableSectionElement_like = (('a) _hTMLTableSectionElement) hTMLElement_like
and hTMLTableSectionElement = (_baseClass) hTMLTableSectionElement_like
and ('a) _node
and ('a) node_like = (('a) _node) eventTarget_like
and node = (_baseClass) node_like
and ('a) _vRDisplayEvent
and ('a) vRDisplayEvent_like = (('a) _vRDisplayEvent) event_like
and vRDisplayEvent = (_baseClass) vRDisplayEvent_like
and _dissimilarOriginLocation
and ('a) dissimilarOriginLocation_like
and dissimilarOriginLocation = (_baseClass) dissimilarOriginLocation_like
and _dOMImplementation
and ('a) dOMImplementation_like
and dOMImplementation = (_baseClass) dOMImplementation_like
and ('a) _popStateEvent
and ('a) popStateEvent_like = (('a) _popStateEvent) event_like
and popStateEvent = (_baseClass) popStateEvent_like
and ('a) _hTMLFrameElement
and ('a) hTMLFrameElement_like = (('a) _hTMLFrameElement) hTMLElement_like
and hTMLFrameElement = (_baseClass) hTMLFrameElement_like
and ('a) _vRDisplay
and ('a) vRDisplay_like = (('a) _vRDisplay) eventTarget_like
and vRDisplay = (_baseClass) vRDisplay_like
and _testBinding
and ('a) testBinding_like
and testBinding = (_baseClass) testBinding_like
and _workerLocation
and ('a) workerLocation_like
and workerLocation = (_baseClass) workerLocation_like
and _cSS
and ('a) cSS_like
and cSS = (_baseClass) cSS_like
and ('a) _hTMLVideoElement
and ('a) hTMLVideoElement_like = (('a) _hTMLVideoElement) hTMLMediaElement_like
and hTMLVideoElement = (_baseClass) hTMLVideoElement_like
and _canvasGradient
and ('a) canvasGradient_like
and canvasGradient = (_baseClass) canvasGradient_like
and _vRFieldOfView
and ('a) vRFieldOfView_like
and vRFieldOfView = (_baseClass) vRFieldOfView_like
and ('a) _hTMLLinkElement
and ('a) hTMLLinkElement_like = (('a) _hTMLLinkElement) hTMLElement_like
and hTMLLinkElement = (_baseClass) hTMLLinkElement_like
and ('a) _webGLContextEvent
and ('a) webGLContextEvent_like = (('a) _webGLContextEvent) event_like
and webGLContextEvent = (_baseClass) webGLContextEvent_like
and ('a) _webGLProgram
and ('a) webGLProgram_like = (('a) _webGLProgram) webGLObject_like
and webGLProgram = (_baseClass) webGLProgram_like
and ('a) _bluetoothRemoteGATTCharacteristic
and ('a) bluetoothRemoteGATTCharacteristic_like = (('a) _bluetoothRemoteGATTCharacteristic) eventTarget_like
and bluetoothRemoteGATTCharacteristic = (_baseClass) bluetoothRemoteGATTCharacteristic_like
and _characteristicEventHandlers
and ('a) characteristicEventHandlers_like
and characteristicEventHandlers = (_baseClass) characteristicEventHandlers_like
and ('a) _hTMLEmbedElement
and ('a) hTMLEmbedElement_like = (('a) _hTMLEmbedElement) hTMLElement_like
and hTMLEmbedElement = (_baseClass) hTMLEmbedElement_like
and _gamepad
and ('a) gamepad_like
and gamepad = (_baseClass) gamepad_like
and ('a) _cSSConditionRule
and ('a) cSSConditionRule_like = (('a) _cSSConditionRule) cSSGroupingRule_like
and cSSConditionRule = (_baseClass) cSSConditionRule_like
and _textDecoder
and ('a) textDecoder_like
and textDecoder = (_baseClass) textDecoder_like
and _testBindingPairIterable
and ('a) testBindingPairIterable_like
and testBindingPairIterable = (_baseClass) testBindingPairIterable_like
and ('a) _hTMLMeterElement
and ('a) hTMLMeterElement_like = (('a) _hTMLMeterElement) hTMLElement_like
and hTMLMeterElement = (_baseClass) hTMLMeterElement_like
and _hTMLHyperlinkElementUtils
and ('a) hTMLHyperlinkElementUtils_like
and hTMLHyperlinkElementUtils = (_baseClass) hTMLHyperlinkElementUtils_like
and _namedNodeMap
and ('a) namedNodeMap_like
and namedNodeMap = (_baseClass) namedNodeMap_like
and ('a) _hTMLTableCaptionElement
and ('a) hTMLTableCaptionElement_like = (('a) _hTMLTableCaptionElement) hTMLElement_like
and hTMLTableCaptionElement = (_baseClass) hTMLTableCaptionElement_like
and ('a) _cSSKeyframeRule
and ('a) cSSKeyframeRule_like = (('a) _cSSKeyframeRule) cSSRule_like
and cSSKeyframeRule = (_baseClass) cSSKeyframeRule_like
and ('a) _webGLVertexArrayObjectOES
and ('a) webGLVertexArrayObjectOES_like = (('a) _webGLVertexArrayObjectOES) webGLObject_like
and webGLVertexArrayObjectOES = (_baseClass) webGLVertexArrayObjectOES_like
and ('a) _hTMLLabelElement
and ('a) hTMLLabelElement_like = (('a) _hTMLLabelElement) hTMLElement_like
and hTMLLabelElement = (_baseClass) hTMLLabelElement_like
and ('a) _paintWorkletGlobalScope
and ('a) paintWorkletGlobalScope_like = (('a) _paintWorkletGlobalScope) workletGlobalScope_like
and paintWorkletGlobalScope = (_baseClass) paintWorkletGlobalScope_like
and ('a) _hTMLAnchorElement
and ('a) hTMLAnchorElement_like = (('a) _hTMLAnchorElement) hTMLElement_like
and hTMLAnchorElement = (_baseClass) hTMLAnchorElement_like
and ('a) _hTMLHeadElement
and ('a) hTMLHeadElement_like = (('a) _hTMLHeadElement) hTMLElement_like
and hTMLHeadElement = (_baseClass) hTMLHeadElement_like
and ('a) _hTMLOutputElement
and ('a) hTMLOutputElement_like = (('a) _hTMLOutputElement) hTMLElement_like
and hTMLOutputElement = (_baseClass) hTMLOutputElement_like
and ('a) _serviceWorkerGlobalScope
and ('a) serviceWorkerGlobalScope_like = (('a) _serviceWorkerGlobalScope) workerGlobalScope_like
and serviceWorkerGlobalScope = (_baseClass) serviceWorkerGlobalScope_like
and ('a) _webGLShader
and ('a) webGLShader_like = (('a) _webGLShader) webGLObject_like
and webGLShader = (_baseClass) webGLShader_like
and _touchList
and ('a) touchList_like
and touchList = (_baseClass) touchList_like
and _webGLActiveInfo
and ('a) webGLActiveInfo_like
and webGLActiveInfo = (_baseClass) webGLActiveInfo_like
and _plugin
and ('a) plugin_like
and plugin = (_baseClass) plugin_like
and ('a) _dedicatedWorkerGlobalScope
and ('a) dedicatedWorkerGlobalScope_like = (('a) _dedicatedWorkerGlobalScope) workerGlobalScope_like
and dedicatedWorkerGlobalScope = (_baseClass) dedicatedWorkerGlobalScope_like
and ('a) _globalScope
and ('a) globalScope_like = (('a) _globalScope) eventTarget_like
and globalScope = (_baseClass) globalScope_like
and _vRDisplayCapabilities
and ('a) vRDisplayCapabilities_like
and vRDisplayCapabilities = (_baseClass) vRDisplayCapabilities_like
and ('a) _hTMLUnknownElement
and ('a) hTMLUnknownElement_like = (('a) _hTMLUnknownElement) hTMLElement_like
and hTMLUnknownElement = (_baseClass) hTMLUnknownElement_like
and _headers
and ('a) headers_like
and headers = (_baseClass) headers_like
and ('a) _cSSMediaRule
and ('a) cSSMediaRule_like = (('a) _cSSMediaRule) cSSConditionRule_like
and cSSMediaRule = (_baseClass) cSSMediaRule_like
and _oESTextureHalfFloatLinear
and ('a) oESTextureHalfFloatLinear_like
and oESTextureHalfFloatLinear = (_baseClass) oESTextureHalfFloatLinear_like
and ('a) _hTMLParamElement
and ('a) hTMLParamElement_like = (('a) _hTMLParamElement) hTMLElement_like
and hTMLParamElement = (_baseClass) hTMLParamElement_like
and ('a) _documentType
and ('a) documentType_like = (('a) _documentType) node_like
and documentType = (_baseClass) documentType_like
and ('a) _testBindingProxy
and ('a) testBindingProxy_like = (('a) _testBindingProxy) testBinding_like
and testBindingProxy = (_baseClass) testBindingProxy_like
and ('a) _hTMLOptionElement
and ('a) hTMLOptionElement_like = (('a) _hTMLOptionElement) hTMLElement_like
and hTMLOptionElement = (_baseClass) hTMLOptionElement_like
and ('a) _hTMLFormControlsCollection
and ('a) hTMLFormControlsCollection_like = (('a) _hTMLFormControlsCollection) hTMLCollection_like
and hTMLFormControlsCollection = (_baseClass) hTMLFormControlsCollection_like
and _worklet
and ('a) worklet_like
and worklet = (_baseClass) worklet_like
and _navigator
and ('a) navigator_like
and navigator = (_baseClass) navigator_like
and _navigatorID
and ('a) navigatorID_like
and navigatorID = (_baseClass) navigatorID_like
and _navigatorLanguage
and ('a) navigatorLanguage_like
and navigatorLanguage = (_baseClass) navigatorLanguage_like
and _navigatorPlugins
and ('a) navigatorPlugins_like
and navigatorPlugins = (_baseClass) navigatorPlugins_like
and _navigatorCookies
and ('a) navigatorCookies_like
and navigatorCookies = (_baseClass) navigatorCookies_like
and _promiseNativeHandler
and ('a) promiseNativeHandler_like
and promiseNativeHandler = (_baseClass) promiseNativeHandler_like
and ('a) _hTMLOListElement
and ('a) hTMLOListElement_like = (('a) _hTMLOListElement) hTMLElement_like
and hTMLOListElement = (_baseClass) hTMLOListElement_like
and ('a) _customEvent
and ('a) customEvent_like = (('a) _customEvent) event_like
and customEvent = (_baseClass) customEvent_like
and ('a) _hTMLSelectElement
and ('a) hTMLSelectElement_like = (('a) _hTMLSelectElement) hTMLElement_like
and hTMLSelectElement = (_baseClass) hTMLSelectElement_like
and ('a) _hTMLStyleElement
and ('a) hTMLStyleElement_like = (('a) _hTMLStyleElement) hTMLElement_like
and hTMLStyleElement = (_baseClass) hTMLStyleElement_like
and ('a) _hTMLQuoteElement
and ('a) hTMLQuoteElement_like = (('a) _hTMLQuoteElement) hTMLElement_like
and hTMLQuoteElement = (_baseClass) hTMLQuoteElement_like
and ('a) _dOMPoint
and ('a) dOMPoint_like = (('a) _dOMPoint) dOMPointReadOnly_like
and dOMPoint = (_baseClass) dOMPoint_like
and _fileReaderSync
and ('a) fileReaderSync_like
and fileReaderSync = (_baseClass) fileReaderSync_like
and _imageData
and ('a) imageData_like
and imageData = (_baseClass) imageData_like
and ('a) _hTMLBRElement
and ('a) hTMLBRElement_like = (('a) _hTMLBRElement) hTMLElement_like
and hTMLBRElement = (_baseClass) hTMLBRElement_like
and _mimeType
and ('a) mimeType_like
and mimeType = (_baseClass) mimeType_like
and ('a) _pageTransitionEvent
and ('a) pageTransitionEvent_like = (('a) _pageTransitionEvent) event_like
and pageTransitionEvent = (_baseClass) pageTransitionEvent_like
and _globalCrypto
and ('a) globalCrypto_like
and globalCrypto = (_baseClass) globalCrypto_like
and _crypto
and ('a) crypto_like
and crypto = (_baseClass) crypto_like
and ('a) _hTMLButtonElement
and ('a) hTMLButtonElement_like = (('a) _hTMLButtonElement) hTMLElement_like
and hTMLButtonElement = (_baseClass) hTMLButtonElement_like
and ('a) _hTMLHRElement
and ('a) hTMLHRElement_like = (('a) _hTMLHRElement) hTMLElement_like
and hTMLHRElement = (_baseClass) hTMLHRElement_like
and _cSSStyleDeclaration
and ('a) cSSStyleDeclaration_like
and cSSStyleDeclaration = (_baseClass) cSSStyleDeclaration_like
and ('a) _hTMLTextAreaElement
and ('a) hTMLTextAreaElement_like = (('a) _hTMLTextAreaElement) hTMLElement_like
and hTMLTextAreaElement = (_baseClass) hTMLTextAreaElement_like
and _dOMQuad
and ('a) dOMQuad_like
and dOMQuad = (_baseClass) dOMQuad_like
and _request
and ('a) request_like
and request = (_baseClass) request_like
and ('a) _hTMLSourceElement
and ('a) hTMLSourceElement_like = (('a) _hTMLSourceElement) hTMLElement_like
and hTMLSourceElement = (_baseClass) hTMLSourceElement_like
and ('a) _hTMLPreElement
and ('a) hTMLPreElement_like = (('a) _hTMLPreElement) hTMLElement_like
and hTMLPreElement = (_baseClass) hTMLPreElement_like
and ('a) _hTMLModElement
and ('a) hTMLModElement_like = (('a) _hTMLModElement) hTMLElement_like
and hTMLModElement = (_baseClass) hTMLModElement_like
and ('a) _hTMLMapElement
and ('a) hTMLMapElement_like = (('a) _hTMLMapElement) hTMLElement_like
and hTMLMapElement = (_baseClass) hTMLMapElement_like
and ('a) _serviceWorker
and ('a) serviceWorker_like = (('a) _serviceWorker) eventTarget_like
and serviceWorker = (_baseClass) serviceWorker_like
and ('a) _hTMLTemplateElement
and ('a) hTMLTemplateElement_like = (('a) _hTMLTemplateElement) hTMLElement_like
and hTMLTemplateElement = (_baseClass) hTMLTemplateElement_like
and _dOMTokenList
and ('a) dOMTokenList_like
and dOMTokenList = (_baseClass) dOMTokenList_like
and ('a) _hTMLDirectoryElement
and ('a) hTMLDirectoryElement_like = (('a) _hTMLDirectoryElement) hTMLElement_like
and hTMLDirectoryElement = (_baseClass) hTMLDirectoryElement_like
and ('a) _document
and ('a) document_like = (('a) _document) node_like
and document = (_baseClass) document_like
and ('a) _hTMLInputElement
and ('a) hTMLInputElement_like = (('a) _hTMLInputElement) hTMLElement_like
and hTMLInputElement = (_baseClass) hTMLInputElement_like
and ('a) _hTMLParagraphElement
and ('a) hTMLParagraphElement_like = (('a) _hTMLParagraphElement) hTMLElement_like
and hTMLParagraphElement = (_baseClass) hTMLParagraphElement_like
and __Promise
and ('a) _Promise_like
and _Promise = (_baseClass) _Promise_like
and ('a) _characterData
and ('a) characterData_like = (('a) _characterData) node_like
and characterData = (_baseClass) characterData_like
and ('a) _hTMLAreaElement
and ('a) hTMLAreaElement_like = (('a) _hTMLAreaElement) hTMLElement_like
and hTMLAreaElement = (_baseClass) hTMLAreaElement_like
and _vRPose
and ('a) vRPose_like
and vRPose = (_baseClass) vRPose_like
and ('a) _closeEvent
and ('a) closeEvent_like = (('a) _closeEvent) event_like
and closeEvent = (_baseClass) closeEvent_like
and ('a) _processingInstruction
and ('a) processingInstruction_like = (('a) _processingInstruction) characterData_like
and processingInstruction = (_baseClass) processingInstruction_like
and ('a) _webSocket
and ('a) webSocket_like = (('a) _webSocket) eventTarget_like
and webSocket = (_baseClass) webSocket_like
and _gamepadButtonList
and ('a) gamepadButtonList_like
and gamepadButtonList = (_baseClass) gamepadButtonList_like
and _dOMPointReadOnly
and ('a) dOMPointReadOnly_like
and dOMPointReadOnly = (_baseClass) dOMPointReadOnly_like
and ('a) _hTMLSpanElement
and ('a) hTMLSpanElement_like = (('a) _hTMLSpanElement) hTMLElement_like
and hTMLSpanElement = (_baseClass) hTMLSpanElement_like
and ('a) _hTMLFormElement
and ('a) hTMLFormElement_like = (('a) _hTMLFormElement) hTMLElement_like
and hTMLFormElement = (_baseClass) hTMLFormElement_like
and ('a) _mediaQueryListEvent
and ('a) mediaQueryListEvent_like = (('a) _mediaQueryListEvent) event_like
and mediaQueryListEvent = (_baseClass) mediaQueryListEvent_like
and ('a) _webGLBuffer
and ('a) webGLBuffer_like = (('a) _webGLBuffer) webGLObject_like
and webGLBuffer = (_baseClass) webGLBuffer_like
and ('a) _xMLDocument
and ('a) xMLDocument_like = (('a) _xMLDocument) document_like
and xMLDocument = (_baseClass) xMLDocument_like
and _client
and ('a) client_like
and client = (_baseClass) client_like
and _oESTextureFloatLinear
and ('a) oESTextureFloatLinear_like
and oESTextureFloatLinear = (_baseClass) oESTextureFloatLinear_like
and ('a) _cSSViewportRule
and ('a) cSSViewportRule_like = (('a) _cSSViewportRule) cSSRule_like
and cSSViewportRule = (_baseClass) cSSViewportRule_like
and _webGLShaderPrecisionFormat
and ('a) webGLShaderPrecisionFormat_like
and webGLShaderPrecisionFormat = (_baseClass) webGLShaderPrecisionFormat_like
and _response
and ('a) response_like
and response = (_baseClass) response_like
and _mediaError
and ('a) mediaError_like
and mediaError = (_baseClass) mediaError_like
and ('a) _extendableEvent
and ('a) extendableEvent_like = (('a) _extendableEvent) event_like
and extendableEvent = (_baseClass) extendableEvent_like
and ('a) _progressEvent
and ('a) progressEvent_like = (('a) _progressEvent) event_like
and progressEvent = (_baseClass) progressEvent_like
and ('a) _hTMLDataListElement
and ('a) hTMLDataListElement_like = (('a) _hTMLDataListElement) hTMLElement_like
and hTMLDataListElement = (_baseClass) hTMLDataListElement_like
and ('a) _webGLRenderbuffer
and ('a) webGLRenderbuffer_like = (('a) _webGLRenderbuffer) webGLObject_like
and webGLRenderbuffer = (_baseClass) webGLRenderbuffer_like
and ('a) _hTMLCanvasElement
and ('a) hTMLCanvasElement_like = (('a) _hTMLCanvasElement) hTMLElement_like
and hTMLCanvasElement = (_baseClass) hTMLCanvasElement_like
and _vRStageParameters
and ('a) vRStageParameters_like
and vRStageParameters = (_baseClass) vRStageParameters_like
and ('a) _hTMLTrackElement
and ('a) hTMLTrackElement_like = (('a) _hTMLTrackElement) hTMLElement_like
and hTMLTrackElement = (_baseClass) hTMLTrackElement_like
and ('a) _mouseEvent
and ('a) mouseEvent_like = (('a) _mouseEvent) uIEvent_like
and mouseEvent = (_baseClass) mouseEvent_like
and ('a) _hTMLTableRowElement
and ('a) hTMLTableRowElement_like = (('a) _hTMLTableRowElement) hTMLElement_like
and hTMLTableRowElement = (_baseClass) hTMLTableRowElement_like
and ('a) _bluetooth
and ('a) bluetooth_like = (('a) _bluetooth) eventTarget_like
and bluetooth = (_baseClass) bluetooth_like
and ('a) _hTMLDivElement
and ('a) hTMLDivElement_like = (('a) _hTMLDivElement) hTMLElement_like
and hTMLDivElement = (_baseClass) hTMLDivElement_like
and _abstractWorker
and ('a) abstractWorker_like
and abstractWorker = (_baseClass) abstractWorker_like
and ('a) _worker
and ('a) worker_like = (('a) _worker) eventTarget_like
and worker = (_baseClass) worker_like
and ('a) _transitionEvent
and ('a) transitionEvent_like = (('a) _transitionEvent) event_like
and transitionEvent = (_baseClass) transitionEvent_like
and _testWorklet
and ('a) testWorklet_like
and testWorklet = (_baseClass) testWorklet_like
and ('a) _mediaQueryList
and ('a) mediaQueryList_like = (('a) _mediaQueryList) eventTarget_like
and mediaQueryList = (_baseClass) mediaQueryList_like
and _cSSRule
and ('a) cSSRule_like
and cSSRule = (_baseClass) cSSRule_like
and ('a) _xMLHttpRequestEventTarget
and ('a) xMLHttpRequestEventTarget_like = (('a) _xMLHttpRequestEventTarget) eventTarget_like
and xMLHttpRequestEventTarget = (_baseClass) xMLHttpRequestEventTarget_like
and ('a) _cSSKeyframesRule
and ('a) cSSKeyframesRule_like = (('a) _cSSKeyframesRule) cSSRule_like
and cSSKeyframesRule = (_baseClass) cSSKeyframesRule_like
and ('a) _hTMLAppletElement
and ('a) hTMLAppletElement_like = (('a) _hTMLAppletElement) hTMLElement_like
and hTMLAppletElement = (_baseClass) hTMLAppletElement_like
and ('a) _hTMLTableDataCellElement
and ('a) hTMLTableDataCellElement_like = (('a) _hTMLTableDataCellElement) hTMLTableCellElement_like
and hTMLTableDataCellElement = (_baseClass) hTMLTableDataCellElement_like
and _bluetoothUUID
and ('a) bluetoothUUID_like
and bluetoothUUID = (_baseClass) bluetoothUUID_like
and ('a) _hTMLDialogElement
and ('a) hTMLDialogElement_like = (('a) _hTMLDialogElement) hTMLElement_like
and hTMLDialogElement = (_baseClass) hTMLDialogElement_like
and _canvasRenderingContext2D
and ('a) canvasRenderingContext2D_like
and canvasRenderingContext2D = (_baseClass) canvasRenderingContext2D_like
and _canvasState
and ('a) canvasState_like
and canvasState = (_baseClass) canvasState_like
and _canvasTransform
and ('a) canvasTransform_like
and canvasTransform = (_baseClass) canvasTransform_like
and _canvasCompositing
and ('a) canvasCompositing_like
and canvasCompositing = (_baseClass) canvasCompositing_like
and _canvasImageSmoothing
and ('a) canvasImageSmoothing_like
and canvasImageSmoothing = (_baseClass) canvasImageSmoothing_like
and _canvasFillStrokeStyles
and ('a) canvasFillStrokeStyles_like
and canvasFillStrokeStyles = (_baseClass) canvasFillStrokeStyles_like
and _canvasShadowStyles
and ('a) canvasShadowStyles_like
and canvasShadowStyles = (_baseClass) canvasShadowStyles_like
and _canvasRect
and ('a) canvasRect_like
and canvasRect = (_baseClass) canvasRect_like
and _canvasDrawPath
and ('a) canvasDrawPath_like
and canvasDrawPath = (_baseClass) canvasDrawPath_like
and _canvasUserInterface
and ('a) canvasUserInterface_like
and canvasUserInterface = (_baseClass) canvasUserInterface_like
and _canvasText
and ('a) canvasText_like
and canvasText = (_baseClass) canvasText_like
and _canvasDrawImage
and ('a) canvasDrawImage_like
and canvasDrawImage = (_baseClass) canvasDrawImage_like
and _canvasHitRegion
and ('a) canvasHitRegion_like
and canvasHitRegion = (_baseClass) canvasHitRegion_like
and _canvasImageData
and ('a) canvasImageData_like
and canvasImageData = (_baseClass) canvasImageData_like
and _canvasPathDrawingStyles
and ('a) canvasPathDrawingStyles_like
and canvasPathDrawingStyles = (_baseClass) canvasPathDrawingStyles_like
and _canvasTextDrawingStyles
and ('a) canvasTextDrawingStyles_like
and canvasTextDrawingStyles = (_baseClass) canvasTextDrawingStyles_like
and _canvasPath
and ('a) canvasPath_like
and canvasPath = (_baseClass) canvasPath_like
and _mediaList
and ('a) mediaList_like
and mediaList = (_baseClass) mediaList_like
and _oESTextureFloat
and ('a) oESTextureFloat_like
and oESTextureFloat = (_baseClass) oESTextureFloat_like
and ('a) _bluetoothAdvertisingEvent
and ('a) bluetoothAdvertisingEvent_like = (('a) _bluetoothAdvertisingEvent) event_like
and bluetoothAdvertisingEvent = (_baseClass) bluetoothAdvertisingEvent_like
and _permissions
and ('a) permissions_like
and permissions = (_baseClass) permissions_like
and ('a) _hTMLFrameSetElement
and ('a) hTMLFrameSetElement_like = (('a) _hTMLFrameSetElement) hTMLElement_like
and hTMLFrameSetElement = (_baseClass) hTMLFrameSetElement_like
and ('a) _cSSNamespaceRule
and ('a) cSSNamespaceRule_like = (('a) _cSSNamespaceRule) cSSRule_like
and cSSNamespaceRule = (_baseClass) cSSNamespaceRule_like
and _canvasPattern
and ('a) canvasPattern_like
and canvasPattern = (_baseClass) canvasPattern_like
and ('a) _hTMLDetailsElement
and ('a) hTMLDetailsElement_like = (('a) _hTMLDetailsElement) hTMLElement_like
and hTMLDetailsElement = (_baseClass) hTMLDetailsElement_like
and _mutationRecord
and ('a) mutationRecord_like
and mutationRecord = (_baseClass) mutationRecord_like
and _storage
and ('a) storage_like
and storage = (_baseClass) storage_like
and ('a) _hashChangeEvent
and ('a) hashChangeEvent_like = (('a) _hashChangeEvent) event_like
and hashChangeEvent = (_baseClass) hashChangeEvent_like
and ('a) _element
and ('a) element_like = (('a) _element) node_like
and element = (_baseClass) element_like
and ('a) _testWorkletGlobalScope
and ('a) testWorkletGlobalScope_like = (('a) _testWorkletGlobalScope) workletGlobalScope_like
and testWorkletGlobalScope = (_baseClass) testWorkletGlobalScope_like
and ('a) _hTMLProgressElement
and ('a) hTMLProgressElement_like = (('a) _hTMLProgressElement) hTMLElement_like
and hTMLProgressElement = (_baseClass) hTMLProgressElement_like
and ('a) _cSSGroupingRule
and ('a) cSSGroupingRule_like = (('a) _cSSGroupingRule) cSSRule_like
and cSSGroupingRule = (_baseClass) cSSGroupingRule_like
and _mutationObserver
and ('a) mutationObserver_like
and mutationObserver = (_baseClass) mutationObserver_like
and _testBindingIterable
and ('a) testBindingIterable_like
and testBindingIterable = (_baseClass) testBindingIterable_like
and ('a) _sVGElement
and ('a) sVGElement_like = (('a) _sVGElement) element_like
and sVGElement = (_baseClass) sVGElement_like
and ('a) _bluetoothRemoteGATTService
and ('a) bluetoothRemoteGATTService_like = (('a) _bluetoothRemoteGATTService) eventTarget_like
and bluetoothRemoteGATTService = (_baseClass) bluetoothRemoteGATTService_like
and _serviceEventHandlers
and ('a) serviceEventHandlers_like
and serviceEventHandlers = (_baseClass) serviceEventHandlers_like
and ('a) _focusEvent
and ('a) focusEvent_like = (('a) _focusEvent) uIEvent_like
and focusEvent = (_baseClass) focusEvent_like
and _textEncoder
and ('a) textEncoder_like
and textEncoder = (_baseClass) textEncoder_like
and ('a) _webGLTexture
and ('a) webGLTexture_like = (('a) _webGLTexture) webGLObject_like
and webGLTexture = (_baseClass) webGLTexture_like
and _event
and ('a) event_like
and event = (_baseClass) event_like
and _validityState
and ('a) validityState_like
and validityState = (_baseClass) validityState_like
and ('a) _hTMLFontElement
and ('a) hTMLFontElement_like = (('a) _hTMLFontElement) hTMLElement_like
and hTMLFontElement = (_baseClass) hTMLFontElement_like
and ('a) _window
and ('a) window_like = (('a) _window) globalScope_like
and window = (_baseClass) window_like
and _windowProxy
and ('a) windowProxy_like
and windowProxy = (_baseClass) windowProxy_like
and _windowTimers
and ('a) windowTimers_like
and windowTimers = (_baseClass) windowTimers_like
and _windowBase64
and ('a) windowBase64_like
and windowBase64 = (_baseClass) windowBase64_like
and _windowSessionStorage
and ('a) windowSessionStorage_like
and windowSessionStorage = (_baseClass) windowSessionStorage_like
and _windowLocalStorage
and ('a) windowLocalStorage_like
and windowLocalStorage = (_baseClass) windowLocalStorage_like
and _dOMStringMap
and ('a) dOMStringMap_like
and dOMStringMap = (_baseClass) dOMStringMap_like
and ('a) _workerGlobalScope
and ('a) workerGlobalScope_like = (('a) _workerGlobalScope) globalScope_like
and workerGlobalScope = (_baseClass) workerGlobalScope_like
and _globalEventHandlers
and ('a) globalEventHandlers_like
and globalEventHandlers = (_baseClass) globalEventHandlers_like
and _windowEventHandlers
and ('a) windowEventHandlers_like
and windowEventHandlers = (_baseClass) windowEventHandlers_like
and _documentAndElementEventHandlers
and ('a) documentAndElementEventHandlers_like
and documentAndElementEventHandlers = (_baseClass) documentAndElementEventHandlers_like
and _blob
and ('a) blob_like
and blob = (_baseClass) blob_like
and ('a) _fileReader
and ('a) fileReader_like = (('a) _fileReader) eventTarget_like
and fileReader = (_baseClass) fileReader_like
and ('a) _cSSStyleSheet
and ('a) cSSStyleSheet_like = (('a) _cSSStyleSheet) styleSheet_like
and cSSStyleSheet = (_baseClass) cSSStyleSheet_like
and ('a) _hTMLTableCellElement
and ('a) hTMLTableCellElement_like = (('a) _hTMLTableCellElement) hTMLElement_like
and hTMLTableCellElement = (_baseClass) hTMLTableCellElement_like
and _vRFrameData
and ('a) vRFrameData_like
and vRFrameData = (_baseClass) vRFrameData_like
and ('a) _hTMLTableElement
and ('a) hTMLTableElement_like = (('a) _hTMLTableElement) hTMLElement_like
and hTMLTableElement = (_baseClass) hTMLTableElement_like
and ('a) _hTMLHeadingElement
and ('a) hTMLHeadingElement_like = (('a) _hTMLHeadingElement) hTMLElement_like
and hTMLHeadingElement = (_baseClass) hTMLHeadingElement_like
and ('a) _workletGlobalScope
and ('a) workletGlobalScope_like = (('a) _workletGlobalScope) globalScope_like
and workletGlobalScope = (_baseClass) workletGlobalScope_like
and _servoParser
and ('a) servoParser_like
and servoParser = (_baseClass) servoParser_like
and _attr
and ('a) attr_like
and attr = (_baseClass) attr_like
and ('a) _text
and ('a) text_like = (('a) _text) characterData_like
and text = (_baseClass) text_like
and _activatableElement
and ('a) activatableElement_like
and activatableElement = (_baseClass) activatableElement_like
and _styleSheetList
and ('a) styleSheetList_like
and styleSheetList = (_baseClass) styleSheetList_like
and _eventSourceInit
and ('a) eventSourceInit_like
and eventSourceInit = (_baseClass) eventSourceInit_like
and _elementDefinitionOptions
and ('a) elementDefinitionOptions_like
and elementDefinitionOptions = (_baseClass) elementDefinitionOptions_like
and ('a) _uIEventInit
and ('a) uIEventInit_like = (('a) _uIEventInit) eventInit_like
and uIEventInit = (_baseClass) uIEventInit_like
and ('a) _gamepadEventInit
and ('a) gamepadEventInit_like = (('a) _gamepadEventInit) eventInit_like
and gamepadEventInit = (_baseClass) gamepadEventInit_like
and _dOMMatrixInit
and ('a) dOMMatrixInit_like
and dOMMatrixInit = (_baseClass) dOMMatrixInit_like
and _vRLayer
and ('a) vRLayer_like
and vRLayer = (_baseClass) vRLayer_like
and _iterableKeyOrValueResult
and ('a) iterableKeyOrValueResult_like
and iterableKeyOrValueResult = (_baseClass) iterableKeyOrValueResult_like
and _iterableKeyAndValueResult
and ('a) iterableKeyAndValueResult_like
and iterableKeyAndValueResult = (_baseClass) iterableKeyAndValueResult_like
and _registrationOptions
and ('a) registrationOptions_like
and registrationOptions = (_baseClass) registrationOptions_like
and ('a) _bluetoothPermissionDescriptor
and ('a) bluetoothPermissionDescriptor_like = (('a) _bluetoothPermissionDescriptor) permissionDescriptor_like
and bluetoothPermissionDescriptor = (_baseClass) bluetoothPermissionDescriptor_like
and ('a) _errorEventInit
and ('a) errorEventInit_like = (('a) _errorEventInit) eventInit_like
and errorEventInit = (_baseClass) errorEventInit_like
and _permissionDescriptor
and ('a) permissionDescriptor_like
and permissionDescriptor = (_baseClass) permissionDescriptor_like
and ('a) _pushPermissionDescriptor
and ('a) pushPermissionDescriptor_like = (('a) _pushPermissionDescriptor) permissionDescriptor_like
and pushPermissionDescriptor = (_baseClass) pushPermissionDescriptor_like
and ('a) _midiPermissionDescriptor
and ('a) midiPermissionDescriptor_like = (('a) _midiPermissionDescriptor) permissionDescriptor_like
and midiPermissionDescriptor = (_baseClass) midiPermissionDescriptor_like
and ('a) _devicePermissionDescriptor
and ('a) devicePermissionDescriptor_like = (('a) _devicePermissionDescriptor) permissionDescriptor_like
and devicePermissionDescriptor = (_baseClass) devicePermissionDescriptor_like
and ('a) _messageEventInit
and ('a) messageEventInit_like = (('a) _messageEventInit) eventInit_like
and messageEventInit = (_baseClass) messageEventInit_like
and ('a) _keyboardEventInit
and ('a) keyboardEventInit_like = (('a) _keyboardEventInit) eventModifierInit_like
and keyboardEventInit = (_baseClass) keyboardEventInit_like
and _webGLContextAttributes
and ('a) webGLContextAttributes_like
and webGLContextAttributes = (_baseClass) webGLContextAttributes_like
and _dOMRectInit
and ('a) dOMRectInit_like
and dOMRectInit = (_baseClass) dOMRectInit_like
and _browserElementSecurityChangeDetail
and ('a) browserElementSecurityChangeDetail_like
and browserElementSecurityChangeDetail = (_baseClass) browserElementSecurityChangeDetail_like
and _browserElementErrorEventDetail
and ('a) browserElementErrorEventDetail_like
and browserElementErrorEventDetail = (_baseClass) browserElementErrorEventDetail_like
and _browserElementLocationChangeEventDetail
and ('a) browserElementLocationChangeEventDetail_like
and browserElementLocationChangeEventDetail = (_baseClass) browserElementLocationChangeEventDetail_like
and _browserElementIconChangeEventDetail
and ('a) browserElementIconChangeEventDetail_like
and browserElementIconChangeEventDetail = (_baseClass) browserElementIconChangeEventDetail_like
and _browserShowModalPromptEventDetail
and ('a) browserShowModalPromptEventDetail_like
and browserShowModalPromptEventDetail = (_baseClass) browserShowModalPromptEventDetail_like
and _browserElementOpenTabEventDetail
and ('a) browserElementOpenTabEventDetail_like
and browserElementOpenTabEventDetail = (_baseClass) browserElementOpenTabEventDetail_like
and _browserElementOpenWindowEventDetail
and ('a) browserElementOpenWindowEventDetail_like
and browserElementOpenWindowEventDetail = (_baseClass) browserElementOpenWindowEventDetail_like
and _browserElementVisibilityChangeEventDetail
and ('a) browserElementVisibilityChangeEventDetail_like
and browserElementVisibilityChangeEventDetail = (_baseClass) browserElementVisibilityChangeEventDetail_like
and ('a) _filePropertyBag
and ('a) filePropertyBag_like = (('a) _filePropertyBag) blobPropertyBag_like
and filePropertyBag = (_baseClass) filePropertyBag_like
and ('a) _extendableMessageEventInit
and ('a) extendableMessageEventInit_like = (('a) _extendableMessageEventInit) extendableEventInit_like
and extendableMessageEventInit = (_baseClass) extendableMessageEventInit_like
and ('a) _storageEventInit
and ('a) storageEventInit_like = (('a) _storageEventInit) eventInit_like
and storageEventInit = (_baseClass) storageEventInit_like
and ('a) _vRDisplayEventInit
and ('a) vRDisplayEventInit_like = (('a) _vRDisplayEventInit) eventInit_like
and vRDisplayEventInit = (_baseClass) vRDisplayEventInit_like
and ('a) _popStateEventInit
and ('a) popStateEventInit_like = (('a) _popStateEventInit) eventInit_like
and popStateEventInit = (_baseClass) popStateEventInit_like
and _testDictionary
and ('a) testDictionary_like
and testDictionary = (_baseClass) testDictionary_like
and _testDictionaryDefaults
and ('a) testDictionaryDefaults_like
and testDictionaryDefaults = (_baseClass) testDictionaryDefaults_like
and ('a) _webGLContextEventInit
and ('a) webGLContextEventInit_like = (('a) _webGLContextEventInit) eventInit_like
and webGLContextEventInit = (_baseClass) webGLContextEventInit_like
and _textDecoderOptions
and ('a) textDecoderOptions_like
and textDecoderOptions = (_baseClass) textDecoderOptions_like
and _workletOptions
and ('a) workletOptions_like
and workletOptions = (_baseClass) workletOptions_like
and ('a) _customEventInit
and ('a) customEventInit_like = (('a) _customEventInit) eventInit_like
and customEventInit = (_baseClass) customEventInit_like
and _dOMPointInit
and ('a) dOMPointInit_like
and dOMPointInit = (_baseClass) dOMPointInit_like
and ('a) _pageTransitionEventInit
and ('a) pageTransitionEventInit_like = (('a) _pageTransitionEventInit) eventInit_like
and pageTransitionEventInit = (_baseClass) pageTransitionEventInit_like
and _dOMQuadInit
and ('a) dOMQuadInit_like
and dOMQuadInit = (_baseClass) dOMQuadInit_like
and _requestInit
and ('a) requestInit_like
and requestInit = (_baseClass) requestInit_like
and _elementCreationOptions
and ('a) elementCreationOptions_like
and elementCreationOptions = (_baseClass) elementCreationOptions_like
and ('a) _closeEventInit
and ('a) closeEventInit_like = (('a) _closeEventInit) eventInit_like
and closeEventInit = (_baseClass) closeEventInit_like
and ('a) _mediaQueryListEventInit
and ('a) mediaQueryListEventInit_like = (('a) _mediaQueryListEventInit) eventInit_like
and mediaQueryListEventInit = (_baseClass) mediaQueryListEventInit_like
and _responseInit
and ('a) responseInit_like
and responseInit = (_baseClass) responseInit_like
and ('a) _extendableEventInit
and ('a) extendableEventInit_like = (('a) _extendableEventInit) eventInit_like
and extendableEventInit = (_baseClass) extendableEventInit_like
and ('a) _progressEventInit
and ('a) progressEventInit_like = (('a) _progressEventInit) eventInit_like
and progressEventInit = (_baseClass) progressEventInit_like
and ('a) _mouseEventInit
and ('a) mouseEventInit_like = (('a) _mouseEventInit) eventModifierInit_like
and mouseEventInit = (_baseClass) mouseEventInit_like
and _bluetoothDataFilterInit
and ('a) bluetoothDataFilterInit_like
and bluetoothDataFilterInit = (_baseClass) bluetoothDataFilterInit_like
and _bluetoothLEScanFilterInit
and ('a) bluetoothLEScanFilterInit_like
and bluetoothLEScanFilterInit = (_baseClass) bluetoothLEScanFilterInit_like
and _requestDeviceOptions
and ('a) requestDeviceOptions_like
and requestDeviceOptions = (_baseClass) requestDeviceOptions_like
and ('a) _transitionEventInit
and ('a) transitionEventInit_like = (('a) _transitionEventInit) eventInit_like
and transitionEventInit = (_baseClass) transitionEventInit_like
and ('a) _eventModifierInit
and ('a) eventModifierInit_like = (('a) _eventModifierInit) uIEventInit_like
and eventModifierInit = (_baseClass) eventModifierInit_like
and ('a) _bluetoothAdvertisingEventInit
and ('a) bluetoothAdvertisingEventInit_like = (('a) _bluetoothAdvertisingEventInit) eventInit_like
and bluetoothAdvertisingEventInit = (_baseClass) bluetoothAdvertisingEventInit_like
and ('a) _hashChangeEventInit
and ('a) hashChangeEventInit_like = (('a) _hashChangeEventInit) eventInit_like
and hashChangeEventInit = (_baseClass) hashChangeEventInit_like
and _mutationObserverInit
and ('a) mutationObserverInit_like
and mutationObserverInit = (_baseClass) mutationObserverInit_like
and ('a) _focusEventInit
and ('a) focusEventInit_like = (('a) _focusEventInit) uIEventInit_like
and focusEventInit = (_baseClass) focusEventInit_like
and _eventInit
and ('a) eventInit_like
and eventInit = (_baseClass) eventInit_like
and _scrollOptions
and ('a) scrollOptions_like
and scrollOptions = (_baseClass) scrollOptions_like
and ('a) _scrollToOptions
and ('a) scrollToOptions_like = (('a) _scrollToOptions) scrollOptions_like
and scrollToOptions = (_baseClass) scrollToOptions_like
and _blobPropertyBag
and ('a) blobPropertyBag_like
and blobPropertyBag = (_baseClass) blobPropertyBag_like
and _nodeFilter
and ('a) nodeFilter_like
and nodeFilter = (_baseClass) nodeFilter_like
and _eventListener
and ('a) eventListener_like
and eventListener = (_baseClass) eventListener_like

(* modules *)
 module Console = struct
    
    
    external assert_ : condition:Js.boolean -> ?message:string Js.undefined ->  unit = "assert" [@@bs.send.pipe: ('own) console_like] 
    external debug : console:('own) console_like ->  (('own) console_like, unit, (string)) variadic_func = "debug" [@@bs.get]
    external error : console:('own) console_like ->  (('own) console_like, unit, (string)) variadic_func = "error" [@@bs.get]
    external info : console:('own) console_like ->  (('own) console_like, unit, (string)) variadic_func = "info" [@@bs.get]
    external log : console:('own) console_like ->  (('own) console_like, unit, (string)) variadic_func = "log" [@@bs.get]
    external time : message:string ->  unit = "time" [@@bs.send.pipe: ('own) console_like] 
    external timeEnd : message:string ->  unit = "timeEnd" [@@bs.send.pipe: ('own) console_like] 
    external warn : console:('own) console_like ->  (('own) console_like, unit, (string)) variadic_func = "warn" [@@bs.get]
    
    let assert_ ~condition ?message console =
      let conv_message = Js_undefined.from_opt in
      let message = conv_message message in
      assert_ ~condition ~message console
    
    let debug ~messages console =
      let func = debug console in
      let args = to_arg messages in
      apply func console args
    
    let error ~messages console =
      let func = error console in
      let args = to_arg messages in
      apply func console args
    
    let info ~messages console =
      let func = info console in
      let args = to_arg messages in
      apply func console args
    
    let log ~messages console =
      let func = log console in
      let args = to_arg messages in
      apply func console args
    
    let warn ~messages console =
      let func = warn console in
      let args = to_arg messages in
      apply func console args
    
end
 module Performance = struct
    
    
    external timing : performance:('own) performance_like ->  performanceTiming = "timing" [@@bs.get] 
    external now :  float = "now" [@@bs.send.pipe: ('own) performance_like] 
    
    
end
 module CustomElementRegistry = struct
    
    
    external define : name:string -> constructor_:('a1 -> 'a2 [@bs]) -> ?options:(_) elementDefinitionOptions_like Js.undefined ->  unit = "define" [@@bs.send.pipe: ('own) customElementRegistry_like] 
    external get : name:string ->  'a3 = "get" [@@bs.send.pipe: ('own) customElementRegistry_like] 
    external whenDefined : name:string ->  unit Js.Promise.t = "whenDefined" [@@bs.send.pipe: ('own) customElementRegistry_like] 
    
    let define ~name ~constructor_ ?options customElementRegistry =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      define ~name ~constructor_ ~options customElementRegistry
    
end
 module GamepadList = struct
    
    
    external length : gamepadList:('own) gamepadList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  gamepad option = "item" [@@bs.send.pipe: ('own) gamepadList_like] [@@bs.return null_to_opt]
    
    
end
 module URLSearchParams = struct
    
    
    external append : name:string -> value:string ->  unit = "append" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    external get : name:string ->  string option = "get" [@@bs.send.pipe: ('own) uRLSearchParams_like] [@@bs.return null_to_opt]
    external getAll : name:string ->  string array = "getAll" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    external set : name:string -> value:string ->  unit = "set" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) uRLSearchParams_like] 
    
    
end
 module GamepadButton = struct
    
    
    external pressed : gamepadButton:('own) gamepadButton_like ->  bool = "pressed" [@@bs.get] 
    external touched : gamepadButton:('own) gamepadButton_like ->  bool = "touched" [@@bs.get] 
    external value : gamepadButton:('own) gamepadButton_like ->  float = "value" [@@bs.get] 
    
    
end
 module ElementContentEditable = struct
    
    
    
    
    
end
 module MimeTypeArray = struct
    
    
    external length : mimeTypeArray:('own) mimeTypeArray_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  mimeType option = "item" [@@bs.send.pipe: ('own) mimeTypeArray_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  mimeType option = "namedItem" [@@bs.send.pipe: ('own) mimeTypeArray_like] [@@bs.return null_to_opt]
    
    
end
 module FormData = struct
    
    
    external append : name:string -> value:(_) blob_like -> ?filename:string Js.undefined ->  unit = "append" [@@bs.send.pipe: ('own) formData_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) formData_like] 
    external get : name:string ->  'a4 option = "get" [@@bs.send.pipe: ('own) formData_like] [@@bs.return null_to_opt]
    external getAll : name:string ->  'a5 array = "getAll" [@@bs.send.pipe: ('own) formData_like] 
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) formData_like] 
    external set : name:string -> value:(_) blob_like -> ?filename:string Js.undefined ->  unit = "set" [@@bs.send.pipe: ('own) formData_like] 
    
    let append ~name ~value ?filename formData =
      let conv_filename = Js_undefined.from_opt in
      let filename = conv_filename filename in
      append ~name ~value ~filename formData
    
    let set ~name ~value ?filename formData =
      let conv_filename = Js_undefined.from_opt in
      let filename = conv_filename filename in
      set ~name ~value ~filename formData
    
end
 module TreeWalker = struct
    
    
    external root : treeWalker:('own) treeWalker_like ->  node = "root" [@@bs.get] 
    external whatToShow : treeWalker:('own) treeWalker_like ->  int = "whatToShow" [@@bs.get] 
    external filter : treeWalker:('own) treeWalker_like ->  nodeFilter option = "filter" [@@bs.get] [@@bs.return null_to_opt]
    external currentNode : treeWalker:('own) treeWalker_like ->  node = "currentNode" [@@bs.get] 
    external setCurrentNode : treeWalker:('own) treeWalker_like -> currentNode:node ->  unit = "currentNode" [@@bs.set]
    external firstChild :  node option = "firstChild" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external lastChild :  node option = "lastChild" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external nextNode :  node option = "nextNode" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external nextSibling :  node option = "nextSibling" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external parentNode :  node option = "parentNode" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external previousNode :  node option = "previousNode" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    external previousSibling :  node option = "previousSibling" [@@bs.send.pipe: ('own) treeWalker_like] [@@bs.return null_to_opt]
    
    
end
 module DOMMatrixReadOnly = struct
    
    
    external a : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "a" [@@bs.get] 
    external b : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "b" [@@bs.get] 
    external c : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "c" [@@bs.get] 
    external d : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "d" [@@bs.get] 
    external e : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "e" [@@bs.get] 
    external f : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "f" [@@bs.get] 
    external m11 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m11" [@@bs.get] 
    external m12 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m12" [@@bs.get] 
    external m13 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m13" [@@bs.get] 
    external m14 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m14" [@@bs.get] 
    external m21 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m21" [@@bs.get] 
    external m22 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m22" [@@bs.get] 
    external m23 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m23" [@@bs.get] 
    external m24 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m24" [@@bs.get] 
    external m31 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m31" [@@bs.get] 
    external m32 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m32" [@@bs.get] 
    external m33 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m33" [@@bs.get] 
    external m34 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m34" [@@bs.get] 
    external m41 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m41" [@@bs.get] 
    external m42 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m42" [@@bs.get] 
    external m43 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m43" [@@bs.get] 
    external m44 : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  float = "m44" [@@bs.get] 
    external is2D : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  bool = "is2D" [@@bs.get] 
    external isIdentity : dOMMatrixReadOnly:('own) dOMMatrixReadOnly_like ->  bool = "isIdentity" [@@bs.get] 
    external flipX :  dOMMatrix = "flipX" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external flipY :  dOMMatrix = "flipY" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external fromMatrix : ?other:(_) dOMMatrixInit_like Js.undefined ->  dOMMatrixReadOnly = "fromMatrix" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external inverse :  dOMMatrix = "inverse" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external multiply : ?other:(_) dOMMatrixInit_like Js.undefined ->  dOMMatrix = "multiply" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external rotate : ?rotX:float Js.undefined -> ?rotY:float Js.undefined -> ?rotZ:float Js.undefined ->  dOMMatrix = "rotate" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external rotateAxisAngle : ?x:float Js.undefined -> ?y:float Js.undefined -> ?z:float Js.undefined -> ?angle:float Js.undefined ->  dOMMatrix = "rotateAxisAngle" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external rotateFromVector : ?x:float Js.undefined -> ?y:float Js.undefined ->  dOMMatrix = "rotateFromVector" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external scale : ?scaleX:float Js.undefined -> ?scaleY:float Js.undefined -> ?scaleZ:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  dOMMatrix = "scale" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external scale3d : ?scale:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  dOMMatrix = "scale3d" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external skewX : ?sx:float Js.undefined ->  dOMMatrix = "skewX" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external skewY : ?sy:float Js.undefined ->  dOMMatrix = "skewY" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external transformPoint : ?point:(_) dOMPointInit_like Js.undefined ->  dOMPoint = "transformPoint" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    external translate : ?tx:float Js.undefined -> ?ty:float Js.undefined -> ?tz:float Js.undefined ->  dOMMatrix = "translate" [@@bs.send.pipe: ('own) dOMMatrixReadOnly_like] 
    
    let fromMatrix ?other dOMMatrixReadOnly =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromMatrix ~other dOMMatrixReadOnly
    
    let multiply ?other dOMMatrixReadOnly =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      multiply ~other dOMMatrixReadOnly
    
    let rotate ?rotX ?rotY ?rotZ dOMMatrixReadOnly =
      let conv_rotX = Js_undefined.from_opt in
      let rotX = conv_rotX rotX in
      let conv_rotY = Js_undefined.from_opt in
      let rotY = conv_rotY rotY in
      let conv_rotZ = Js_undefined.from_opt in
      let rotZ = conv_rotZ rotZ in
      rotate ~rotX ~rotY ~rotZ dOMMatrixReadOnly
    
    let rotateAxisAngle ?x ?y ?z ?angle dOMMatrixReadOnly =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      let conv_z = Js_undefined.from_opt in
      let z = conv_z z in
      let conv_angle = Js_undefined.from_opt in
      let angle = conv_angle angle in
      rotateAxisAngle ~x ~y ~z ~angle dOMMatrixReadOnly
    
    let rotateFromVector ?x ?y dOMMatrixReadOnly =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      rotateFromVector ~x ~y dOMMatrixReadOnly
    
    let scale ?scaleX ?scaleY ?scaleZ ?originX ?originY ?originZ dOMMatrixReadOnly =
      let conv_scaleX = Js_undefined.from_opt in
      let scaleX = conv_scaleX scaleX in
      let conv_scaleY = Js_undefined.from_opt in
      let scaleY = conv_scaleY scaleY in
      let conv_scaleZ = Js_undefined.from_opt in
      let scaleZ = conv_scaleZ scaleZ in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale ~scaleX ~scaleY ~scaleZ ~originX ~originY ~originZ dOMMatrixReadOnly
    
    let scale3d ?scale ?originX ?originY ?originZ dOMMatrixReadOnly =
      let conv_scale = Js_undefined.from_opt in
      let scale = conv_scale scale in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale3d ~scale ~originX ~originY ~originZ dOMMatrixReadOnly
    
    let skewX ?sx dOMMatrixReadOnly =
      let conv_sx = Js_undefined.from_opt in
      let sx = conv_sx sx in
      skewX ~sx dOMMatrixReadOnly
    
    let skewY ?sy dOMMatrixReadOnly =
      let conv_sy = Js_undefined.from_opt in
      let sy = conv_sy sy in
      skewY ~sy dOMMatrixReadOnly
    
    let transformPoint ?point dOMMatrixReadOnly =
      let conv_point = Js_undefined.from_opt in
      let point = conv_point point in
      transformPoint ~point dOMMatrixReadOnly
    
    let translate ?tx ?ty ?tz dOMMatrixReadOnly =
      let conv_tx = Js_undefined.from_opt in
      let tx = conv_tx tx in
      let conv_ty = Js_undefined.from_opt in
      let ty = conv_ty ty in
      let conv_tz = Js_undefined.from_opt in
      let tz = conv_tz tz in
      translate ~tx ~ty ~tz dOMMatrixReadOnly
    
end
 module ParentNode = struct
    
    
    external children : parentNode:('own) parentNode_like ->  hTMLCollection = "children" [@@bs.get] 
    external firstElementChild : parentNode:('own) parentNode_like ->  element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : parentNode:('own) parentNode_like ->  element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : parentNode:('own) parentNode_like ->  int = "childElementCount" [@@bs.get] 
    external append : parentNode:('own) parentNode_like ->  (('own) parentNode_like, unit, ('a6)) variadic_func = "append" [@@bs.get]
    external prepend : parentNode:('own) parentNode_like ->  (('own) parentNode_like, unit, ('a7)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  element option = "querySelector" [@@bs.send.pipe: ('own) parentNode_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  nodeList = "querySelectorAll" [@@bs.send.pipe: ('own) parentNode_like] 
    
    let append ~nodes parentNode =
      let func = append parentNode in
      let args = to_arg nodes in
      apply func parentNode args
    
    let append ~nodes parentNode =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes parentNode in
      return
    
    let prepend ~nodes parentNode =
      let func = prepend parentNode in
      let args = to_arg nodes in
      apply func parentNode args
    
    let prepend ~nodes parentNode =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes parentNode in
      return
    
end
 module Range = struct
    
    
    external startContainer : range:('own) range_like ->  node = "startContainer" [@@bs.get] 
    external startOffset : range:('own) range_like ->  int = "startOffset" [@@bs.get] 
    external endContainer : range:('own) range_like ->  node = "endContainer" [@@bs.get] 
    external endOffset : range:('own) range_like ->  int = "endOffset" [@@bs.get] 
    external collapsed : range:('own) range_like ->  bool = "collapsed" [@@bs.get] 
    external commonAncestorContainer : range:('own) range_like ->  node = "commonAncestorContainer" [@@bs.get] 
    external cloneContents :  documentFragment = "cloneContents" [@@bs.send.pipe: ('own) range_like] 
    external cloneRange :  range = "cloneRange" [@@bs.send.pipe: ('own) range_like] 
    external collapse : ?toStart:Js.boolean Js.undefined ->  unit = "collapse" [@@bs.send.pipe: ('own) range_like] 
    external compareBoundaryPoints : how:int -> sourceRange:(_) range_like ->  int = "compareBoundaryPoints" [@@bs.send.pipe: ('own) range_like] 
    external comparePoint : node:(_) node_like -> offset:int ->  int = "comparePoint" [@@bs.send.pipe: ('own) range_like] 
    external createContextualFragment : fragment:string ->  documentFragment = "createContextualFragment" [@@bs.send.pipe: ('own) range_like] 
    external deleteContents :  unit = "deleteContents" [@@bs.send.pipe: ('own) range_like] 
    external detach :  unit = "detach" [@@bs.send.pipe: ('own) range_like] 
    external extractContents :  documentFragment = "extractContents" [@@bs.send.pipe: ('own) range_like] 
    external insertNode : node:(_) node_like ->  unit = "insertNode" [@@bs.send.pipe: ('own) range_like] 
    external intersectsNode : node:(_) node_like ->  bool = "intersectsNode" [@@bs.send.pipe: ('own) range_like] 
    external isPointInRange : node:(_) node_like -> offset:int ->  bool = "isPointInRange" [@@bs.send.pipe: ('own) range_like] 
    external selectNode : refNode:(_) node_like ->  unit = "selectNode" [@@bs.send.pipe: ('own) range_like] 
    external selectNodeContents : refNode:(_) node_like ->  unit = "selectNodeContents" [@@bs.send.pipe: ('own) range_like] 
    external setEnd : refNode:(_) node_like -> offset:int ->  unit = "setEnd" [@@bs.send.pipe: ('own) range_like] 
    external setEndAfter : refNode:(_) node_like ->  unit = "setEndAfter" [@@bs.send.pipe: ('own) range_like] 
    external setEndBefore : refNode:(_) node_like ->  unit = "setEndBefore" [@@bs.send.pipe: ('own) range_like] 
    external setStart : refNode:(_) node_like -> offset:int ->  unit = "setStart" [@@bs.send.pipe: ('own) range_like] 
    external setStartAfter : refNode:(_) node_like ->  unit = "setStartAfter" [@@bs.send.pipe: ('own) range_like] 
    external setStartBefore : refNode:(_) node_like ->  unit = "setStartBefore" [@@bs.send.pipe: ('own) range_like] 
    external surroundContents : newParent:(_) node_like ->  unit = "surroundContents" [@@bs.send.pipe: ('own) range_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) range_like] 
    
    let start_to_start  =
      
      0
    
    let start_to_end  =
      
      1
    
    let end_to_end  =
      
      2
    
    let end_to_start  =
      
      3
    
    let collapse ?toStart range =
      let conv_toStart = Js_undefined.from_opt in
      let toStart = conv_toStart toStart in
      collapse ~toStart range
    
end
 module WindowOrWorkerGlobalScope = struct
    
    
    external fetch : input:'a8 -> ?init:(_) requestInit_like Js.undefined ->  response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) windowOrWorkerGlobalScope_like] 
    
    let fetch ~input ~init windowOrWorkerGlobalScope =
      let conv_input = function
        | `Request (x: (_) request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init windowOrWorkerGlobalScope in
      return
    
    let fetch ~input ?init windowOrWorkerGlobalScope =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init windowOrWorkerGlobalScope
    
end
 module VREyeParameters = struct
    
    
    external offset : vREyeParameters:('own) vREyeParameters_like ->  Js_typed_array.Float32Array.t = "offset" [@@bs.get] 
    external fieldOfView : vREyeParameters:('own) vREyeParameters_like ->  vRFieldOfView = "fieldOfView" [@@bs.get] 
    external renderWidth : vREyeParameters:('own) vREyeParameters_like ->  int = "renderWidth" [@@bs.get] 
    external renderHeight : vREyeParameters:('own) vREyeParameters_like ->  int = "renderHeight" [@@bs.get] 
    
    
end
 module WebGLUniformLocation = struct
    
    
    
    
    
end
 module OESTextureHalfFloat = struct
    
    
    
    
    let half_float_oes  =
      
      36193
    
end
 module OESVertexArrayObject = struct
    
    
    external bindVertexArrayOES : arrayObject:(_) webGLVertexArrayObjectOES_like Js.null ->  unit = "bindVertexArrayOES" [@@bs.send.pipe: ('own) oESVertexArrayObject_like] 
    external createVertexArrayOES :  webGLVertexArrayObjectOES option = "createVertexArrayOES" [@@bs.send.pipe: ('own) oESVertexArrayObject_like] [@@bs.return null_to_opt]
    external deleteVertexArrayOES : arrayObject:(_) webGLVertexArrayObjectOES_like Js.null ->  unit = "deleteVertexArrayOES" [@@bs.send.pipe: ('own) oESVertexArrayObject_like] 
    external isVertexArrayOES : arrayObject:(_) webGLVertexArrayObjectOES_like Js.null ->  bool = "isVertexArrayOES" [@@bs.send.pipe: ('own) oESVertexArrayObject_like] 
    
    let vertex_array_binding_oes  =
      
      34229
    
end
 module TestRunner = struct
    
    
    external setBluetoothMockDataSet : dataSetName:string ->  unit = "setBluetoothMockDataSet" [@@bs.send.pipe: ('own) testRunner_like] 
    
    
end
 module EventTarget = struct
    
    
    external addEventListener : type_:string -> listener:(_) eventListener_like Js.null -> ?capture:Js.boolean Js.undefined ->  unit = "addEventListener" [@@bs.send.pipe: ('own) eventTarget_like] 
    external dispatchEvent : event:(_) event_like ->  bool = "dispatchEvent" [@@bs.send.pipe: ('own) eventTarget_like] 
    external removeEventListener : type_:string -> listener:(_) eventListener_like Js.null -> ?capture:Js.boolean Js.undefined ->  unit = "removeEventListener" [@@bs.send.pipe: ('own) eventTarget_like] 
    
    let addEventListener ~type_ ~listener ?capture eventTarget =
      let conv_capture = Js_undefined.from_opt in
      let capture = conv_capture capture in
      addEventListener ~type_ ~listener ~capture eventTarget
    
    let removeEventListener ~type_ ~listener ?capture eventTarget =
      let conv_capture = Js_undefined.from_opt in
      let capture = conv_capture capture in
      removeEventListener ~type_ ~listener ~capture eventTarget
    
end
 module NodeIterator = struct
    
    
    external root : nodeIterator:('own) nodeIterator_like ->  node = "root" [@@bs.get] 
    external referenceNode : nodeIterator:('own) nodeIterator_like ->  node = "referenceNode" [@@bs.get] 
    external pointerBeforeReferenceNode : nodeIterator:('own) nodeIterator_like ->  bool = "pointerBeforeReferenceNode" [@@bs.get] 
    external whatToShow : nodeIterator:('own) nodeIterator_like ->  int = "whatToShow" [@@bs.get] 
    external filter : nodeIterator:('own) nodeIterator_like ->  nodeFilter option = "filter" [@@bs.get] [@@bs.return null_to_opt]
    external detach :  unit = "detach" [@@bs.send.pipe: ('own) nodeIterator_like] 
    external nextNode :  node option = "nextNode" [@@bs.send.pipe: ('own) nodeIterator_like] [@@bs.return null_to_opt]
    external previousNode :  node option = "previousNode" [@@bs.send.pipe: ('own) nodeIterator_like] [@@bs.return null_to_opt]
    
    
end
 module BluetoothRemoteGATTServer = struct
    
    
    external device : bluetoothRemoteGATTServer:('own) bluetoothRemoteGATTServer_like ->  bluetoothDevice = "device" [@@bs.get] 
    external connected : bluetoothRemoteGATTServer:('own) bluetoothRemoteGATTServer_like ->  bool = "connected" [@@bs.get] 
    external connect :  bluetoothRemoteGATTServer Js.Promise.t = "connect" [@@bs.send.pipe: ('own) bluetoothRemoteGATTServer_like] 
    external disconnect :  unit = "disconnect" [@@bs.send.pipe: ('own) bluetoothRemoteGATTServer_like] 
    external getPrimaryService : service:'a9 ->  bluetoothRemoteGATTService Js.Promise.t = "getPrimaryService" [@@bs.send.pipe: ('own) bluetoothRemoteGATTServer_like] 
    external getPrimaryServices : ?service:'a10 Js.undefined ->  bluetoothRemoteGATTService array Js.Promise.t = "getPrimaryServices" [@@bs.send.pipe: ('own) bluetoothRemoteGATTServer_like] 
    
    let getPrimaryService ~service bluetoothRemoteGATTServer =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let service = conv_service service in
      let return = getPrimaryService ~service bluetoothRemoteGATTServer in
      return
    
    let getPrimaryServices ~service bluetoothRemoteGATTServer =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_service = access_undef conv_service in
      let service = conv_service service in
      let return = getPrimaryServices ~service bluetoothRemoteGATTServer in
      return
    
    let getPrimaryServices ?service bluetoothRemoteGATTServer =
      let conv_service = Js_undefined.from_opt in
      let service = conv_service service in
      getPrimaryServices ~service bluetoothRemoteGATTServer
    
end
 module WebGLRenderingContextBase = struct
    
    
    external canvas : webGLRenderingContextBase:('own) webGLRenderingContextBase_like ->  hTMLCanvasElement = "canvas" [@@bs.get] 
    external drawingBufferWidth : webGLRenderingContextBase:('own) webGLRenderingContextBase_like ->  int = "drawingBufferWidth" [@@bs.get] 
    external drawingBufferHeight : webGLRenderingContextBase:('own) webGLRenderingContextBase_like ->  int = "drawingBufferHeight" [@@bs.get] 
    external activeTexture : texture:int ->  unit = "activeTexture" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external attachShader : program:(_) webGLProgram_like Js.null -> shader:(_) webGLShader_like Js.null ->  unit = "attachShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bindAttribLocation : program:(_) webGLProgram_like Js.null -> index:int -> name:string ->  unit = "bindAttribLocation" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bindBuffer : target:int -> buffer:(_) webGLBuffer_like Js.null ->  unit = "bindBuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bindFramebuffer : target:int -> framebuffer:(_) webGLFramebuffer_like Js.null ->  unit = "bindFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bindRenderbuffer : target:int -> renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "bindRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bindTexture : target:int -> texture:(_) webGLTexture_like Js.null ->  unit = "bindTexture" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external blendColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "blendColor" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external blendEquation : mode:int ->  unit = "blendEquation" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external blendEquationSeparate : modeRGB:int -> modeAlpha:int ->  unit = "blendEquationSeparate" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external blendFunc : sfactor:int -> dfactor:int ->  unit = "blendFunc" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external blendFuncSeparate : srcRGB:int -> dstRGB:int -> srcAlpha:int -> dstAlpha:int ->  unit = "blendFuncSeparate" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bufferData : target:int -> data:'a11 -> usage:int ->  unit = "bufferData" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external bufferSubData : target:int -> offset:int -> data:'a12 Js.null ->  unit = "bufferSubData" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external checkFramebufferStatus : target:int ->  int = "checkFramebufferStatus" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external clear : mask:int ->  unit = "clear" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external clearColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "clearColor" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external clearDepth : depth:float ->  unit = "clearDepth" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external clearStencil : s:int ->  unit = "clearStencil" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external colorMask : red:Js.boolean -> green:Js.boolean -> blue:Js.boolean -> alpha:Js.boolean ->  unit = "colorMask" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external compileShader : shader:(_) webGLShader_like Js.null ->  unit = "compileShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external compressedTexImage2D : target:int -> level:int -> internalformat:int -> width:int -> height:int -> border:int -> data:'a13 ->  unit = "compressedTexImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external compressedTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> width:int -> height:int -> format:int -> data:'a14 ->  unit = "compressedTexSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external copyTexImage2D : target:int -> level:int -> internalformat:int -> x:int -> y:int -> width:int -> height:int -> border:int ->  unit = "copyTexImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external copyTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> x:int -> y:int -> width:int -> height:int ->  unit = "copyTexSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external createBuffer :  webGLBuffer option = "createBuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createFramebuffer :  webGLFramebuffer option = "createFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createProgram :  webGLProgram option = "createProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createRenderbuffer :  webGLRenderbuffer option = "createRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createShader : type_:int ->  webGLShader option = "createShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createTexture :  webGLTexture option = "createTexture" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external cullFace : mode:int ->  unit = "cullFace" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteBuffer : buffer:(_) webGLBuffer_like Js.null ->  unit = "deleteBuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteFramebuffer : framebuffer:(_) webGLFramebuffer_like Js.null ->  unit = "deleteFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteProgram : program:(_) webGLProgram_like Js.null ->  unit = "deleteProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteRenderbuffer : renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "deleteRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteShader : shader:(_) webGLShader_like Js.null ->  unit = "deleteShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external deleteTexture : texture:(_) webGLTexture_like Js.null ->  unit = "deleteTexture" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external depthFunc : func:int ->  unit = "depthFunc" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external depthMask : flag:Js.boolean ->  unit = "depthMask" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external depthRange : zNear:float -> zFar:float ->  unit = "depthRange" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external detachShader : program:(_) webGLProgram_like Js.null -> shader:(_) webGLShader_like Js.null ->  unit = "detachShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external disable : cap:int ->  unit = "disable" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external disableVertexAttribArray : index:int ->  unit = "disableVertexAttribArray" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external drawArrays : mode:int -> first:int -> count:int ->  unit = "drawArrays" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external drawElements : mode:int -> count:int -> type_:int -> offset:int ->  unit = "drawElements" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external enable : cap:int ->  unit = "enable" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external enableVertexAttribArray : index:int ->  unit = "enableVertexAttribArray" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external finish :  unit = "finish" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external flush :  unit = "flush" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external framebufferRenderbuffer : target:int -> attachment:int -> renderbuffertarget:int -> renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "framebufferRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external framebufferTexture2D : target:int -> attachment:int -> textarget:int -> texture:(_) webGLTexture_like Js.null -> level:int ->  unit = "framebufferTexture2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external frontFace : mode:int ->  unit = "frontFace" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external generateMipmap : target:int ->  unit = "generateMipmap" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getActiveAttrib : program:(_) webGLProgram_like Js.null -> index:int ->  webGLActiveInfo option = "getActiveAttrib" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getActiveUniform : program:(_) webGLProgram_like Js.null -> index:int ->  webGLActiveInfo option = "getActiveUniform" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getAttribLocation : program:(_) webGLProgram_like Js.null -> name:string ->  int = "getAttribLocation" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getBufferParameter : target:int -> pname:int ->  'a15 = "getBufferParameter" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getContextAttributes :  webGLContextAttributes option = "getContextAttributes" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getError :  int = "getError" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getExtension : name:string ->  'a16 option = "getExtension" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getParameter : pname:int ->  'a17 = "getParameter" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getProgramInfoLog : program:(_) webGLProgram_like Js.null ->  string option = "getProgramInfoLog" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getProgramParameter : program:(_) webGLProgram_like Js.null -> pname:int ->  'a18 = "getProgramParameter" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getShaderInfoLog : shader:(_) webGLShader_like Js.null ->  string option = "getShaderInfoLog" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getShaderParameter : shader:(_) webGLShader_like Js.null -> pname:int ->  'a19 = "getShaderParameter" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getShaderPrecisionFormat : shadertype:int -> precisiontype:int ->  webGLShaderPrecisionFormat option = "getShaderPrecisionFormat" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getShaderSource : shader:(_) webGLShader_like Js.null ->  string option = "getShaderSource" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getSupportedExtensions :  string array option = "getSupportedExtensions" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getUniformLocation : program:(_) webGLProgram_like Js.null -> name:string ->  webGLUniformLocation option = "getUniformLocation" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getVertexAttrib : index:int -> pname:int ->  'a20 = "getVertexAttrib" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external getVertexAttribOffset : index:int -> pname:int ->  int = "getVertexAttribOffset" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external hint : target:int -> mode:int ->  unit = "hint" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isBuffer : buffer:(_) webGLBuffer_like Js.null ->  bool = "isBuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isEnabled : cap:int ->  bool = "isEnabled" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isFramebuffer : framebuffer:(_) webGLFramebuffer_like Js.null ->  bool = "isFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isProgram : program:(_) webGLProgram_like Js.null ->  bool = "isProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isRenderbuffer : renderbuffer:(_) webGLRenderbuffer_like Js.null ->  bool = "isRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isShader : shader:(_) webGLShader_like Js.null ->  bool = "isShader" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external isTexture : texture:(_) webGLTexture_like Js.null ->  bool = "isTexture" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external lineWidth : width:float ->  unit = "lineWidth" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external linkProgram : program:(_) webGLProgram_like Js.null ->  unit = "linkProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external pixelStorei : pname:int -> param:int ->  unit = "pixelStorei" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external polygonOffset : factor:float -> units:float ->  unit = "polygonOffset" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external readPixels : x:int -> y:int -> width:int -> height:int -> format:int -> type_:int -> pixels:'a21 Js.null ->  unit = "readPixels" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external renderbufferStorage : target:int -> internalformat:int -> width:int -> height:int ->  unit = "renderbufferStorage" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external sampleCoverage : value:float -> invert:Js.boolean ->  unit = "sampleCoverage" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external scissor : x:int -> y:int -> width:int -> height:int ->  unit = "scissor" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external shaderSource : shader:(_) webGLShader_like Js.null -> source:string ->  unit = "shaderSource" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilFunc : func:int -> ref:int -> mask:int ->  unit = "stencilFunc" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilFuncSeparate : face:int -> func:int -> ref:int -> mask:int ->  unit = "stencilFuncSeparate" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilMask : mask:int ->  unit = "stencilMask" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilMaskSeparate : face:int -> mask:int ->  unit = "stencilMaskSeparate" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilOp : fail:int -> zfail:int -> zpass:int ->  unit = "stencilOp" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external stencilOpSeparate : face:int -> fail:int -> zfail:int -> zpass:int ->  unit = "stencilOpSeparate" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external texImage2D : target:int -> level:int -> internalformat:int -> format:int -> type_:int -> source:'a22 Js.null ->  unit = "texImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external texParameterf : target:int -> pname:int -> param:float ->  unit = "texParameterf" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external texParameteri : target:int -> pname:int -> param:int ->  unit = "texParameteri" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external texSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> format:int -> type_:int -> source:'a23 Js.null ->  unit = "texSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform1f : location:(_) webGLUniformLocation_like Js.null -> x:float ->  unit = "uniform1f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform1fv : location:(_) webGLUniformLocation_like Js.null -> v:'a24 ->  unit = "uniform1fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform1i : location:(_) webGLUniformLocation_like Js.null -> x:int ->  unit = "uniform1i" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform1iv : location:(_) webGLUniformLocation_like Js.null -> v:'a25 ->  unit = "uniform1iv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform2f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float ->  unit = "uniform2f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform2fv : location:(_) webGLUniformLocation_like Js.null -> v:'a26 ->  unit = "uniform2fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform2i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int ->  unit = "uniform2i" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform2iv : location:(_) webGLUniformLocation_like Js.null -> v:'a27 ->  unit = "uniform2iv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform3f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float -> z:float ->  unit = "uniform3f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform3fv : location:(_) webGLUniformLocation_like Js.null -> v:'a28 ->  unit = "uniform3fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform3i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int -> z:int ->  unit = "uniform3i" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform3iv : location:(_) webGLUniformLocation_like Js.null -> v:'a29 ->  unit = "uniform3iv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform4f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float -> z:float -> w:float ->  unit = "uniform4f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform4fv : location:(_) webGLUniformLocation_like Js.null -> v:'a30 ->  unit = "uniform4fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform4i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int -> z:int -> w:int ->  unit = "uniform4i" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniform4iv : location:(_) webGLUniformLocation_like Js.null -> v:'a31 ->  unit = "uniform4iv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniformMatrix2fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a32 ->  unit = "uniformMatrix2fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniformMatrix3fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a33 ->  unit = "uniformMatrix3fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external uniformMatrix4fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a34 ->  unit = "uniformMatrix4fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external useProgram : program:(_) webGLProgram_like Js.null ->  unit = "useProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external validateProgram : program:(_) webGLProgram_like Js.null ->  unit = "validateProgram" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib1f : indx:int -> x:float ->  unit = "vertexAttrib1f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib1fv : indx:int -> values:'a35 ->  unit = "vertexAttrib1fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib2f : indx:int -> x:float -> y:float ->  unit = "vertexAttrib2f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib2fv : indx:int -> values:'a36 ->  unit = "vertexAttrib2fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib3f : indx:int -> x:float -> y:float -> z:float ->  unit = "vertexAttrib3f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib3fv : indx:int -> values:'a37 ->  unit = "vertexAttrib3fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib4f : indx:int -> x:float -> y:float -> z:float -> w:float ->  unit = "vertexAttrib4f" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttrib4fv : indx:int -> values:'a38 ->  unit = "vertexAttrib4fv" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external vertexAttribPointer : indx:int -> size:int -> type_:int -> normalized:Js.boolean -> stride:int -> offset:int ->  unit = "vertexAttribPointer" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    external viewport : x:int -> y:int -> width:int -> height:int ->  unit = "viewport" [@@bs.send.pipe: ('own) webGLRenderingContextBase_like] 
    
    let depth_buffer_bit  =
      
      256
    
    let stencil_buffer_bit  =
      
      1024
    
    let color_buffer_bit  =
      
      16384
    
    let points  =
      
      0
    
    let lines  =
      
      1
    
    let line_loop  =
      
      2
    
    let line_strip  =
      
      3
    
    let triangles  =
      
      4
    
    let triangle_strip  =
      
      5
    
    let triangle_fan  =
      
      6
    
    let zero  =
      
      0
    
    let one  =
      
      1
    
    let src_color  =
      
      768
    
    let one_minus_src_color  =
      
      769
    
    let src_alpha  =
      
      770
    
    let one_minus_src_alpha  =
      
      771
    
    let dst_alpha  =
      
      772
    
    let one_minus_dst_alpha  =
      
      773
    
    let dst_color  =
      
      774
    
    let one_minus_dst_color  =
      
      775
    
    let src_alpha_saturate  =
      
      776
    
    let func_add  =
      
      32774
    
    let blend_equation  =
      
      32777
    
    let blend_equation_rgb  =
      
      32777
    
    let blend_equation_alpha  =
      
      34877
    
    let func_subtract  =
      
      32778
    
    let func_reverse_subtract  =
      
      32779
    
    let blend_dst_rgb  =
      
      32968
    
    let blend_src_rgb  =
      
      32969
    
    let blend_dst_alpha  =
      
      32970
    
    let blend_src_alpha  =
      
      32971
    
    let constant_color  =
      
      32769
    
    let one_minus_constant_color  =
      
      32770
    
    let constant_alpha  =
      
      32771
    
    let one_minus_constant_alpha  =
      
      32772
    
    let blend_color  =
      
      32773
    
    let array_buffer  =
      
      34962
    
    let element_array_buffer  =
      
      34963
    
    let array_buffer_binding  =
      
      34964
    
    let element_array_buffer_binding  =
      
      34965
    
    let stream_draw  =
      
      35040
    
    let static_draw  =
      
      35044
    
    let dynamic_draw  =
      
      35048
    
    let buffer_size  =
      
      34660
    
    let buffer_usage  =
      
      34661
    
    let current_vertex_attrib  =
      
      34342
    
    let front  =
      
      1028
    
    let back  =
      
      1029
    
    let front_and_back  =
      
      1032
    
    let cull_face  =
      
      2884
    
    let blend  =
      
      3042
    
    let dither  =
      
      3024
    
    let stencil_test  =
      
      2960
    
    let depth_test  =
      
      2929
    
    let scissor_test  =
      
      3089
    
    let polygon_offset_fill  =
      
      32823
    
    let sample_alpha_to_coverage  =
      
      32926
    
    let sample_coverage  =
      
      32928
    
    let no_error  =
      
      0
    
    let invalid_enum  =
      
      1280
    
    let invalid_value  =
      
      1281
    
    let invalid_operation  =
      
      1282
    
    let out_of_memory  =
      
      1285
    
    let cw  =
      
      2304
    
    let ccw  =
      
      2305
    
    let line_width  =
      
      2849
    
    let aliased_point_size_range  =
      
      33901
    
    let aliased_line_width_range  =
      
      33902
    
    let cull_face_mode  =
      
      2885
    
    let front_face  =
      
      2886
    
    let depth_range  =
      
      2928
    
    let depth_writemask  =
      
      2930
    
    let depth_clear_value  =
      
      2931
    
    let depth_func  =
      
      2932
    
    let stencil_clear_value  =
      
      2961
    
    let stencil_func  =
      
      2962
    
    let stencil_fail  =
      
      2964
    
    let stencil_pass_depth_fail  =
      
      2965
    
    let stencil_pass_depth_pass  =
      
      2966
    
    let stencil_ref  =
      
      2967
    
    let stencil_value_mask  =
      
      2963
    
    let stencil_writemask  =
      
      2968
    
    let stencil_back_func  =
      
      34816
    
    let stencil_back_fail  =
      
      34817
    
    let stencil_back_pass_depth_fail  =
      
      34818
    
    let stencil_back_pass_depth_pass  =
      
      34819
    
    let stencil_back_ref  =
      
      36003
    
    let stencil_back_value_mask  =
      
      36004
    
    let stencil_back_writemask  =
      
      36005
    
    let viewport  =
      
      2978
    
    let scissor_box  =
      
      3088
    
    let color_clear_value  =
      
      3106
    
    let color_writemask  =
      
      3107
    
    let unpack_alignment  =
      
      3317
    
    let pack_alignment  =
      
      3333
    
    let max_texture_size  =
      
      3379
    
    let max_viewport_dims  =
      
      3386
    
    let subpixel_bits  =
      
      3408
    
    let red_bits  =
      
      3410
    
    let green_bits  =
      
      3411
    
    let blue_bits  =
      
      3412
    
    let alpha_bits  =
      
      3413
    
    let depth_bits  =
      
      3414
    
    let stencil_bits  =
      
      3415
    
    let polygon_offset_units  =
      
      10752
    
    let polygon_offset_factor  =
      
      32824
    
    let texture_binding_2d  =
      
      32873
    
    let sample_buffers  =
      
      32936
    
    let samples  =
      
      32937
    
    let sample_coverage_value  =
      
      32938
    
    let sample_coverage_invert  =
      
      32939
    
    let compressed_texture_formats  =
      
      34467
    
    let dont_care  =
      
      4352
    
    let fastest  =
      
      4353
    
    let nicest  =
      
      4354
    
    let generate_mipmap_hint  =
      
      33170
    
    let byte  =
      
      5120
    
    let unsigned_byte  =
      
      5121
    
    let short  =
      
      5122
    
    let unsigned_short  =
      
      5123
    
    let int  =
      
      5124
    
    let unsigned_int  =
      
      5125
    
    let float  =
      
      5126
    
    let depth_component  =
      
      6402
    
    let alpha  =
      
      6406
    
    let rgb  =
      
      6407
    
    let rgba  =
      
      6408
    
    let luminance  =
      
      6409
    
    let luminance_alpha  =
      
      6410
    
    let unsigned_short_4_4_4_4  =
      
      32819
    
    let unsigned_short_5_5_5_1  =
      
      32820
    
    let unsigned_short_5_6_5  =
      
      33635
    
    let fragment_shader  =
      
      35632
    
    let vertex_shader  =
      
      35633
    
    let max_vertex_attribs  =
      
      34921
    
    let max_vertex_uniform_vectors  =
      
      36347
    
    let max_varying_vectors  =
      
      36348
    
    let max_combined_texture_image_units  =
      
      35661
    
    let max_vertex_texture_image_units  =
      
      35660
    
    let max_texture_image_units  =
      
      34930
    
    let max_fragment_uniform_vectors  =
      
      36349
    
    let shader_type  =
      
      35663
    
    let delete_status  =
      
      35712
    
    let link_status  =
      
      35714
    
    let validate_status  =
      
      35715
    
    let attached_shaders  =
      
      35717
    
    let active_uniforms  =
      
      35718
    
    let active_attributes  =
      
      35721
    
    let shading_language_version  =
      
      35724
    
    let current_program  =
      
      35725
    
    let never  =
      
      512
    
    let less  =
      
      513
    
    let equal  =
      
      514
    
    let lequal  =
      
      515
    
    let greater  =
      
      516
    
    let notequal  =
      
      517
    
    let gequal  =
      
      518
    
    let always  =
      
      519
    
    let keep  =
      
      7680
    
    let replace  =
      
      7681
    
    let incr  =
      
      7682
    
    let decr  =
      
      7683
    
    let invert  =
      
      5386
    
    let incr_wrap  =
      
      34055
    
    let decr_wrap  =
      
      34056
    
    let vendor  =
      
      7936
    
    let renderer  =
      
      7937
    
    let version  =
      
      7938
    
    let nearest  =
      
      9728
    
    let linear  =
      
      9729
    
    let nearest_mipmap_nearest  =
      
      9984
    
    let linear_mipmap_nearest  =
      
      9985
    
    let nearest_mipmap_linear  =
      
      9986
    
    let linear_mipmap_linear  =
      
      9987
    
    let texture_mag_filter  =
      
      10240
    
    let texture_min_filter  =
      
      10241
    
    let texture_wrap_s  =
      
      10242
    
    let texture_wrap_t  =
      
      10243
    
    let texture_2d  =
      
      3553
    
    let texture  =
      
      5890
    
    let texture_cube_map  =
      
      34067
    
    let texture_binding_cube_map  =
      
      34068
    
    let texture_cube_map_positive_x  =
      
      34069
    
    let texture_cube_map_negative_x  =
      
      34070
    
    let texture_cube_map_positive_y  =
      
      34071
    
    let texture_cube_map_negative_y  =
      
      34072
    
    let texture_cube_map_positive_z  =
      
      34073
    
    let texture_cube_map_negative_z  =
      
      34074
    
    let max_cube_map_texture_size  =
      
      34076
    
    let texture0  =
      
      33984
    
    let texture1  =
      
      33985
    
    let texture2  =
      
      33986
    
    let texture3  =
      
      33987
    
    let texture4  =
      
      33988
    
    let texture5  =
      
      33989
    
    let texture6  =
      
      33990
    
    let texture7  =
      
      33991
    
    let texture8  =
      
      33992
    
    let texture9  =
      
      33993
    
    let texture10  =
      
      33994
    
    let texture11  =
      
      33995
    
    let texture12  =
      
      33996
    
    let texture13  =
      
      33997
    
    let texture14  =
      
      33998
    
    let texture15  =
      
      33999
    
    let texture16  =
      
      34000
    
    let texture17  =
      
      34001
    
    let texture18  =
      
      34002
    
    let texture19  =
      
      34003
    
    let texture20  =
      
      34004
    
    let texture21  =
      
      34005
    
    let texture22  =
      
      34006
    
    let texture23  =
      
      34007
    
    let texture24  =
      
      34008
    
    let texture25  =
      
      34009
    
    let texture26  =
      
      34010
    
    let texture27  =
      
      34011
    
    let texture28  =
      
      34012
    
    let texture29  =
      
      34013
    
    let texture30  =
      
      34014
    
    let texture31  =
      
      34015
    
    let active_texture  =
      
      34016
    
    let repeat  =
      
      10497
    
    let clamp_to_edge  =
      
      33071
    
    let mirrored_repeat  =
      
      33648
    
    let float_vec2  =
      
      35664
    
    let float_vec3  =
      
      35665
    
    let float_vec4  =
      
      35666
    
    let int_vec2  =
      
      35667
    
    let int_vec3  =
      
      35668
    
    let int_vec4  =
      
      35669
    
    let bool  =
      
      35670
    
    let bool_vec2  =
      
      35671
    
    let bool_vec3  =
      
      35672
    
    let bool_vec4  =
      
      35673
    
    let float_mat2  =
      
      35674
    
    let float_mat3  =
      
      35675
    
    let float_mat4  =
      
      35676
    
    let sampler_2d  =
      
      35678
    
    let sampler_cube  =
      
      35680
    
    let vertex_attrib_array_enabled  =
      
      34338
    
    let vertex_attrib_array_size  =
      
      34339
    
    let vertex_attrib_array_stride  =
      
      34340
    
    let vertex_attrib_array_type  =
      
      34341
    
    let vertex_attrib_array_normalized  =
      
      34922
    
    let vertex_attrib_array_pointer  =
      
      34373
    
    let vertex_attrib_array_buffer_binding  =
      
      34975
    
    let implementation_color_read_type  =
      
      35738
    
    let implementation_color_read_format  =
      
      35739
    
    let compile_status  =
      
      35713
    
    let low_float  =
      
      36336
    
    let medium_float  =
      
      36337
    
    let high_float  =
      
      36338
    
    let low_int  =
      
      36339
    
    let medium_int  =
      
      36340
    
    let high_int  =
      
      36341
    
    let framebuffer  =
      
      36160
    
    let renderbuffer  =
      
      36161
    
    let rgba4  =
      
      32854
    
    let rgb5_a1  =
      
      32855
    
    let rgb565  =
      
      36194
    
    let depth_component16  =
      
      33189
    
    let stencil_index  =
      
      6401
    
    let stencil_index8  =
      
      36168
    
    let depth_stencil  =
      
      34041
    
    let renderbuffer_width  =
      
      36162
    
    let renderbuffer_height  =
      
      36163
    
    let renderbuffer_internal_format  =
      
      36164
    
    let renderbuffer_red_size  =
      
      36176
    
    let renderbuffer_green_size  =
      
      36177
    
    let renderbuffer_blue_size  =
      
      36178
    
    let renderbuffer_alpha_size  =
      
      36179
    
    let renderbuffer_depth_size  =
      
      36180
    
    let renderbuffer_stencil_size  =
      
      36181
    
    let framebuffer_attachment_object_type  =
      
      36048
    
    let framebuffer_attachment_object_name  =
      
      36049
    
    let framebuffer_attachment_texture_level  =
      
      36050
    
    let framebuffer_attachment_texture_cube_map_face  =
      
      36051
    
    let color_attachment0  =
      
      36064
    
    let depth_attachment  =
      
      36096
    
    let stencil_attachment  =
      
      36128
    
    let depth_stencil_attachment  =
      
      33306
    
    let none  =
      
      0
    
    let framebuffer_complete  =
      
      36053
    
    let framebuffer_incomplete_attachment  =
      
      36054
    
    let framebuffer_incomplete_missing_attachment  =
      
      36055
    
    let framebuffer_incomplete_dimensions  =
      
      36057
    
    let framebuffer_unsupported  =
      
      36061
    
    let framebuffer_binding  =
      
      36006
    
    let renderbuffer_binding  =
      
      36007
    
    let max_renderbuffer_size  =
      
      34024
    
    let invalid_framebuffer_operation  =
      
      1286
    
    let unpack_flip_y_webgl  =
      
      37440
    
    let unpack_premultiply_alpha_webgl  =
      
      37441
    
    let context_lost_webgl  =
      
      37442
    
    let unpack_colorspace_conversion_webgl  =
      
      37443
    
    let browser_default_webgl  =
      
      37444
    
    let bufferData ~target ~data ~usage webGLRenderingContextBase =
      let conv_data = function
        | `Any_Null (x: 'a39 Js.null) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let data = conv_data data in
      let return = bufferData ~target ~data ~usage webGLRenderingContextBase in
      return
    
    let texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContextBase =
      let conv_source = function
        | `ImageData (x: (_) imageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) hTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContextBase in
      return
    
    let texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContextBase =
      let conv_source = function
        | `ImageData (x: (_) imageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) hTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContextBase in
      return
    
end
 module WebGLRenderingContext = struct
    
    
    external canvas : webGLRenderingContext:('own) webGLRenderingContext_like ->  hTMLCanvasElement = "canvas" [@@bs.get] 
    external drawingBufferWidth : webGLRenderingContext:('own) webGLRenderingContext_like ->  int = "drawingBufferWidth" [@@bs.get] 
    external drawingBufferHeight : webGLRenderingContext:('own) webGLRenderingContext_like ->  int = "drawingBufferHeight" [@@bs.get] 
    external activeTexture : texture:int ->  unit = "activeTexture" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external attachShader : program:(_) webGLProgram_like Js.null -> shader:(_) webGLShader_like Js.null ->  unit = "attachShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bindAttribLocation : program:(_) webGLProgram_like Js.null -> index:int -> name:string ->  unit = "bindAttribLocation" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bindBuffer : target:int -> buffer:(_) webGLBuffer_like Js.null ->  unit = "bindBuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bindFramebuffer : target:int -> framebuffer:(_) webGLFramebuffer_like Js.null ->  unit = "bindFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bindRenderbuffer : target:int -> renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "bindRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bindTexture : target:int -> texture:(_) webGLTexture_like Js.null ->  unit = "bindTexture" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external blendColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "blendColor" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external blendEquation : mode:int ->  unit = "blendEquation" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external blendEquationSeparate : modeRGB:int -> modeAlpha:int ->  unit = "blendEquationSeparate" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external blendFunc : sfactor:int -> dfactor:int ->  unit = "blendFunc" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external blendFuncSeparate : srcRGB:int -> dstRGB:int -> srcAlpha:int -> dstAlpha:int ->  unit = "blendFuncSeparate" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bufferData : target:int -> data:'a40 -> usage:int ->  unit = "bufferData" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external bufferSubData : target:int -> offset:int -> data:'a41 Js.null ->  unit = "bufferSubData" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external checkFramebufferStatus : target:int ->  int = "checkFramebufferStatus" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external clear : mask:int ->  unit = "clear" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external clearColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "clearColor" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external clearDepth : depth:float ->  unit = "clearDepth" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external clearStencil : s:int ->  unit = "clearStencil" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external colorMask : red:Js.boolean -> green:Js.boolean -> blue:Js.boolean -> alpha:Js.boolean ->  unit = "colorMask" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external compileShader : shader:(_) webGLShader_like Js.null ->  unit = "compileShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external compressedTexImage2D : target:int -> level:int -> internalformat:int -> width:int -> height:int -> border:int -> data:'a42 ->  unit = "compressedTexImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external compressedTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> width:int -> height:int -> format:int -> data:'a43 ->  unit = "compressedTexSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external copyTexImage2D : target:int -> level:int -> internalformat:int -> x:int -> y:int -> width:int -> height:int -> border:int ->  unit = "copyTexImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external copyTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> x:int -> y:int -> width:int -> height:int ->  unit = "copyTexSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external createBuffer :  webGLBuffer option = "createBuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external createFramebuffer :  webGLFramebuffer option = "createFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external createProgram :  webGLProgram option = "createProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external createRenderbuffer :  webGLRenderbuffer option = "createRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external createShader : type_:int ->  webGLShader option = "createShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external createTexture :  webGLTexture option = "createTexture" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external cullFace : mode:int ->  unit = "cullFace" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteBuffer : buffer:(_) webGLBuffer_like Js.null ->  unit = "deleteBuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteFramebuffer : framebuffer:(_) webGLFramebuffer_like Js.null ->  unit = "deleteFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteProgram : program:(_) webGLProgram_like Js.null ->  unit = "deleteProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteRenderbuffer : renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "deleteRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteShader : shader:(_) webGLShader_like Js.null ->  unit = "deleteShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external deleteTexture : texture:(_) webGLTexture_like Js.null ->  unit = "deleteTexture" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external depthFunc : func:int ->  unit = "depthFunc" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external depthMask : flag:Js.boolean ->  unit = "depthMask" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external depthRange : zNear:float -> zFar:float ->  unit = "depthRange" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external detachShader : program:(_) webGLProgram_like Js.null -> shader:(_) webGLShader_like Js.null ->  unit = "detachShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external disable : cap:int ->  unit = "disable" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external disableVertexAttribArray : index:int ->  unit = "disableVertexAttribArray" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external drawArrays : mode:int -> first:int -> count:int ->  unit = "drawArrays" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external drawElements : mode:int -> count:int -> type_:int -> offset:int ->  unit = "drawElements" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external enable : cap:int ->  unit = "enable" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external enableVertexAttribArray : index:int ->  unit = "enableVertexAttribArray" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external finish :  unit = "finish" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external flush :  unit = "flush" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external framebufferRenderbuffer : target:int -> attachment:int -> renderbuffertarget:int -> renderbuffer:(_) webGLRenderbuffer_like Js.null ->  unit = "framebufferRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external framebufferTexture2D : target:int -> attachment:int -> textarget:int -> texture:(_) webGLTexture_like Js.null -> level:int ->  unit = "framebufferTexture2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external frontFace : mode:int ->  unit = "frontFace" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external generateMipmap : target:int ->  unit = "generateMipmap" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getActiveAttrib : program:(_) webGLProgram_like Js.null -> index:int ->  webGLActiveInfo option = "getActiveAttrib" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getActiveUniform : program:(_) webGLProgram_like Js.null -> index:int ->  webGLActiveInfo option = "getActiveUniform" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getAttribLocation : program:(_) webGLProgram_like Js.null -> name:string ->  int = "getAttribLocation" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getBufferParameter : target:int -> pname:int ->  'a44 = "getBufferParameter" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getContextAttributes :  webGLContextAttributes option = "getContextAttributes" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getError :  int = "getError" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getExtension : name:string ->  'a45 option = "getExtension" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getParameter : pname:int ->  'a46 = "getParameter" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getProgramInfoLog : program:(_) webGLProgram_like Js.null ->  string option = "getProgramInfoLog" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getProgramParameter : program:(_) webGLProgram_like Js.null -> pname:int ->  'a47 = "getProgramParameter" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getShaderInfoLog : shader:(_) webGLShader_like Js.null ->  string option = "getShaderInfoLog" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getShaderParameter : shader:(_) webGLShader_like Js.null -> pname:int ->  'a48 = "getShaderParameter" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getShaderPrecisionFormat : shadertype:int -> precisiontype:int ->  webGLShaderPrecisionFormat option = "getShaderPrecisionFormat" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getShaderSource : shader:(_) webGLShader_like Js.null ->  string option = "getShaderSource" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getSupportedExtensions :  string array option = "getSupportedExtensions" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getUniformLocation : program:(_) webGLProgram_like Js.null -> name:string ->  webGLUniformLocation option = "getUniformLocation" [@@bs.send.pipe: ('own) webGLRenderingContext_like] [@@bs.return null_to_opt]
    external getVertexAttrib : index:int -> pname:int ->  'a49 = "getVertexAttrib" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external getVertexAttribOffset : index:int -> pname:int ->  int = "getVertexAttribOffset" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external hint : target:int -> mode:int ->  unit = "hint" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isBuffer : buffer:(_) webGLBuffer_like Js.null ->  bool = "isBuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isEnabled : cap:int ->  bool = "isEnabled" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isFramebuffer : framebuffer:(_) webGLFramebuffer_like Js.null ->  bool = "isFramebuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isProgram : program:(_) webGLProgram_like Js.null ->  bool = "isProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isRenderbuffer : renderbuffer:(_) webGLRenderbuffer_like Js.null ->  bool = "isRenderbuffer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isShader : shader:(_) webGLShader_like Js.null ->  bool = "isShader" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external isTexture : texture:(_) webGLTexture_like Js.null ->  bool = "isTexture" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external lineWidth : width:float ->  unit = "lineWidth" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external linkProgram : program:(_) webGLProgram_like Js.null ->  unit = "linkProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external pixelStorei : pname:int -> param:int ->  unit = "pixelStorei" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external polygonOffset : factor:float -> units:float ->  unit = "polygonOffset" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external readPixels : x:int -> y:int -> width:int -> height:int -> format:int -> type_:int -> pixels:'a50 Js.null ->  unit = "readPixels" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external renderbufferStorage : target:int -> internalformat:int -> width:int -> height:int ->  unit = "renderbufferStorage" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external sampleCoverage : value:float -> invert:Js.boolean ->  unit = "sampleCoverage" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external scissor : x:int -> y:int -> width:int -> height:int ->  unit = "scissor" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external shaderSource : shader:(_) webGLShader_like Js.null -> source:string ->  unit = "shaderSource" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilFunc : func:int -> ref:int -> mask:int ->  unit = "stencilFunc" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilFuncSeparate : face:int -> func:int -> ref:int -> mask:int ->  unit = "stencilFuncSeparate" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilMask : mask:int ->  unit = "stencilMask" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilMaskSeparate : face:int -> mask:int ->  unit = "stencilMaskSeparate" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilOp : fail:int -> zfail:int -> zpass:int ->  unit = "stencilOp" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external stencilOpSeparate : face:int -> fail:int -> zfail:int -> zpass:int ->  unit = "stencilOpSeparate" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external texImage2D : target:int -> level:int -> internalformat:int -> format:int -> type_:int -> source:'a51 Js.null ->  unit = "texImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external texParameterf : target:int -> pname:int -> param:float ->  unit = "texParameterf" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external texParameteri : target:int -> pname:int -> param:int ->  unit = "texParameteri" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external texSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> format:int -> type_:int -> source:'a52 Js.null ->  unit = "texSubImage2D" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform1f : location:(_) webGLUniformLocation_like Js.null -> x:float ->  unit = "uniform1f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform1fv : location:(_) webGLUniformLocation_like Js.null -> v:'a53 ->  unit = "uniform1fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform1i : location:(_) webGLUniformLocation_like Js.null -> x:int ->  unit = "uniform1i" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform1iv : location:(_) webGLUniformLocation_like Js.null -> v:'a54 ->  unit = "uniform1iv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform2f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float ->  unit = "uniform2f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform2fv : location:(_) webGLUniformLocation_like Js.null -> v:'a55 ->  unit = "uniform2fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform2i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int ->  unit = "uniform2i" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform2iv : location:(_) webGLUniformLocation_like Js.null -> v:'a56 ->  unit = "uniform2iv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform3f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float -> z:float ->  unit = "uniform3f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform3fv : location:(_) webGLUniformLocation_like Js.null -> v:'a57 ->  unit = "uniform3fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform3i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int -> z:int ->  unit = "uniform3i" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform3iv : location:(_) webGLUniformLocation_like Js.null -> v:'a58 ->  unit = "uniform3iv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform4f : location:(_) webGLUniformLocation_like Js.null -> x:float -> y:float -> z:float -> w:float ->  unit = "uniform4f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform4fv : location:(_) webGLUniformLocation_like Js.null -> v:'a59 ->  unit = "uniform4fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform4i : location:(_) webGLUniformLocation_like Js.null -> x:int -> y:int -> z:int -> w:int ->  unit = "uniform4i" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniform4iv : location:(_) webGLUniformLocation_like Js.null -> v:'a60 ->  unit = "uniform4iv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniformMatrix2fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a61 ->  unit = "uniformMatrix2fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniformMatrix3fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a62 ->  unit = "uniformMatrix3fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external uniformMatrix4fv : location:(_) webGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a63 ->  unit = "uniformMatrix4fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external useProgram : program:(_) webGLProgram_like Js.null ->  unit = "useProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external validateProgram : program:(_) webGLProgram_like Js.null ->  unit = "validateProgram" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib1f : indx:int -> x:float ->  unit = "vertexAttrib1f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib1fv : indx:int -> values:'a64 ->  unit = "vertexAttrib1fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib2f : indx:int -> x:float -> y:float ->  unit = "vertexAttrib2f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib2fv : indx:int -> values:'a65 ->  unit = "vertexAttrib2fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib3f : indx:int -> x:float -> y:float -> z:float ->  unit = "vertexAttrib3f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib3fv : indx:int -> values:'a66 ->  unit = "vertexAttrib3fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib4f : indx:int -> x:float -> y:float -> z:float -> w:float ->  unit = "vertexAttrib4f" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttrib4fv : indx:int -> values:'a67 ->  unit = "vertexAttrib4fv" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external vertexAttribPointer : indx:int -> size:int -> type_:int -> normalized:Js.boolean -> stride:int -> offset:int ->  unit = "vertexAttribPointer" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    external viewport : x:int -> y:int -> width:int -> height:int ->  unit = "viewport" [@@bs.send.pipe: ('own) webGLRenderingContext_like] 
    
    let depth_buffer_bit  =
      
      256
    
    let stencil_buffer_bit  =
      
      1024
    
    let color_buffer_bit  =
      
      16384
    
    let points  =
      
      0
    
    let lines  =
      
      1
    
    let line_loop  =
      
      2
    
    let line_strip  =
      
      3
    
    let triangles  =
      
      4
    
    let triangle_strip  =
      
      5
    
    let triangle_fan  =
      
      6
    
    let zero  =
      
      0
    
    let one  =
      
      1
    
    let src_color  =
      
      768
    
    let one_minus_src_color  =
      
      769
    
    let src_alpha  =
      
      770
    
    let one_minus_src_alpha  =
      
      771
    
    let dst_alpha  =
      
      772
    
    let one_minus_dst_alpha  =
      
      773
    
    let dst_color  =
      
      774
    
    let one_minus_dst_color  =
      
      775
    
    let src_alpha_saturate  =
      
      776
    
    let func_add  =
      
      32774
    
    let blend_equation  =
      
      32777
    
    let blend_equation_rgb  =
      
      32777
    
    let blend_equation_alpha  =
      
      34877
    
    let func_subtract  =
      
      32778
    
    let func_reverse_subtract  =
      
      32779
    
    let blend_dst_rgb  =
      
      32968
    
    let blend_src_rgb  =
      
      32969
    
    let blend_dst_alpha  =
      
      32970
    
    let blend_src_alpha  =
      
      32971
    
    let constant_color  =
      
      32769
    
    let one_minus_constant_color  =
      
      32770
    
    let constant_alpha  =
      
      32771
    
    let one_minus_constant_alpha  =
      
      32772
    
    let blend_color  =
      
      32773
    
    let array_buffer  =
      
      34962
    
    let element_array_buffer  =
      
      34963
    
    let array_buffer_binding  =
      
      34964
    
    let element_array_buffer_binding  =
      
      34965
    
    let stream_draw  =
      
      35040
    
    let static_draw  =
      
      35044
    
    let dynamic_draw  =
      
      35048
    
    let buffer_size  =
      
      34660
    
    let buffer_usage  =
      
      34661
    
    let current_vertex_attrib  =
      
      34342
    
    let front  =
      
      1028
    
    let back  =
      
      1029
    
    let front_and_back  =
      
      1032
    
    let cull_face  =
      
      2884
    
    let blend  =
      
      3042
    
    let dither  =
      
      3024
    
    let stencil_test  =
      
      2960
    
    let depth_test  =
      
      2929
    
    let scissor_test  =
      
      3089
    
    let polygon_offset_fill  =
      
      32823
    
    let sample_alpha_to_coverage  =
      
      32926
    
    let sample_coverage  =
      
      32928
    
    let no_error  =
      
      0
    
    let invalid_enum  =
      
      1280
    
    let invalid_value  =
      
      1281
    
    let invalid_operation  =
      
      1282
    
    let out_of_memory  =
      
      1285
    
    let cw  =
      
      2304
    
    let ccw  =
      
      2305
    
    let line_width  =
      
      2849
    
    let aliased_point_size_range  =
      
      33901
    
    let aliased_line_width_range  =
      
      33902
    
    let cull_face_mode  =
      
      2885
    
    let front_face  =
      
      2886
    
    let depth_range  =
      
      2928
    
    let depth_writemask  =
      
      2930
    
    let depth_clear_value  =
      
      2931
    
    let depth_func  =
      
      2932
    
    let stencil_clear_value  =
      
      2961
    
    let stencil_func  =
      
      2962
    
    let stencil_fail  =
      
      2964
    
    let stencil_pass_depth_fail  =
      
      2965
    
    let stencil_pass_depth_pass  =
      
      2966
    
    let stencil_ref  =
      
      2967
    
    let stencil_value_mask  =
      
      2963
    
    let stencil_writemask  =
      
      2968
    
    let stencil_back_func  =
      
      34816
    
    let stencil_back_fail  =
      
      34817
    
    let stencil_back_pass_depth_fail  =
      
      34818
    
    let stencil_back_pass_depth_pass  =
      
      34819
    
    let stencil_back_ref  =
      
      36003
    
    let stencil_back_value_mask  =
      
      36004
    
    let stencil_back_writemask  =
      
      36005
    
    let viewport  =
      
      2978
    
    let scissor_box  =
      
      3088
    
    let color_clear_value  =
      
      3106
    
    let color_writemask  =
      
      3107
    
    let unpack_alignment  =
      
      3317
    
    let pack_alignment  =
      
      3333
    
    let max_texture_size  =
      
      3379
    
    let max_viewport_dims  =
      
      3386
    
    let subpixel_bits  =
      
      3408
    
    let red_bits  =
      
      3410
    
    let green_bits  =
      
      3411
    
    let blue_bits  =
      
      3412
    
    let alpha_bits  =
      
      3413
    
    let depth_bits  =
      
      3414
    
    let stencil_bits  =
      
      3415
    
    let polygon_offset_units  =
      
      10752
    
    let polygon_offset_factor  =
      
      32824
    
    let texture_binding_2d  =
      
      32873
    
    let sample_buffers  =
      
      32936
    
    let samples  =
      
      32937
    
    let sample_coverage_value  =
      
      32938
    
    let sample_coverage_invert  =
      
      32939
    
    let compressed_texture_formats  =
      
      34467
    
    let dont_care  =
      
      4352
    
    let fastest  =
      
      4353
    
    let nicest  =
      
      4354
    
    let generate_mipmap_hint  =
      
      33170
    
    let byte  =
      
      5120
    
    let unsigned_byte  =
      
      5121
    
    let short  =
      
      5122
    
    let unsigned_short  =
      
      5123
    
    let int  =
      
      5124
    
    let unsigned_int  =
      
      5125
    
    let float  =
      
      5126
    
    let depth_component  =
      
      6402
    
    let alpha  =
      
      6406
    
    let rgb  =
      
      6407
    
    let rgba  =
      
      6408
    
    let luminance  =
      
      6409
    
    let luminance_alpha  =
      
      6410
    
    let unsigned_short_4_4_4_4  =
      
      32819
    
    let unsigned_short_5_5_5_1  =
      
      32820
    
    let unsigned_short_5_6_5  =
      
      33635
    
    let fragment_shader  =
      
      35632
    
    let vertex_shader  =
      
      35633
    
    let max_vertex_attribs  =
      
      34921
    
    let max_vertex_uniform_vectors  =
      
      36347
    
    let max_varying_vectors  =
      
      36348
    
    let max_combined_texture_image_units  =
      
      35661
    
    let max_vertex_texture_image_units  =
      
      35660
    
    let max_texture_image_units  =
      
      34930
    
    let max_fragment_uniform_vectors  =
      
      36349
    
    let shader_type  =
      
      35663
    
    let delete_status  =
      
      35712
    
    let link_status  =
      
      35714
    
    let validate_status  =
      
      35715
    
    let attached_shaders  =
      
      35717
    
    let active_uniforms  =
      
      35718
    
    let active_attributes  =
      
      35721
    
    let shading_language_version  =
      
      35724
    
    let current_program  =
      
      35725
    
    let never  =
      
      512
    
    let less  =
      
      513
    
    let equal  =
      
      514
    
    let lequal  =
      
      515
    
    let greater  =
      
      516
    
    let notequal  =
      
      517
    
    let gequal  =
      
      518
    
    let always  =
      
      519
    
    let keep  =
      
      7680
    
    let replace  =
      
      7681
    
    let incr  =
      
      7682
    
    let decr  =
      
      7683
    
    let invert  =
      
      5386
    
    let incr_wrap  =
      
      34055
    
    let decr_wrap  =
      
      34056
    
    let vendor  =
      
      7936
    
    let renderer  =
      
      7937
    
    let version  =
      
      7938
    
    let nearest  =
      
      9728
    
    let linear  =
      
      9729
    
    let nearest_mipmap_nearest  =
      
      9984
    
    let linear_mipmap_nearest  =
      
      9985
    
    let nearest_mipmap_linear  =
      
      9986
    
    let linear_mipmap_linear  =
      
      9987
    
    let texture_mag_filter  =
      
      10240
    
    let texture_min_filter  =
      
      10241
    
    let texture_wrap_s  =
      
      10242
    
    let texture_wrap_t  =
      
      10243
    
    let texture_2d  =
      
      3553
    
    let texture  =
      
      5890
    
    let texture_cube_map  =
      
      34067
    
    let texture_binding_cube_map  =
      
      34068
    
    let texture_cube_map_positive_x  =
      
      34069
    
    let texture_cube_map_negative_x  =
      
      34070
    
    let texture_cube_map_positive_y  =
      
      34071
    
    let texture_cube_map_negative_y  =
      
      34072
    
    let texture_cube_map_positive_z  =
      
      34073
    
    let texture_cube_map_negative_z  =
      
      34074
    
    let max_cube_map_texture_size  =
      
      34076
    
    let texture0  =
      
      33984
    
    let texture1  =
      
      33985
    
    let texture2  =
      
      33986
    
    let texture3  =
      
      33987
    
    let texture4  =
      
      33988
    
    let texture5  =
      
      33989
    
    let texture6  =
      
      33990
    
    let texture7  =
      
      33991
    
    let texture8  =
      
      33992
    
    let texture9  =
      
      33993
    
    let texture10  =
      
      33994
    
    let texture11  =
      
      33995
    
    let texture12  =
      
      33996
    
    let texture13  =
      
      33997
    
    let texture14  =
      
      33998
    
    let texture15  =
      
      33999
    
    let texture16  =
      
      34000
    
    let texture17  =
      
      34001
    
    let texture18  =
      
      34002
    
    let texture19  =
      
      34003
    
    let texture20  =
      
      34004
    
    let texture21  =
      
      34005
    
    let texture22  =
      
      34006
    
    let texture23  =
      
      34007
    
    let texture24  =
      
      34008
    
    let texture25  =
      
      34009
    
    let texture26  =
      
      34010
    
    let texture27  =
      
      34011
    
    let texture28  =
      
      34012
    
    let texture29  =
      
      34013
    
    let texture30  =
      
      34014
    
    let texture31  =
      
      34015
    
    let active_texture  =
      
      34016
    
    let repeat  =
      
      10497
    
    let clamp_to_edge  =
      
      33071
    
    let mirrored_repeat  =
      
      33648
    
    let float_vec2  =
      
      35664
    
    let float_vec3  =
      
      35665
    
    let float_vec4  =
      
      35666
    
    let int_vec2  =
      
      35667
    
    let int_vec3  =
      
      35668
    
    let int_vec4  =
      
      35669
    
    let bool  =
      
      35670
    
    let bool_vec2  =
      
      35671
    
    let bool_vec3  =
      
      35672
    
    let bool_vec4  =
      
      35673
    
    let float_mat2  =
      
      35674
    
    let float_mat3  =
      
      35675
    
    let float_mat4  =
      
      35676
    
    let sampler_2d  =
      
      35678
    
    let sampler_cube  =
      
      35680
    
    let vertex_attrib_array_enabled  =
      
      34338
    
    let vertex_attrib_array_size  =
      
      34339
    
    let vertex_attrib_array_stride  =
      
      34340
    
    let vertex_attrib_array_type  =
      
      34341
    
    let vertex_attrib_array_normalized  =
      
      34922
    
    let vertex_attrib_array_pointer  =
      
      34373
    
    let vertex_attrib_array_buffer_binding  =
      
      34975
    
    let implementation_color_read_type  =
      
      35738
    
    let implementation_color_read_format  =
      
      35739
    
    let compile_status  =
      
      35713
    
    let low_float  =
      
      36336
    
    let medium_float  =
      
      36337
    
    let high_float  =
      
      36338
    
    let low_int  =
      
      36339
    
    let medium_int  =
      
      36340
    
    let high_int  =
      
      36341
    
    let framebuffer  =
      
      36160
    
    let renderbuffer  =
      
      36161
    
    let rgba4  =
      
      32854
    
    let rgb5_a1  =
      
      32855
    
    let rgb565  =
      
      36194
    
    let depth_component16  =
      
      33189
    
    let stencil_index  =
      
      6401
    
    let stencil_index8  =
      
      36168
    
    let depth_stencil  =
      
      34041
    
    let renderbuffer_width  =
      
      36162
    
    let renderbuffer_height  =
      
      36163
    
    let renderbuffer_internal_format  =
      
      36164
    
    let renderbuffer_red_size  =
      
      36176
    
    let renderbuffer_green_size  =
      
      36177
    
    let renderbuffer_blue_size  =
      
      36178
    
    let renderbuffer_alpha_size  =
      
      36179
    
    let renderbuffer_depth_size  =
      
      36180
    
    let renderbuffer_stencil_size  =
      
      36181
    
    let framebuffer_attachment_object_type  =
      
      36048
    
    let framebuffer_attachment_object_name  =
      
      36049
    
    let framebuffer_attachment_texture_level  =
      
      36050
    
    let framebuffer_attachment_texture_cube_map_face  =
      
      36051
    
    let color_attachment0  =
      
      36064
    
    let depth_attachment  =
      
      36096
    
    let stencil_attachment  =
      
      36128
    
    let depth_stencil_attachment  =
      
      33306
    
    let none  =
      
      0
    
    let framebuffer_complete  =
      
      36053
    
    let framebuffer_incomplete_attachment  =
      
      36054
    
    let framebuffer_incomplete_missing_attachment  =
      
      36055
    
    let framebuffer_incomplete_dimensions  =
      
      36057
    
    let framebuffer_unsupported  =
      
      36061
    
    let framebuffer_binding  =
      
      36006
    
    let renderbuffer_binding  =
      
      36007
    
    let max_renderbuffer_size  =
      
      34024
    
    let invalid_framebuffer_operation  =
      
      1286
    
    let unpack_flip_y_webgl  =
      
      37440
    
    let unpack_premultiply_alpha_webgl  =
      
      37441
    
    let context_lost_webgl  =
      
      37442
    
    let unpack_colorspace_conversion_webgl  =
      
      37443
    
    let browser_default_webgl  =
      
      37444
    
    let bufferData ~target ~data ~usage webGLRenderingContext =
      let conv_data = function
        | `Any_Null (x: 'a68 Js.null) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let data = conv_data data in
      let return = bufferData ~target ~data ~usage webGLRenderingContext in
      return
    
    let texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContext =
      let conv_source = function
        | `ImageData (x: (_) imageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) hTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContext in
      return
    
    let texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContext =
      let conv_source = function
        | `ImageData (x: (_) imageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) hTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContext in
      return
    
end
 module Location = struct
    
    
    external href : location:('own) location_like ->  string = "href" [@@bs.get] 
    external setHref : location:('own) location_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : location:('own) location_like ->  string = "origin" [@@bs.get] 
    external protocol : location:('own) location_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : location:('own) location_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external host : location:('own) location_like ->  string = "host" [@@bs.get] 
    external setHost : location:('own) location_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : location:('own) location_like ->  string = "hostname" [@@bs.get] 
    external setHostname : location:('own) location_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : location:('own) location_like ->  string = "port" [@@bs.get] 
    external setPort : location:('own) location_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : location:('own) location_like ->  string = "pathname" [@@bs.get] 
    external setPathname : location:('own) location_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : location:('own) location_like ->  string = "search" [@@bs.get] 
    external setSearch : location:('own) location_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : location:('own) location_like ->  string = "hash" [@@bs.get] 
    external setHash : location:('own) location_like -> hash:string ->  unit = "hash" [@@bs.set]
    external assign : url:string ->  unit = "assign" [@@bs.send.pipe: ('own) location_like] 
    external reload :  unit = "reload" [@@bs.send.pipe: ('own) location_like] 
    external replace : url:string ->  unit = "replace" [@@bs.send.pipe: ('own) location_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) location_like] 
    
    
end
 module Body = struct
    
    
    external bodyUsed : body:('own) body_like ->  bool = "bodyUsed" [@@bs.get] 
    external blob :  blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) body_like] 
    external formData :  formData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) body_like] 
    external json :  'a69 Js.Promise.t = "json" [@@bs.send.pipe: ('own) body_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) body_like] 
    
    
end
 module History = struct
    
    
    external length : history:('own) history_like ->  int = "length" [@@bs.get] 
    external back :  unit = "back" [@@bs.send.pipe: ('own) history_like] 
    external forward :  unit = "forward" [@@bs.send.pipe: ('own) history_like] 
    external go : ?delta:int Js.undefined ->  unit = "go" [@@bs.send.pipe: ('own) history_like] 
    
    let go ?delta history =
      let conv_delta = Js_undefined.from_opt in
      let delta = conv_delta delta in
      go ~delta history
    
end
 module NodeList = struct
    
    
    external length : nodeList:('own) nodeList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  node option = "item" [@@bs.send.pipe: ('own) nodeList_like] [@@bs.return null_to_opt]
    
    
end
 module BluetoothDeviceEventHandlers = struct
    
    
    external ongattserverdisconnected : bluetoothDeviceEventHandlers:('own) bluetoothDeviceEventHandlers_like ->  (event -> 'a70 [@bs]) option = "ongattserverdisconnected" [@@bs.get] [@@bs.return null_to_opt]
    external setOngattserverdisconnected : bluetoothDeviceEventHandlers:('own) bluetoothDeviceEventHandlers_like -> ongattserverdisconnected:(event -> 'a71 [@bs]) Js.null ->  unit = "ongattserverdisconnected" [@@bs.set]
    
    
end
 module Screen = struct
    
    
    external colorDepth : screen:('own) screen_like ->  int = "colorDepth" [@@bs.get] 
    external pixelDepth : screen:('own) screen_like ->  int = "pixelDepth" [@@bs.get] 
    
    
end
 module PluginArray = struct
    
    
    external length : pluginArray:('own) pluginArray_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  plugin option = "item" [@@bs.send.pipe: ('own) pluginArray_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  plugin option = "namedItem" [@@bs.send.pipe: ('own) pluginArray_like] [@@bs.return null_to_opt]
    external refresh : ?reload:Js.boolean Js.undefined ->  unit = "refresh" [@@bs.send.pipe: ('own) pluginArray_like] 
    
    let refresh ?reload pluginArray =
      let conv_reload = Js_undefined.from_opt in
      let reload = conv_reload reload in
      refresh ~reload pluginArray
    
end
 module BluetoothCharacteristicProperties = struct
    
    
    external broadcast : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "broadcast" [@@bs.get] 
    external read : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "read" [@@bs.get] 
    external writeWithoutResponse : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "writeWithoutResponse" [@@bs.get] 
    external write : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "write" [@@bs.get] 
    external notify : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "notify" [@@bs.get] 
    external indicate : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "indicate" [@@bs.get] 
    external authenticatedSignedWrites : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "authenticatedSignedWrites" [@@bs.get] 
    external reliableWrite : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "reliableWrite" [@@bs.get] 
    external writableAuxiliaries : bluetoothCharacteristicProperties:('own) bluetoothCharacteristicProperties_like ->  bool = "writableAuxiliaries" [@@bs.get] 
    
    
end
 module DOMRectReadOnly = struct
    
    
    external x : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "x" [@@bs.get] 
    external y : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "y" [@@bs.get] 
    external width : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "width" [@@bs.get] 
    external height : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "height" [@@bs.get] 
    external top : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "top" [@@bs.get] 
    external right : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "right" [@@bs.get] 
    external bottom : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "bottom" [@@bs.get] 
    external left : dOMRectReadOnly:('own) dOMRectReadOnly_like ->  float = "left" [@@bs.get] 
    
    
end
 module BluetoothRemoteGATTDescriptor = struct
    
    
    external characteristic : bluetoothRemoteGATTDescriptor:('own) bluetoothRemoteGATTDescriptor_like ->  bluetoothRemoteGATTCharacteristic = "characteristic" [@@bs.get] 
    external uuid : bluetoothRemoteGATTDescriptor:('own) bluetoothRemoteGATTDescriptor_like ->  string = "uuid" [@@bs.get] 
    external value : bluetoothRemoteGATTDescriptor:('own) bluetoothRemoteGATTDescriptor_like ->  string option = "value" [@@bs.get] [@@bs.return null_to_opt]
    external readValue :  string Js.Promise.t = "readValue" [@@bs.send.pipe: ('own) bluetoothRemoteGATTDescriptor_like] 
    external writeValue : value:int array ->  unit Js.Promise.t = "writeValue" [@@bs.send.pipe: ('own) bluetoothRemoteGATTDescriptor_like] 
    
    
end
 module ChildNode = struct
    
    
    external after : childNode:('own) childNode_like ->  (('own) childNode_like, unit, ('a72)) variadic_func = "after" [@@bs.get]
    external before : childNode:('own) childNode_like ->  (('own) childNode_like, unit, ('a73)) variadic_func = "before" [@@bs.get]
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) childNode_like] 
    external replaceWith : childNode:('own) childNode_like ->  (('own) childNode_like, unit, ('a74)) variadic_func = "replaceWith" [@@bs.get]
    
    let after ~nodes childNode =
      let func = after childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let after ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes childNode in
      return
    
    let before ~nodes childNode =
      let func = before childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let before ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes childNode in
      return
    
    let replaceWith ~nodes childNode =
      let func = replaceWith childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let replaceWith ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes childNode in
      return
    
end
 module NonDocumentTypeChildNode = struct
    
    
    external previousElementSibling : nonDocumentTypeChildNode:('own) nonDocumentTypeChildNode_like ->  element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : nonDocumentTypeChildNode:('own) nonDocumentTypeChildNode_like ->  element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module DOMParser = struct
    
    
    external parseFromString : str:string -> type_:string ->  document = "parseFromString" [@@bs.send.pipe: ('own) dOMParser_like] 
    
    let parseFromString ~str ~type_ dOMParser =
      let conv_type = function
        | `text_html -> "text/html"
        | `text_xml -> "text/xml"
        | `application_xml -> "application/xml"
        | `application_xhtml_xml -> "application/xhtml+xml"
         in
      let type_ = conv_type type_ in
      let return = parseFromString ~str ~type_ dOMParser in
      return
    
end
 module URL = struct
    
    
    external href : uRL:('own) uRL_like ->  string = "href" [@@bs.get] 
    external setHref : uRL:('own) uRL_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : uRL:('own) uRL_like ->  string = "origin" [@@bs.get] 
    external protocol : uRL:('own) uRL_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : uRL:('own) uRL_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : uRL:('own) uRL_like ->  string = "username" [@@bs.get] 
    external setUsername : uRL:('own) uRL_like -> username:string ->  unit = "username" [@@bs.set]
    external password : uRL:('own) uRL_like ->  string = "password" [@@bs.get] 
    external setPassword : uRL:('own) uRL_like -> password:string ->  unit = "password" [@@bs.set]
    external host : uRL:('own) uRL_like ->  string = "host" [@@bs.get] 
    external setHost : uRL:('own) uRL_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : uRL:('own) uRL_like ->  string = "hostname" [@@bs.get] 
    external setHostname : uRL:('own) uRL_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : uRL:('own) uRL_like ->  string = "port" [@@bs.get] 
    external setPort : uRL:('own) uRL_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : uRL:('own) uRL_like ->  string = "pathname" [@@bs.get] 
    external setPathname : uRL:('own) uRL_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : uRL:('own) uRL_like ->  string = "search" [@@bs.get] 
    external setSearch : uRL:('own) uRL_like -> search:string ->  unit = "search" [@@bs.set]
    external searchParams : uRL:('own) uRL_like ->  uRLSearchParams = "searchParams" [@@bs.get] 
    external hash : uRL:('own) uRL_like ->  string = "hash" [@@bs.get] 
    external setHash : uRL:('own) uRL_like -> hash:string ->  unit = "hash" [@@bs.set]
    external createObjectURL : blob:(_) blob_like ->  string = "createObjectURL" [@@bs.send.pipe: ('own) uRL_like] 
    external revokeObjectURL : url:string ->  unit = "revokeObjectURL" [@@bs.send.pipe: ('own) uRL_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) uRL_like] 
    
    
end
 module ElementCSSInlineStyle = struct
    
    
    external style : elementCSSInlineStyle:('own) elementCSSInlineStyle_like ->  cSSStyleDeclaration = "style" [@@bs.get] 
    
    
end
 module FileList = struct
    
    
    external length : fileList:('own) fileList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  file option = "item" [@@bs.send.pipe: ('own) fileList_like] [@@bs.return null_to_opt]
    
    
end
 module WebGLObject = struct
    
    
    
    
    
end
 module BrowserElement = struct
    
    
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) browserElement_like] 
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) browserElement_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) browserElement_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) browserElement_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) browserElement_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) browserElement_like] 
    
    let reload ?hardReload browserElement =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload browserElement
    
end
 module BrowserElementCommon = struct
    
    
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) browserElementCommon_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) browserElementCommon_like] 
    
    
end
 module BrowserElementPrivileged = struct
    
    
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) browserElementPrivileged_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) browserElementPrivileged_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) browserElementPrivileged_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) browserElementPrivileged_like] 
    
    let reload ?hardReload browserElementPrivileged =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload browserElementPrivileged
    
end
 module WorkerNavigator = struct
    
    
    external language : workerNavigator:('own) workerNavigator_like ->  string = "language" [@@bs.get] 
    external appCodeName : workerNavigator:('own) workerNavigator_like ->  string = "appCodeName" [@@bs.get] 
    external appName : workerNavigator:('own) workerNavigator_like ->  string = "appName" [@@bs.get] 
    external appVersion : workerNavigator:('own) workerNavigator_like ->  string = "appVersion" [@@bs.get] 
    external platform : workerNavigator:('own) workerNavigator_like ->  string = "platform" [@@bs.get] 
    external product : workerNavigator:('own) workerNavigator_like ->  string = "product" [@@bs.get] 
    external userAgent : workerNavigator:('own) workerNavigator_like ->  string = "userAgent" [@@bs.get] 
    external permissions : workerNavigator:('own) workerNavigator_like ->  permissions = "permissions" [@@bs.get] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) workerNavigator_like] 
    
    
end
 module StyleSheet = struct
    
    
    external type_ : styleSheet:('own) styleSheet_like ->  string = "type_" [@@bs.get] 
    external href : styleSheet:('own) styleSheet_like ->  string option = "href" [@@bs.get] [@@bs.return null_to_opt]
    external title : styleSheet:('own) styleSheet_like ->  string option = "title" [@@bs.get] [@@bs.return null_to_opt]
    external disabled : styleSheet:('own) styleSheet_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : styleSheet:('own) styleSheet_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    
    
end
 module LinkStyle = struct
    
    
    external sheet : linkStyle:('own) linkStyle_like ->  styleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module HTMLCollection = struct
    
    
    external length : hTMLCollection:('own) hTMLCollection_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  element option = "item" [@@bs.send.pipe: ('own) hTMLCollection_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  element option = "namedItem" [@@bs.send.pipe: ('own) hTMLCollection_like] [@@bs.return null_to_opt]
    
    
end
 module PerformanceTiming = struct
    
    
    external navigationStart : performanceTiming:('own) performanceTiming_like ->  int = "navigationStart" [@@bs.get] 
    external domLoading : performanceTiming:('own) performanceTiming_like ->  int = "domLoading" [@@bs.get] 
    external domInteractive : performanceTiming:('own) performanceTiming_like ->  int = "domInteractive" [@@bs.get] 
    external domContentLoadedEventStart : performanceTiming:('own) performanceTiming_like ->  int = "domContentLoadedEventStart" [@@bs.get] 
    external domContentLoadedEventEnd : performanceTiming:('own) performanceTiming_like ->  int = "domContentLoadedEventEnd" [@@bs.get] 
    external domComplete : performanceTiming:('own) performanceTiming_like ->  int = "domComplete" [@@bs.get] 
    external loadEventStart : performanceTiming:('own) performanceTiming_like ->  int = "loadEventStart" [@@bs.get] 
    external loadEventEnd : performanceTiming:('own) performanceTiming_like ->  int = "loadEventEnd" [@@bs.get] 
    
    
end
 module Touch = struct
    
    
    external identifier : touch:('own) touch_like ->  int = "identifier" [@@bs.get] 
    external target : touch:('own) touch_like ->  eventTarget = "target" [@@bs.get] 
    external screenX : touch:('own) touch_like ->  float = "screenX" [@@bs.get] 
    external screenY : touch:('own) touch_like ->  float = "screenY" [@@bs.get] 
    external clientX : touch:('own) touch_like ->  float = "clientX" [@@bs.get] 
    external clientY : touch:('own) touch_like ->  float = "clientY" [@@bs.get] 
    external pageX : touch:('own) touch_like ->  float = "pageX" [@@bs.get] 
    external pageY : touch:('own) touch_like ->  float = "pageY" [@@bs.get] 
    
    
end
 module NonElementParentNode = struct
    
    
    external getElementById : elementId:string ->  element option = "getElementById" [@@bs.send.pipe: ('own) nonElementParentNode_like] [@@bs.return null_to_opt]
    
    
end
 module CSSRuleList = struct
    
    
    external length : cSSRuleList:('own) cSSRuleList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  cSSRule option = "item" [@@bs.send.pipe: ('own) cSSRuleList_like] [@@bs.return null_to_opt]
    
    
end
 module DissimilarOriginLocation = struct
    
    
    external href : dissimilarOriginLocation:('own) dissimilarOriginLocation_like ->  string = "href" [@@bs.get] 
    external setHref : dissimilarOriginLocation:('own) dissimilarOriginLocation_like -> href:string ->  unit = "href" [@@bs.set]
    external assign : url:string ->  unit = "assign" [@@bs.send.pipe: ('own) dissimilarOriginLocation_like] 
    external reload :  unit = "reload" [@@bs.send.pipe: ('own) dissimilarOriginLocation_like] 
    external replace : url:string ->  unit = "replace" [@@bs.send.pipe: ('own) dissimilarOriginLocation_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) dissimilarOriginLocation_like] 
    
    
end
 module DOMImplementation = struct
    
    
    external createDocument : namespace:string Js.null -> qualifiedName:string -> ?doctype:(_) documentType_like Js.null Js.undefined ->  xMLDocument = "createDocument" [@@bs.send.pipe: ('own) dOMImplementation_like] 
    external createDocumentType : qualifiedName:string -> publicId:string -> systemId:string ->  documentType = "createDocumentType" [@@bs.send.pipe: ('own) dOMImplementation_like] 
    external createHTMLDocument : ?title:string Js.undefined ->  document = "createHTMLDocument" [@@bs.send.pipe: ('own) dOMImplementation_like] 
    external hasFeature :  bool = "hasFeature" [@@bs.send.pipe: ('own) dOMImplementation_like] 
    
    let createDocument ~namespace ~qualifiedName ?doctype dOMImplementation =
      let conv_doctype = Js_undefined.from_opt in
      let doctype = conv_doctype doctype in
      createDocument ~namespace ~qualifiedName ~doctype dOMImplementation
    
    let createHTMLDocument ?title dOMImplementation =
      let conv_title = Js_undefined.from_opt in
      let title = conv_title title in
      createHTMLDocument ~title dOMImplementation
    
end
 module TestBinding = struct
    
    
    external booleanAttribute : testBinding:('own) testBinding_like ->  bool = "booleanAttribute" [@@bs.get] 
    external setBooleanAttribute : testBinding:('own) testBinding_like -> booleanAttribute:Js.boolean ->  unit = "booleanAttribute" [@@bs.set]
    external byteAttribute : testBinding:('own) testBinding_like ->  int = "byteAttribute" [@@bs.get] 
    external setByteAttribute : testBinding:('own) testBinding_like -> byteAttribute:int ->  unit = "byteAttribute" [@@bs.set]
    external octetAttribute : testBinding:('own) testBinding_like ->  int = "octetAttribute" [@@bs.get] 
    external setOctetAttribute : testBinding:('own) testBinding_like -> octetAttribute:int ->  unit = "octetAttribute" [@@bs.set]
    external shortAttribute : testBinding:('own) testBinding_like ->  int = "shortAttribute" [@@bs.get] 
    external setShortAttribute : testBinding:('own) testBinding_like -> shortAttribute:int ->  unit = "shortAttribute" [@@bs.set]
    external unsignedShortAttribute : testBinding:('own) testBinding_like ->  int = "unsignedShortAttribute" [@@bs.get] 
    external setUnsignedShortAttribute : testBinding:('own) testBinding_like -> unsignedShortAttribute:int ->  unit = "unsignedShortAttribute" [@@bs.set]
    external longAttribute : testBinding:('own) testBinding_like ->  int = "longAttribute" [@@bs.get] 
    external setLongAttribute : testBinding:('own) testBinding_like -> longAttribute:int ->  unit = "longAttribute" [@@bs.set]
    external unsignedLongAttribute : testBinding:('own) testBinding_like ->  int = "unsignedLongAttribute" [@@bs.get] 
    external setUnsignedLongAttribute : testBinding:('own) testBinding_like -> unsignedLongAttribute:int ->  unit = "unsignedLongAttribute" [@@bs.set]
    external longLongAttribute : testBinding:('own) testBinding_like ->  int = "longLongAttribute" [@@bs.get] 
    external setLongLongAttribute : testBinding:('own) testBinding_like -> longLongAttribute:int ->  unit = "longLongAttribute" [@@bs.set]
    external unsignedLongLongAttribute : testBinding:('own) testBinding_like ->  int = "unsignedLongLongAttribute" [@@bs.get] 
    external setUnsignedLongLongAttribute : testBinding:('own) testBinding_like -> unsignedLongLongAttribute:int ->  unit = "unsignedLongLongAttribute" [@@bs.set]
    external unrestrictedFloatAttribute : testBinding:('own) testBinding_like ->  float = "unrestrictedFloatAttribute" [@@bs.get] 
    external setUnrestrictedFloatAttribute : testBinding:('own) testBinding_like -> unrestrictedFloatAttribute:float ->  unit = "unrestrictedFloatAttribute" [@@bs.set]
    external floatAttribute : testBinding:('own) testBinding_like ->  float = "floatAttribute" [@@bs.get] 
    external setFloatAttribute : testBinding:('own) testBinding_like -> floatAttribute:float ->  unit = "floatAttribute" [@@bs.set]
    external unrestrictedDoubleAttribute : testBinding:('own) testBinding_like ->  float = "unrestrictedDoubleAttribute" [@@bs.get] 
    external setUnrestrictedDoubleAttribute : testBinding:('own) testBinding_like -> unrestrictedDoubleAttribute:float ->  unit = "unrestrictedDoubleAttribute" [@@bs.set]
    external doubleAttribute : testBinding:('own) testBinding_like ->  float = "doubleAttribute" [@@bs.get] 
    external setDoubleAttribute : testBinding:('own) testBinding_like -> doubleAttribute:float ->  unit = "doubleAttribute" [@@bs.set]
    external stringAttribute : testBinding:('own) testBinding_like ->  string = "stringAttribute" [@@bs.get] 
    external setStringAttribute : testBinding:('own) testBinding_like -> stringAttribute:string ->  unit = "stringAttribute" [@@bs.set]
    external usvstringAttribute : testBinding:('own) testBinding_like ->  string = "usvstringAttribute" [@@bs.get] 
    external setUsvstringAttribute : testBinding:('own) testBinding_like -> usvstringAttribute:string ->  unit = "usvstringAttribute" [@@bs.set]
    external byteStringAttribute : testBinding:('own) testBinding_like ->  string = "byteStringAttribute" [@@bs.get] 
    external setByteStringAttribute : testBinding:('own) testBinding_like -> byteStringAttribute:string ->  unit = "byteStringAttribute" [@@bs.set]
    external enumAttribute : testBinding:('own) testBinding_like ->  string = "enumAttribute" [@@bs.get] 
    external setEnumAttribute : testBinding:('own) testBinding_like -> enumAttribute:string ->  unit = "enumAttribute" [@@bs.set]
    external interfaceAttribute : testBinding:('own) testBinding_like ->  blob = "interfaceAttribute" [@@bs.get] 
    external setInterfaceAttribute : testBinding:('own) testBinding_like -> interfaceAttribute:blob ->  unit = "interfaceAttribute" [@@bs.set]
    external unionAttribute : testBinding:('own) testBinding_like ->  'a75 = "unionAttribute" [@@bs.get] 
    external setUnionAttribute : testBinding:('own) testBinding_like -> unionAttribute:'a76 ->  unit = "unionAttribute" [@@bs.set]
    external union2Attribute : testBinding:('own) testBinding_like ->  'a77 = "union2Attribute" [@@bs.get] 
    external setUnion2Attribute : testBinding:('own) testBinding_like -> union2Attribute:'a78 ->  unit = "union2Attribute" [@@bs.set]
    external union3Attribute : testBinding:('own) testBinding_like ->  'a79 = "union3Attribute" [@@bs.get] 
    external setUnion3Attribute : testBinding:('own) testBinding_like -> union3Attribute:'a80 ->  unit = "union3Attribute" [@@bs.set]
    external union4Attribute : testBinding:('own) testBinding_like ->  'a81 = "union4Attribute" [@@bs.get] 
    external setUnion4Attribute : testBinding:('own) testBinding_like -> union4Attribute:'a82 ->  unit = "union4Attribute" [@@bs.set]
    external union5Attribute : testBinding:('own) testBinding_like ->  'a83 = "union5Attribute" [@@bs.get] 
    external setUnion5Attribute : testBinding:('own) testBinding_like -> union5Attribute:'a84 ->  unit = "union5Attribute" [@@bs.set]
    external union6Attribute : testBinding:('own) testBinding_like ->  'a85 = "union6Attribute" [@@bs.get] 
    external setUnion6Attribute : testBinding:('own) testBinding_like -> union6Attribute:'a86 ->  unit = "union6Attribute" [@@bs.set]
    external union7Attribute : testBinding:('own) testBinding_like ->  'a87 = "union7Attribute" [@@bs.get] 
    external setUnion7Attribute : testBinding:('own) testBinding_like -> union7Attribute:'a88 ->  unit = "union7Attribute" [@@bs.set]
    external union8Attribute : testBinding:('own) testBinding_like ->  'a89 = "union8Attribute" [@@bs.get] 
    external setUnion8Attribute : testBinding:('own) testBinding_like -> union8Attribute:'a90 ->  unit = "union8Attribute" [@@bs.set]
    external union9Attribute : testBinding:('own) testBinding_like ->  'a91 = "union9Attribute" [@@bs.get] 
    external setUnion9Attribute : testBinding:('own) testBinding_like -> union9Attribute:'a92 ->  unit = "union9Attribute" [@@bs.set]
    external arrayAttribute : testBinding:('own) testBinding_like ->  Js_typed_array.Uint8ClampedArray.t = "arrayAttribute" [@@bs.get] 
    external anyAttribute : testBinding:('own) testBinding_like ->  'a93 = "anyAttribute" [@@bs.get] 
    external setAnyAttribute : testBinding:('own) testBinding_like -> anyAttribute:'a94 ->  unit = "anyAttribute" [@@bs.set]
    external objectAttribute : testBinding:('own) testBinding_like ->  'a95 = "objectAttribute" [@@bs.get] 
    external setObjectAttribute : testBinding:('own) testBinding_like -> objectAttribute:'a96 ->  unit = "objectAttribute" [@@bs.set]
    external booleanAttributeNullable : testBinding:('own) testBinding_like ->  Js.boolean option = "booleanAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setBooleanAttributeNullable : testBinding:('own) testBinding_like -> booleanAttributeNullable:Js.boolean Js.null ->  unit = "booleanAttributeNullable" [@@bs.set]
    external byteAttributeNullable : testBinding:('own) testBinding_like ->  int option = "byteAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setByteAttributeNullable : testBinding:('own) testBinding_like -> byteAttributeNullable:int Js.null ->  unit = "byteAttributeNullable" [@@bs.set]
    external octetAttributeNullable : testBinding:('own) testBinding_like ->  int option = "octetAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setOctetAttributeNullable : testBinding:('own) testBinding_like -> octetAttributeNullable:int Js.null ->  unit = "octetAttributeNullable" [@@bs.set]
    external shortAttributeNullable : testBinding:('own) testBinding_like ->  int option = "shortAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setShortAttributeNullable : testBinding:('own) testBinding_like -> shortAttributeNullable:int Js.null ->  unit = "shortAttributeNullable" [@@bs.set]
    external unsignedShortAttributeNullable : testBinding:('own) testBinding_like ->  int option = "unsignedShortAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedShortAttributeNullable : testBinding:('own) testBinding_like -> unsignedShortAttributeNullable:int Js.null ->  unit = "unsignedShortAttributeNullable" [@@bs.set]
    external longAttributeNullable : testBinding:('own) testBinding_like ->  int option = "longAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setLongAttributeNullable : testBinding:('own) testBinding_like -> longAttributeNullable:int Js.null ->  unit = "longAttributeNullable" [@@bs.set]
    external unsignedLongAttributeNullable : testBinding:('own) testBinding_like ->  int option = "unsignedLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedLongAttributeNullable : testBinding:('own) testBinding_like -> unsignedLongAttributeNullable:int Js.null ->  unit = "unsignedLongAttributeNullable" [@@bs.set]
    external longLongAttributeNullable : testBinding:('own) testBinding_like ->  int option = "longLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setLongLongAttributeNullable : testBinding:('own) testBinding_like -> longLongAttributeNullable:int Js.null ->  unit = "longLongAttributeNullable" [@@bs.set]
    external unsignedLongLongAttributeNullable : testBinding:('own) testBinding_like ->  int option = "unsignedLongLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedLongLongAttributeNullable : testBinding:('own) testBinding_like -> unsignedLongLongAttributeNullable:int Js.null ->  unit = "unsignedLongLongAttributeNullable" [@@bs.set]
    external unrestrictedFloatAttributeNullable : testBinding:('own) testBinding_like ->  float option = "unrestrictedFloatAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnrestrictedFloatAttributeNullable : testBinding:('own) testBinding_like -> unrestrictedFloatAttributeNullable:float Js.null ->  unit = "unrestrictedFloatAttributeNullable" [@@bs.set]
    external floatAttributeNullable : testBinding:('own) testBinding_like ->  float option = "floatAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setFloatAttributeNullable : testBinding:('own) testBinding_like -> floatAttributeNullable:float Js.null ->  unit = "floatAttributeNullable" [@@bs.set]
    external unrestrictedDoubleAttributeNullable : testBinding:('own) testBinding_like ->  float option = "unrestrictedDoubleAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnrestrictedDoubleAttributeNullable : testBinding:('own) testBinding_like -> unrestrictedDoubleAttributeNullable:float Js.null ->  unit = "unrestrictedDoubleAttributeNullable" [@@bs.set]
    external doubleAttributeNullable : testBinding:('own) testBinding_like ->  float option = "doubleAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setDoubleAttributeNullable : testBinding:('own) testBinding_like -> doubleAttributeNullable:float Js.null ->  unit = "doubleAttributeNullable" [@@bs.set]
    external stringAttributeNullable : testBinding:('own) testBinding_like ->  string option = "stringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setStringAttributeNullable : testBinding:('own) testBinding_like -> stringAttributeNullable:string Js.null ->  unit = "stringAttributeNullable" [@@bs.set]
    external usvstringAttributeNullable : testBinding:('own) testBinding_like ->  string option = "usvstringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUsvstringAttributeNullable : testBinding:('own) testBinding_like -> usvstringAttributeNullable:string Js.null ->  unit = "usvstringAttributeNullable" [@@bs.set]
    external byteStringAttributeNullable : testBinding:('own) testBinding_like ->  string option = "byteStringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setByteStringAttributeNullable : testBinding:('own) testBinding_like -> byteStringAttributeNullable:string Js.null ->  unit = "byteStringAttributeNullable" [@@bs.set]
    external enumAttributeNullable : testBinding:('own) testBinding_like ->  string option = "enumAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external interfaceAttributeNullable : testBinding:('own) testBinding_like ->  blob option = "interfaceAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setInterfaceAttributeNullable : testBinding:('own) testBinding_like -> interfaceAttributeNullable:blob Js.null ->  unit = "interfaceAttributeNullable" [@@bs.set]
    external interfaceAttributeWeak : testBinding:('own) testBinding_like ->  uRL option = "interfaceAttributeWeak" [@@bs.get] [@@bs.return null_to_opt]
    external setInterfaceAttributeWeak : testBinding:('own) testBinding_like -> interfaceAttributeWeak:uRL Js.null ->  unit = "interfaceAttributeWeak" [@@bs.set]
    external objectAttributeNullable : testBinding:('own) testBinding_like ->  'a97 option = "objectAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setObjectAttributeNullable : testBinding:('own) testBinding_like -> objectAttributeNullable:'a98 Js.null ->  unit = "objectAttributeNullable" [@@bs.set]
    external unionAttributeNullable : testBinding:('own) testBinding_like ->  'a99 = "unionAttributeNullable" [@@bs.get] 
    external setUnionAttributeNullable : testBinding:('own) testBinding_like -> unionAttributeNullable:'a100 ->  unit = "unionAttributeNullable" [@@bs.set]
    external union2AttributeNullable : testBinding:('own) testBinding_like ->  'a101 = "union2AttributeNullable" [@@bs.get] 
    external setUnion2AttributeNullable : testBinding:('own) testBinding_like -> union2AttributeNullable:'a102 ->  unit = "union2AttributeNullable" [@@bs.set]
    external union3AttributeNullable : testBinding:('own) testBinding_like ->  'a103 = "union3AttributeNullable" [@@bs.get] 
    external setUnion3AttributeNullable : testBinding:('own) testBinding_like -> union3AttributeNullable:'a104 ->  unit = "union3AttributeNullable" [@@bs.set]
    external union4AttributeNullable : testBinding:('own) testBinding_like ->  'a105 = "union4AttributeNullable" [@@bs.get] 
    external setUnion4AttributeNullable : testBinding:('own) testBinding_like -> union4AttributeNullable:'a106 ->  unit = "union4AttributeNullable" [@@bs.set]
    external union5AttributeNullable : testBinding:('own) testBinding_like ->  'a107 = "union5AttributeNullable" [@@bs.get] 
    external setUnion5AttributeNullable : testBinding:('own) testBinding_like -> union5AttributeNullable:'a108 ->  unit = "union5AttributeNullable" [@@bs.set]
    external union6AttributeNullable : testBinding:('own) testBinding_like ->  'a109 = "union6AttributeNullable" [@@bs.get] 
    external setUnion6AttributeNullable : testBinding:('own) testBinding_like -> union6AttributeNullable:'a110 ->  unit = "union6AttributeNullable" [@@bs.set]
    external attrToBinaryRename : testBinding:('own) testBinding_like ->  string = "attrToBinaryRename" [@@bs.get] 
    external setAttrToBinaryRename : testBinding:('own) testBinding_like -> attrToBinaryRename:string ->  unit = "attrToBinaryRename" [@@bs.set]
    external forwardedAttribute : testBinding:('own) testBinding_like ->  testBinding = "forwardedAttribute" [@@bs.get] 
    external booleanAttributeStatic : testBinding:('own) testBinding_like ->  bool = "booleanAttributeStatic" [@@bs.get] 
    external setBooleanAttributeStatic : testBinding:('own) testBinding_like -> booleanAttributeStatic:Js.boolean ->  unit = "booleanAttributeStatic" [@@bs.set]
    external prefControlledAttributeDisabled : testBinding:('own) testBinding_like ->  bool = "prefControlledAttributeDisabled" [@@bs.get] 
    external prefControlledStaticAttributeDisabled : testBinding:('own) testBinding_like ->  bool = "prefControlledStaticAttributeDisabled" [@@bs.get] 
    external prefControlledAttributeEnabled : testBinding:('own) testBinding_like ->  bool = "prefControlledAttributeEnabled" [@@bs.get] 
    external prefControlledStaticAttributeEnabled : testBinding:('own) testBinding_like ->  bool = "prefControlledStaticAttributeEnabled" [@@bs.get] 
    external funcControlledAttributeDisabled : testBinding:('own) testBinding_like ->  bool = "funcControlledAttributeDisabled" [@@bs.get] 
    external funcControlledStaticAttributeDisabled : testBinding:('own) testBinding_like ->  bool = "funcControlledStaticAttributeDisabled" [@@bs.get] 
    external funcControlledAttributeEnabled : testBinding:('own) testBinding_like ->  bool = "funcControlledAttributeEnabled" [@@bs.get] 
    external funcControlledStaticAttributeEnabled : testBinding:('own) testBinding_like ->  bool = "funcControlledStaticAttributeEnabled" [@@bs.get] 
    external promiseAttribute : testBinding:('own) testBinding_like ->  Js.boolean Js.Promise.t = "promiseAttribute" [@@bs.get] 
    external booleanMozPreference : pref_name:string ->  bool = "BooleanMozPreference" [@@bs.send.pipe: ('own) testBinding_like] 
    external stringMozPreference : pref_name:string ->  string = "StringMozPreference" [@@bs.send.pipe: ('own) testBinding_like] 
    external acceptPromise : string:string Js.Promise.t ->  unit = "acceptPromise" [@@bs.send.pipe: ('own) testBinding_like] 
    external advanceClock : millis:int -> ?forceLayoutTick:Js.boolean Js.undefined ->  unit = "advanceClock" [@@bs.send.pipe: ('own) testBinding_like] 
    external crashHard :  unit = "crashHard" [@@bs.send.pipe: ('own) testBinding_like] 
    external dictMatchesPassedValues : arg:(_) testDictionary_like ->  bool = "dictMatchesPassedValues" [@@bs.send.pipe: ('own) testBinding_like] 
    external entryGlobal :  globalScope = "entryGlobal" [@@bs.send.pipe: ('own) testBinding_like] 
    external funcControlledMethodDisabled :  unit = "funcControlledMethodDisabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external funcControlledMethodEnabled :  unit = "funcControlledMethodEnabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external funcControlledStaticMethodDisabled :  unit = "funcControlledStaticMethodDisabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external funcControlledStaticMethodEnabled :  unit = "funcControlledStaticMethodEnabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external incumbentGlobal :  globalScope = "incumbentGlobal" [@@bs.send.pipe: ('own) testBinding_like] 
    external methToBinaryRename :  unit = "methToBinaryRename" [@@bs.send.pipe: ('own) testBinding_like] 
    external panic :  unit = "panic" [@@bs.send.pipe: ('own) testBinding_like] 
    external passAny : arg:'a111 ->  unit = "passAny" [@@bs.send.pipe: ('own) testBinding_like] 
    external passBoolean : arg:Js.boolean ->  unit = "passBoolean" [@@bs.send.pipe: ('own) testBinding_like] 
    external passByte : arg:int ->  unit = "passByte" [@@bs.send.pipe: ('own) testBinding_like] 
    external passByteString : arg:string ->  unit = "passByteString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passByteStringMozMap : arg:'a112 ->  unit = "passByteStringMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passCallbackFunction : fun_:('a113 -> 'a114 [@bs]) ->  unit = "passCallbackFunction" [@@bs.send.pipe: ('own) testBinding_like] 
    external passCallbackInterface : listener:(_) eventListener_like ->  unit = "passCallbackInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passCastableObjectMozMap : arg:'a115 ->  unit = "passCastableObjectMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passCastableObjectNullableMozMap : arg:'a116 Js.null ->  unit = "passCastableObjectNullableMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passDouble : arg:float ->  unit = "passDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passEnum : arg:string ->  unit = "passEnum" [@@bs.send.pipe: ('own) testBinding_like] 
    external passFloat : arg:float ->  unit = "passFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passInterface : arg:(_) blob_like ->  unit = "passInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passInterfaceSequence : seq:(_) blob_like array ->  unit = "passInterfaceSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passLong : arg:int ->  unit = "passLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passLongLong : arg:int ->  unit = "passLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMap : arg:'a117 ->  unit = "passMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMapOfMozMaps : arg:'a118 ->  unit = "passMozMapOfMozMaps" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMapOfNullableInts : arg:'a119 ->  unit = "passMozMapOfNullableInts" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMapUnion : init:'a120 ->  unit = "passMozMapUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMapUnion2 : init:'a121 ->  unit = "passMozMapUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passMozMapUnion3 : init:'a122 ->  unit = "passMozMapUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableBoolean : arg:Js.boolean Js.null ->  unit = "passNullableBoolean" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableByte : arg:int Js.null ->  unit = "passNullableByte" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableByteString : arg:string Js.null ->  unit = "passNullableByteString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableCallbackFunction : fun_:('a123 -> 'a124 [@bs]) Js.null ->  unit = "passNullableCallbackFunction" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableCallbackInterface : listener:(_) eventListener_like Js.null ->  unit = "passNullableCallbackInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableCastableObjectMozMap : arg:'a125 ->  unit = "passNullableCastableObjectMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableCastableObjectNullableMozMap : arg:'a126 Js.null ->  unit = "passNullableCastableObjectNullableMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableDouble : arg:float Js.null ->  unit = "passNullableDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableFloat : arg:float Js.null ->  unit = "passNullableFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableInterface : arg:(_) blob_like Js.null ->  unit = "passNullableInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableLong : arg:int Js.null ->  unit = "passNullableLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableLongLong : arg:int Js.null ->  unit = "passNullableLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableMozMap : arg:'a127 Js.null ->  unit = "passNullableMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableObject : arg:'a128 Js.null ->  unit = "passNullableObject" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableOctet : arg:int Js.null ->  unit = "passNullableOctet" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableSequence : seq:int array Js.null ->  unit = "passNullableSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableShort : arg:int Js.null ->  unit = "passNullableShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableString : arg:string Js.null ->  unit = "passNullableString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion : arg:'a129 ->  unit = "passNullableUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion2 : data:'a130 ->  unit = "passNullableUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion3 : data:'a131 ->  unit = "passNullableUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion4 : bool:'a132 ->  unit = "passNullableUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion5 : arg:'a133 ->  unit = "passNullableUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnion6 : arg:'a134 ->  unit = "passNullableUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnrestrictedDouble : arg:float Js.null ->  unit = "passNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnrestrictedFloat : arg:float Js.null ->  unit = "passNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnsignedLong : arg:int Js.null ->  unit = "passNullableUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnsignedLongLong : arg:int Js.null ->  unit = "passNullableUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUnsignedShort : arg:int Js.null ->  unit = "passNullableUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passNullableUsvstring : arg:string Js.null ->  unit = "passNullableUsvstring" [@@bs.send.pipe: ('own) testBinding_like] 
    external passObject : arg:'a135 ->  unit = "passObject" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOctet : arg:int ->  unit = "passOctet" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalAny : ?arg:'a136 Js.undefined ->  unit = "passOptionalAny" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalAnyWithDefault : ?arg:'a137 Js.undefined ->  unit = "passOptionalAnyWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalBoolean : ?arg:Js.boolean Js.undefined ->  unit = "passOptionalBoolean" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalBooleanWithDefault : ?arg:Js.boolean Js.undefined ->  unit = "passOptionalBooleanWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalByte : ?arg:int Js.undefined ->  unit = "passOptionalByte" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalByteString : ?arg:string Js.undefined ->  unit = "passOptionalByteString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalByteWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalByteWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalBytestringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalBytestringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalCallbackFunction : ?fun_:('a138 -> 'a139 [@bs]) Js.undefined ->  unit = "passOptionalCallbackFunction" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalCallbackInterface : ?listener:(_) eventListener_like Js.undefined ->  unit = "passOptionalCallbackInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalDouble : ?arg:float Js.undefined ->  unit = "passOptionalDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalEnum : ?arg:string Js.undefined ->  unit = "passOptionalEnum" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalEnumWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalEnumWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalFloat : ?arg:float Js.undefined ->  unit = "passOptionalFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalInterface : ?arg:(_) blob_like Js.undefined ->  unit = "passOptionalInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalLong : ?arg:int Js.undefined ->  unit = "passOptionalLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalLongLong : ?arg:int Js.undefined ->  unit = "passOptionalLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalLongLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalLongLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalMozMap : ?arg:'a140 Js.undefined ->  unit = "passOptionalMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalMozMapOfNullableInts : ?arg:'a141 Js.undefined ->  unit = "passOptionalMozMapOfNullableInts" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableBoolean : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBoolean" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableBooleanWithDefault : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBooleanWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableBooleanWithNonNullDefault : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBooleanWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableByte : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByte" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableByteString : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableByteString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableByteStringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableByteStringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableByteWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByteWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableByteWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByteWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableCallbackFunction : ?fun_:('a142 -> 'a143 [@bs]) Js.null Js.undefined ->  unit = "passOptionalNullableCallbackFunction" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableCallbackInterface : ?listener:(_) eventListener_like Js.null Js.undefined ->  unit = "passOptionalNullableCallbackInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableCallbackInterfaceWithDefault : ?listener:(_) eventListener_like Js.null Js.undefined ->  unit = "passOptionalNullableCallbackInterfaceWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableDouble : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableFloat : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableInterface : ?arg:(_) blob_like Js.null Js.undefined ->  unit = "passOptionalNullableInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableInterfaceWithDefault : ?arg:(_) blob_like Js.null Js.undefined ->  unit = "passOptionalNullableInterfaceWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLongLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLongLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLongLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLongWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableMozMap : ?arg:'a144 Js.null Js.undefined ->  unit = "passOptionalNullableMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableMozMapOfNullableInts : ?arg:'a145 Js.null Js.undefined ->  unit = "passOptionalNullableMozMapOfNullableInts" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableMozMapWithDefaultValue : ?arg:'a146 Js.null Js.undefined ->  unit = "passOptionalNullableMozMapWithDefaultValue" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableObject : ?arg:'a147 Js.null Js.undefined ->  unit = "passOptionalNullableObject" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableObjectWithDefault : ?arg:'a148 Js.null Js.undefined ->  unit = "passOptionalNullableObjectWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableOctet : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctet" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableOctetWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctetWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableOctetWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctetWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableSequence : ?seq:int array Js.null Js.undefined ->  unit = "passOptionalNullableSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableShort : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableShortWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShortWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableShortWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShortWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableString : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableStringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableStringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableStringWithNonNullDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableStringWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion : ?arg:'a149 Js.undefined ->  unit = "passOptionalNullableUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion2 : ?data:'a150 Js.undefined ->  unit = "passOptionalNullableUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion2WithDefault : ?data:'a151 Js.undefined ->  unit = "passOptionalNullableUnion2WithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion3 : ?arg:'a152 Js.undefined ->  unit = "passOptionalNullableUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion4 : ?data:'a153 Js.undefined ->  unit = "passOptionalNullableUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion5 : ?bool:'a154 Js.undefined ->  unit = "passOptionalNullableUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnion6 : ?arg:'a155 Js.undefined ->  unit = "passOptionalNullableUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnionWithDefault : ?arg:'a156 Js.undefined ->  unit = "passOptionalNullableUnionWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnrestrictedDouble : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnrestrictedFloat : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLongLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLongLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLongLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLongWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedShort : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedShortWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShortWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUnsignedShortWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShortWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUsvstring : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstring" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUsvstringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalNullableUsvstringWithNonNullDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstringWithNonNullDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalObject : ?arg:'a157 Js.undefined ->  unit = "passOptionalObject" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalObjectMozMap : ?arg:'a158 Js.undefined ->  unit = "passOptionalObjectMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalOctet : ?arg:int Js.undefined ->  unit = "passOptionalOctet" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalOctetWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalOctetWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalSequence : ?seq:int array Js.undefined ->  unit = "passOptionalSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalShort : ?arg:int Js.undefined ->  unit = "passOptionalShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalShortWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalShortWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalString : ?arg:string Js.undefined ->  unit = "passOptionalString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalStringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalStringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion : ?arg:'a159 Js.undefined ->  unit = "passOptionalUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion2 : ?data:'a160 Js.undefined ->  unit = "passOptionalUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion3 : ?arg:'a161 Js.undefined ->  unit = "passOptionalUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion4 : ?data:'a162 Js.undefined ->  unit = "passOptionalUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion5 : ?bool:'a163 Js.undefined ->  unit = "passOptionalUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnion6 : ?arg:'a164 Js.undefined ->  unit = "passOptionalUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnrestrictedDouble : ?arg:float Js.undefined ->  unit = "passOptionalUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnrestrictedFloat : ?arg:float Js.undefined ->  unit = "passOptionalUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedLong : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedLongLong : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedLongLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedShort : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUnsignedShortWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedShortWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUsvstring : ?arg:string Js.undefined ->  unit = "passOptionalUsvstring" [@@bs.send.pipe: ('own) testBinding_like] 
    external passOptionalUsvstringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalUsvstringWithDefault" [@@bs.send.pipe: ('own) testBinding_like] 
    external passSequence : seq:int array ->  unit = "passSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passSequenceSequence : seq:int array array ->  unit = "passSequenceSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passShort : arg:int ->  unit = "passShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passString : arg:string ->  unit = "passString" [@@bs.send.pipe: ('own) testBinding_like] 
    external passStringMozMap : arg:'a165 ->  unit = "passStringMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external passStringSequence : seq:string array ->  unit = "passStringSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion : arg:'a166 ->  unit = "passUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion10 : arg:'a167 ->  unit = "passUnion10" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion2 : data:'a168 ->  unit = "passUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion3 : data:'a169 ->  unit = "passUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion4 : seq:'a170 ->  unit = "passUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion5 : data:'a171 ->  unit = "passUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion6 : bool:'a172 ->  unit = "passUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion7 : arg:'a173 ->  unit = "passUnion7" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion8 : arg:'a174 ->  unit = "passUnion8" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnion9 : arg:'a175 ->  unit = "passUnion9" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnionSequenceSequence : seq:'a176 ->  unit = "passUnionSequenceSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnionWithTypedef : arg:'a177 ->  unit = "passUnionWithTypedef" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnionWithTypedef2 : arg:'a178 ->  unit = "passUnionWithTypedef2" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnrestrictedDouble : arg:float ->  unit = "passUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnrestrictedFloat : arg:float ->  unit = "passUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnsignedLong : arg:int ->  unit = "passUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnsignedLongLong : arg:int ->  unit = "passUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUnsignedShort : arg:int ->  unit = "passUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external passUsvstring : arg:string ->  unit = "passUsvstring" [@@bs.send.pipe: ('own) testBinding_like] 
    external passVariadicAny : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a179)) variadic_func = "passVariadicAny" [@@bs.get]
    external passVariadicBoolean : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (Js.boolean)) variadic_func = "passVariadicBoolean" [@@bs.get]
    external passVariadicBooleanAndDefault : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (Js.boolean Js.undefined*(Js.boolean))) variadic_func = "passVariadicBooleanAndDefault" [@@bs.get]
    external passVariadicByte : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicByte" [@@bs.get]
    external passVariadicByteString : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (string)) variadic_func = "passVariadicByteString" [@@bs.get]
    external passVariadicDouble : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (float)) variadic_func = "passVariadicDouble" [@@bs.get]
    external passVariadicEnum : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (string)) variadic_func = "passVariadicEnum" [@@bs.get]
    external passVariadicFloat : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (float)) variadic_func = "passVariadicFloat" [@@bs.get]
    external passVariadicInterface : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ((_) blob_like)) variadic_func = "passVariadicInterface" [@@bs.get]
    external passVariadicLong : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicLong" [@@bs.get]
    external passVariadicLongLong : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicLongLong" [@@bs.get]
    external passVariadicObject : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a180)) variadic_func = "passVariadicObject" [@@bs.get]
    external passVariadicOctet : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicOctet" [@@bs.get]
    external passVariadicShort : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicShort" [@@bs.get]
    external passVariadicString : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (string)) variadic_func = "passVariadicString" [@@bs.get]
    external passVariadicUnion : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a181)) variadic_func = "passVariadicUnion" [@@bs.get]
    external passVariadicUnion2 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a182)) variadic_func = "passVariadicUnion2" [@@bs.get]
    external passVariadicUnion3 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a183)) variadic_func = "passVariadicUnion3" [@@bs.get]
    external passVariadicUnion4 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a184)) variadic_func = "passVariadicUnion4" [@@bs.get]
    external passVariadicUnion5 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a185)) variadic_func = "passVariadicUnion5" [@@bs.get]
    external passVariadicUnion6 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a186)) variadic_func = "passVariadicUnion6" [@@bs.get]
    external passVariadicUnion7 : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, ('a187)) variadic_func = "passVariadicUnion7" [@@bs.get]
    external passVariadicUnrestrictedDouble : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (float)) variadic_func = "passVariadicUnrestrictedDouble" [@@bs.get]
    external passVariadicUnrestrictedFloat : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (float)) variadic_func = "passVariadicUnrestrictedFloat" [@@bs.get]
    external passVariadicUnsignedLong : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedLong" [@@bs.get]
    external passVariadicUnsignedLongLong : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedLongLong" [@@bs.get]
    external passVariadicUnsignedShort : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedShort" [@@bs.get]
    external passVariadicUsvstring : testBinding:('own) testBinding_like ->  (('own) testBinding_like, unit, (string)) variadic_func = "passVariadicUsvstring" [@@bs.get]
    external prefControlledMethodDisabled :  unit = "prefControlledMethodDisabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external prefControlledMethodEnabled :  unit = "prefControlledMethodEnabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external prefControlledStaticMethodDisabled :  unit = "prefControlledStaticMethodDisabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external prefControlledStaticMethodEnabled :  unit = "prefControlledStaticMethodEnabled" [@@bs.send.pipe: ('own) testBinding_like] 
    external promiseNativeHandler : resolve:('a189 -> unit [@bs]) Js.null -> reject:('a190 -> unit [@bs]) Js.null ->  'a188 Js.Promise.t = "promiseNativeHandler" [@@bs.send.pipe: ('own) testBinding_like] 
    external promiseRejectNative : p:'a191 Js.Promise.t -> value:'a192 ->  unit = "promiseRejectNative" [@@bs.send.pipe: ('own) testBinding_like] 
    external promiseRejectWithTypeError : p:'a193 Js.Promise.t -> message:string ->  unit = "promiseRejectWithTypeError" [@@bs.send.pipe: ('own) testBinding_like] 
    external promiseResolveNative : p:'a194 Js.Promise.t -> value:'a195 ->  unit = "promiseResolveNative" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveAny :  'a196 = "receiveAny" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveAnyMozMap :  'a197 = "receiveAnyMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveBoolean :  bool = "receiveBoolean" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveByte :  int = "receiveByte" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveByteString :  string = "receiveByteString" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveDouble :  float = "receiveDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveEnum :  string = "receiveEnum" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveFloat :  float = "receiveFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveInterface :  blob = "receiveInterface" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveInterfaceSequence :  blob array = "receiveInterfaceSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveLong :  int = "receiveLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveLongLong :  int = "receiveLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveMozMap :  'a198 = "receiveMozMap" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveMozMapOfMozMaps :  'a199 = "receiveMozMapOfMozMaps" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveMozMapOfNullableInts :  'a200 = "receiveMozMapOfNullableInts" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableBoolean :  Js.boolean option = "receiveNullableBoolean" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableByte :  int option = "receiveNullableByte" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableByteString :  string option = "receiveNullableByteString" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableDouble :  float option = "receiveNullableDouble" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableEnum :  string option = "receiveNullableEnum" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableFloat :  float option = "receiveNullableFloat" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableInterface :  blob option = "receiveNullableInterface" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableLong :  int option = "receiveNullableLong" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableLongLong :  int option = "receiveNullableLongLong" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableMozMap :  'a201 option = "receiveNullableMozMap" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableMozMapOfNullableInts :  'a202 option = "receiveNullableMozMapOfNullableInts" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableObject :  'a203 option = "receiveNullableObject" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableOctet :  int option = "receiveNullableOctet" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableSequence :  int array option = "receiveNullableSequence" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableShort :  int option = "receiveNullableShort" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableString :  string option = "receiveNullableString" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnion :  'a204 = "receiveNullableUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnion2 :  'a205 = "receiveNullableUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnion3 :  'a206 = "receiveNullableUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnion4 :  'a207 = "receiveNullableUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnion5 :  'a208 = "receiveNullableUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnion6 :  'a209 = "receiveNullableUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveNullableUnrestrictedDouble :  float option = "receiveNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnrestrictedFloat :  float option = "receiveNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedLong :  int option = "receiveNullableUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedLongLong :  int option = "receiveNullableUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedShort :  int option = "receiveNullableUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUsvstring :  string option = "receiveNullableUsvstring" [@@bs.send.pipe: ('own) testBinding_like] [@@bs.return null_to_opt]
    external receiveObject :  'a210 = "receiveObject" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveOctet :  int = "receiveOctet" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveSequence :  int array = "receiveSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveShort :  int = "receiveShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveString :  string = "receiveString" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveTestDictionaryWithSuccessOnKeyword :  testDictionary = "receiveTestDictionaryWithSuccessOnKeyword" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion :  'a211 = "receiveUnion" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion10 :  'a212 = "receiveUnion10" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion11 :  'a213 = "receiveUnion11" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion2 :  'a214 = "receiveUnion2" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion3 :  'a215 = "receiveUnion3" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion4 :  'a216 = "receiveUnion4" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion5 :  'a217 = "receiveUnion5" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion6 :  'a218 = "receiveUnion6" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion7 :  'a219 = "receiveUnion7" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion8 :  'a220 = "receiveUnion8" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnion9 :  'a221 = "receiveUnion9" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnrestrictedDouble :  float = "receiveUnrestrictedDouble" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnrestrictedFloat :  float = "receiveUnrestrictedFloat" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnsignedLong :  int = "receiveUnsignedLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnsignedLongLong :  int = "receiveUnsignedLongLong" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUnsignedShort :  int = "receiveUnsignedShort" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveUsvstring :  string = "receiveUsvstring" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveVoid :  unit = "receiveVoid" [@@bs.send.pipe: ('own) testBinding_like] 
    external receiveVoidStatic :  unit = "receiveVoidStatic" [@@bs.send.pipe: ('own) testBinding_like] 
    external resolvePromiseDelayed : p:'a222 Js.Promise.t -> value:string -> ms:int ->  unit = "resolvePromiseDelayed" [@@bs.send.pipe: ('own) testBinding_like] 
    external returnRejectedPromise : value:'a224 ->  'a223 Js.Promise.t = "returnRejectedPromise" [@@bs.send.pipe: ('own) testBinding_like] 
    external returnResolvedPromise : value:'a226 ->  'a225 Js.Promise.t = "returnResolvedPromise" [@@bs.send.pipe: ('own) testBinding_like] 
    external returnSequenceSequence :  int array array = "returnSequenceSequence" [@@bs.send.pipe: ('own) testBinding_like] 
    
    let prefcontrolledconstdisabled  =
      
      0
    
    let prefcontrolledconstenabled  =
      
      0
    
    let funccontrolledconstdisabled  =
      
      0
    
    let funccontrolledconstenabled  =
      
      0
    
    let advanceClock ~millis ?forceLayoutTick testBinding =
      let conv_forceLayoutTick = Js_undefined.from_opt in
      let forceLayoutTick = conv_forceLayoutTick forceLayoutTick in
      advanceClock ~millis ~forceLayoutTick testBinding
    
    let passEnum ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let arg = conv_arg arg in
      let return = passEnum ~arg testBinding in
      return
    
    let passMozMapUnion ~init testBinding =
      let conv_init = function
        | `Int (x: int) -> Obj.magic x
        | `Any (x: 'a227) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion ~init testBinding in
      return
    
    let passMozMapUnion2 ~init testBinding =
      let conv_init = function
        | `TestBinding (x: (_) testBinding_like) -> Obj.magic x
        | `Any (x: 'a228) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion2 ~init testBinding in
      return
    
    let passMozMapUnion3 ~init testBinding =
      let conv_init = function
        | `TestBinding (x: (_) testBinding_like) -> Obj.magic x
        | `String_Array_Array (x: string array array) -> Obj.magic x
        | `Any (x: 'a229) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion3 ~init testBinding in
      return
    
    let passNullableUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) hTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion ~arg testBinding in
      return
    
    let passNullableUnion2 ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passNullableUnion2 ~data testBinding in
      return
    
    let passNullableUnion3 ~data testBinding =
      let conv_data = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passNullableUnion3 ~data testBinding in
      return
    
    let passNullableUnion4 ~bool testBinding =
      let conv_bool = function
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let bool = conv_bool bool in
      let return = passNullableUnion4 ~bool testBinding in
      return
    
    let passNullableUnion5 ~arg testBinding =
      let conv_arg = function
        | `Int_Null (x: int Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion5 ~arg testBinding in
      return
    
    let passNullableUnion6 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion6 ~arg testBinding in
      return
    
    let passOptionalAny ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalAny ~arg testBinding
    
    let passOptionalAnyWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalAnyWithDefault ~arg testBinding
    
    let passOptionalBoolean ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBoolean ~arg testBinding
    
    let passOptionalBooleanWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBooleanWithDefault ~arg testBinding
    
    let passOptionalByte ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByte ~arg testBinding
    
    let passOptionalByteString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByteString ~arg testBinding
    
    let passOptionalByteWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByteWithDefault ~arg testBinding
    
    let passOptionalBytestringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBytestringWithDefault ~arg testBinding
    
    let passOptionalCallbackFunction ?fun_ testBinding =
      let conv_fun = Js_undefined.from_opt in
      let fun_ = conv_fun fun_ in
      passOptionalCallbackFunction ~fun_ testBinding
    
    let passOptionalCallbackInterface ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalCallbackInterface ~listener testBinding
    
    let passOptionalDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalDouble ~arg testBinding
    
    let passOptionalEnum ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalEnum ~arg testBinding in
      return
    
    let passOptionalEnum ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalEnum ~arg testBinding
    
    let passOptionalEnumWithDefault ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalEnumWithDefault ~arg testBinding in
      return
    
    let passOptionalEnumWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalEnumWithDefault ~arg testBinding
    
    let passOptionalFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalFloat ~arg testBinding
    
    let passOptionalInterface ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalInterface ~arg testBinding
    
    let passOptionalLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLong ~arg testBinding
    
    let passOptionalLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongLong ~arg testBinding
    
    let passOptionalLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongLongWithDefault ~arg testBinding
    
    let passOptionalLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongWithDefault ~arg testBinding
    
    let passOptionalMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalMozMap ~arg testBinding
    
    let passOptionalMozMapOfNullableInts ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalMozMapOfNullableInts ~arg testBinding
    
    let passOptionalNullableBoolean ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBoolean ~arg testBinding
    
    let passOptionalNullableBooleanWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBooleanWithDefault ~arg testBinding
    
    let passOptionalNullableBooleanWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBooleanWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableByte ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByte ~arg testBinding
    
    let passOptionalNullableByteString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteString ~arg testBinding
    
    let passOptionalNullableByteStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteStringWithDefault ~arg testBinding
    
    let passOptionalNullableByteWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteWithDefault ~arg testBinding
    
    let passOptionalNullableByteWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableCallbackFunction ?fun_ testBinding =
      let conv_fun = Js_undefined.from_opt in
      let fun_ = conv_fun fun_ in
      passOptionalNullableCallbackFunction ~fun_ testBinding
    
    let passOptionalNullableCallbackInterface ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalNullableCallbackInterface ~listener testBinding
    
    let passOptionalNullableCallbackInterfaceWithDefault ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalNullableCallbackInterfaceWithDefault ~listener testBinding
    
    let passOptionalNullableDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableDouble ~arg testBinding
    
    let passOptionalNullableFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableFloat ~arg testBinding
    
    let passOptionalNullableInterface ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableInterface ~arg testBinding
    
    let passOptionalNullableInterfaceWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableInterfaceWithDefault ~arg testBinding
    
    let passOptionalNullableLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLong ~arg testBinding
    
    let passOptionalNullableLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLong ~arg testBinding
    
    let passOptionalNullableLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLongWithDefault ~arg testBinding
    
    let passOptionalNullableLongLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongWithDefault ~arg testBinding
    
    let passOptionalNullableLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMap ~arg testBinding
    
    let passOptionalNullableMozMapOfNullableInts ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMapOfNullableInts ~arg testBinding
    
    let passOptionalNullableMozMapWithDefaultValue ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMapWithDefaultValue ~arg testBinding
    
    let passOptionalNullableObject ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableObject ~arg testBinding
    
    let passOptionalNullableObjectWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableObjectWithDefault ~arg testBinding
    
    let passOptionalNullableOctet ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctet ~arg testBinding
    
    let passOptionalNullableOctetWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctetWithDefault ~arg testBinding
    
    let passOptionalNullableOctetWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctetWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableSequence ?seq testBinding =
      let conv_seq = Js_undefined.from_opt in
      let seq = conv_seq seq in
      passOptionalNullableSequence ~seq testBinding
    
    let passOptionalNullableShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShort ~arg testBinding
    
    let passOptionalNullableShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShortWithDefault ~arg testBinding
    
    let passOptionalNullableShortWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShortWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableString ~arg testBinding
    
    let passOptionalNullableStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableStringWithDefault ~arg testBinding
    
    let passOptionalNullableStringWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableStringWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) hTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion ~arg testBinding in
      return
    
    let passOptionalNullableUnion ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion ~arg testBinding
    
    let passOptionalNullableUnion2 ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion2 ~data testBinding in
      return
    
    let passOptionalNullableUnion2 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion2 ~data testBinding
    
    let passOptionalNullableUnion2WithDefault ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion2WithDefault ~data testBinding in
      return
    
    let passOptionalNullableUnion2WithDefault ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion2WithDefault ~data testBinding
    
    let passOptionalNullableUnion3 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion3 ~arg testBinding in
      return
    
    let passOptionalNullableUnion3 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion3 ~arg testBinding
    
    let passOptionalNullableUnion4 ~data testBinding =
      let conv_data = function
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion4 ~data testBinding in
      return
    
    let passOptionalNullableUnion4 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion4 ~data testBinding
    
    let passOptionalNullableUnion5 ~bool testBinding =
      let conv_bool = function
        | `Int_Null (x: int Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let conv_bool = access_undef conv_bool in
      let bool = conv_bool bool in
      let return = passOptionalNullableUnion5 ~bool testBinding in
      return
    
    let passOptionalNullableUnion5 ?bool testBinding =
      let conv_bool = Js_undefined.from_opt in
      let bool = conv_bool bool in
      passOptionalNullableUnion5 ~bool testBinding
    
    let passOptionalNullableUnion6 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion6 ~arg testBinding in
      return
    
    let passOptionalNullableUnion6 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion6 ~arg testBinding
    
    let passOptionalNullableUnionWithDefault ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) hTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnionWithDefault ~arg testBinding in
      return
    
    let passOptionalNullableUnionWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnionWithDefault ~arg testBinding
    
    let passOptionalNullableUnrestrictedDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnrestrictedDouble ~arg testBinding
    
    let passOptionalNullableUnrestrictedFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnrestrictedFloat ~arg testBinding
    
    let passOptionalNullableUnsignedLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLong ~arg testBinding
    
    let passOptionalNullableUnsignedLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLong ~arg testBinding
    
    let passOptionalNullableUnsignedLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLongWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnsignedShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShort ~arg testBinding
    
    let passOptionalNullableUnsignedShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShortWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedShortWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShortWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUsvstring ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstring ~arg testBinding
    
    let passOptionalNullableUsvstringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstringWithDefault ~arg testBinding
    
    let passOptionalNullableUsvstringWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstringWithNonNullDefault ~arg testBinding
    
    let passOptionalObject ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalObject ~arg testBinding
    
    let passOptionalObjectMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalObjectMozMap ~arg testBinding
    
    let passOptionalOctet ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalOctet ~arg testBinding
    
    let passOptionalOctetWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalOctetWithDefault ~arg testBinding
    
    let passOptionalSequence ?seq testBinding =
      let conv_seq = Js_undefined.from_opt in
      let seq = conv_seq seq in
      passOptionalSequence ~seq testBinding
    
    let passOptionalShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalShort ~arg testBinding
    
    let passOptionalShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalShortWithDefault ~arg testBinding
    
    let passOptionalString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalString ~arg testBinding
    
    let passOptionalStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalStringWithDefault ~arg testBinding
    
    let passOptionalUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement (x: (_) hTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion ~arg testBinding in
      return
    
    let passOptionalUnion ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion ~arg testBinding
    
    let passOptionalUnion2 ~data testBinding =
      let conv_data = function
        | `Event (x: (_) event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalUnion2 ~data testBinding in
      return
    
    let passOptionalUnion2 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalUnion2 ~data testBinding
    
    let passOptionalUnion3 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Int_Array (x: int array) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion3 ~arg testBinding in
      return
    
    let passOptionalUnion3 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion3 ~arg testBinding
    
    let passOptionalUnion4 ~data testBinding =
      let conv_data = function
        | `Int_Array (x: int array) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalUnion4 ~data testBinding in
      return
    
    let passOptionalUnion4 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalUnion4 ~data testBinding
    
    let passOptionalUnion5 ~bool testBinding =
      let conv_bool = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_bool = access_undef conv_bool in
      let bool = conv_bool bool in
      let return = passOptionalUnion5 ~bool testBinding in
      return
    
    let passOptionalUnion5 ?bool testBinding =
      let conv_bool = Js_undefined.from_opt in
      let bool = conv_bool bool in
      passOptionalUnion5 ~bool testBinding
    
    let passOptionalUnion6 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion6 ~arg testBinding in
      return
    
    let passOptionalUnion6 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion6 ~arg testBinding
    
    let passOptionalUnrestrictedDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnrestrictedDouble ~arg testBinding
    
    let passOptionalUnrestrictedFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnrestrictedFloat ~arg testBinding
    
    let passOptionalUnsignedLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLong ~arg testBinding
    
    let passOptionalUnsignedLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongLong ~arg testBinding
    
    let passOptionalUnsignedLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongLongWithDefault ~arg testBinding
    
    let passOptionalUnsignedLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongWithDefault ~arg testBinding
    
    let passOptionalUnsignedShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedShort ~arg testBinding
    
    let passOptionalUnsignedShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedShortWithDefault ~arg testBinding
    
    let passOptionalUsvstring ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUsvstring ~arg testBinding
    
    let passOptionalUsvstringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUsvstringWithDefault ~arg testBinding
    
    let passUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement (x: (_) hTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion ~arg testBinding in
      return
    
    let passUnion10 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Any (x: 'a230) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion10 ~arg testBinding in
      return
    
    let passUnion2 ~data testBinding =
      let conv_data = function
        | `Event (x: (_) event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion2 ~data testBinding in
      return
    
    let passUnion3 ~data testBinding =
      let conv_data = function
        | `Blob (x: (_) blob_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion3 ~data testBinding in
      return
    
    let passUnion4 ~seq testBinding =
      let conv_seq = function
        | `String (x: string) -> Obj.magic x
        | `String_Array (x: string array) -> Obj.magic x
         in
      let seq = conv_seq seq in
      let return = passUnion4 ~seq testBinding in
      return
    
    let passUnion5 ~data testBinding =
      let conv_data = function
        | `String (x: string) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion5 ~data testBinding in
      return
    
    let passUnion6 ~bool testBinding =
      let conv_bool = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let bool = conv_bool bool in
      let return = passUnion6 ~bool testBinding in
      return
    
    let passUnion7 ~arg testBinding =
      let conv_arg = function
        | `String_Array (x: string array) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion7 ~arg testBinding in
      return
    
    let passUnion8 ~arg testBinding =
      let conv_arg = function
        | `String_Array (x: string array) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion8 ~arg testBinding in
      return
    
    let passUnion9 ~arg testBinding =
      let conv_arg = function
        | `TestDictionary (x: (_) testDictionary_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion9 ~arg testBinding in
      return
    
    let passUnionSequenceSequence ~seq testBinding =
      let conv_seq = function
        | `Int (x: int) -> Obj.magic x
        | `Int_Array_Array (x: int array array) -> Obj.magic x
         in
      let seq = conv_seq seq in
      let return = passUnionSequenceSequence ~seq testBinding in
      return
    
    let passUnionWithTypedef ~arg testBinding =
      let conv_arg = function
        | `Document (x: (_) document_like) -> Obj.magic x
        | `Any (x: 'a231) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnionWithTypedef ~arg testBinding in
      return
    
    let passUnionWithTypedef2 ~arg testBinding =
      let conv_arg = function
        | `Int_Array (x: int array) -> Obj.magic x
        | `Any (x: 'a232) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnionWithTypedef2 ~arg testBinding in
      return
    
    let passVariadicAny ~args testBinding =
      let func = passVariadicAny testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicBoolean ~args testBinding =
      let func = passVariadicBoolean testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicBooleanAndDefault ~arg ~args testBinding =
      let func = passVariadicBooleanAndDefault testBinding in
      let args = to_arg args in
      let args = unsafe_add args arg in
      apply func testBinding args
    
    let passVariadicBooleanAndDefault ?arg ~args testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passVariadicBooleanAndDefault ~arg ~args testBinding
    
    let passVariadicByte ~args testBinding =
      let func = passVariadicByte testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicByteString ~args testBinding =
      let func = passVariadicByteString testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicDouble ~args testBinding =
      let func = passVariadicDouble testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicEnum ~args testBinding =
      let func = passVariadicEnum testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicEnum ~args testBinding =
      let conv_args = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicEnum ~args testBinding in
      return
    
    let passVariadicFloat ~args testBinding =
      let func = passVariadicFloat testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicInterface ~args testBinding =
      let func = passVariadicInterface testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicLong ~args testBinding =
      let func = passVariadicLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicLongLong ~args testBinding =
      let func = passVariadicLongLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicObject ~args testBinding =
      let func = passVariadicObject testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicOctet ~args testBinding =
      let func = passVariadicOctet testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicShort ~args testBinding =
      let func = passVariadicShort testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicString ~args testBinding =
      let func = passVariadicString testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion ~args testBinding =
      let func = passVariadicUnion testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion ~args testBinding =
      let conv_args = function
        | `HTMLElement (x: (_) hTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion ~args testBinding in
      return
    
    let passVariadicUnion2 ~args testBinding =
      let func = passVariadicUnion2 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion2 ~args testBinding =
      let conv_args = function
        | `Event (x: (_) event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion2 ~args testBinding in
      return
    
    let passVariadicUnion3 ~args testBinding =
      let func = passVariadicUnion3 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion3 ~args testBinding =
      let conv_args = function
        | `Blob (x: (_) blob_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion3 ~args testBinding in
      return
    
    let passVariadicUnion4 ~args testBinding =
      let func = passVariadicUnion4 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion4 ~args testBinding =
      let conv_args = function
        | `Blob (x: (_) blob_like) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion4 ~args testBinding in
      return
    
    let passVariadicUnion5 ~args testBinding =
      let func = passVariadicUnion5 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion5 ~args testBinding =
      let conv_args = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion5 ~args testBinding in
      return
    
    let passVariadicUnion6 ~args testBinding =
      let func = passVariadicUnion6 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion6 ~args testBinding =
      let conv_args = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion6 ~args testBinding in
      return
    
    let passVariadicUnion7 ~args testBinding =
      let func = passVariadicUnion7 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion7 ~args testBinding =
      let conv_args = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion7 ~args testBinding in
      return
    
    let passVariadicUnrestrictedDouble ~args testBinding =
      let func = passVariadicUnrestrictedDouble testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnrestrictedFloat ~args testBinding =
      let func = passVariadicUnrestrictedFloat testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedLong ~args testBinding =
      let func = passVariadicUnsignedLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedLongLong ~args testBinding =
      let func = passVariadicUnsignedLongLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedShort ~args testBinding =
      let func = passVariadicUnsignedShort testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUsvstring ~args testBinding =
      let func = passVariadicUsvstring testBinding in
      let args = to_arg args in
      apply func testBinding args
    
end
 module WorkerLocation = struct
    
    
    external href : workerLocation:('own) workerLocation_like ->  string = "href" [@@bs.get] 
    external protocol : workerLocation:('own) workerLocation_like ->  string = "protocol" [@@bs.get] 
    external host : workerLocation:('own) workerLocation_like ->  string = "host" [@@bs.get] 
    external hostname : workerLocation:('own) workerLocation_like ->  string = "hostname" [@@bs.get] 
    external port : workerLocation:('own) workerLocation_like ->  string = "port" [@@bs.get] 
    external pathname : workerLocation:('own) workerLocation_like ->  string = "pathname" [@@bs.get] 
    external search : workerLocation:('own) workerLocation_like ->  string = "search" [@@bs.get] 
    external hash : workerLocation:('own) workerLocation_like ->  string = "hash" [@@bs.get] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) workerLocation_like] 
    
    
end
 module CSS = struct
    
    
    external escape : ident:string ->  string = "escape" [@@bs.send.pipe: ('own) cSS_like] 
    external supports : property:string -> value:string ->  bool = "supports" [@@bs.send.pipe: ('own) cSS_like] 
    
    
end
 module CanvasGradient = struct
    
    
    external addColorStop : offset:float -> color:string ->  unit = "addColorStop" [@@bs.send.pipe: ('own) canvasGradient_like] 
    
    
end
 module VRFieldOfView = struct
    
    
    external upDegrees : vRFieldOfView:('own) vRFieldOfView_like ->  float = "upDegrees" [@@bs.get] 
    external rightDegrees : vRFieldOfView:('own) vRFieldOfView_like ->  float = "rightDegrees" [@@bs.get] 
    external downDegrees : vRFieldOfView:('own) vRFieldOfView_like ->  float = "downDegrees" [@@bs.get] 
    external leftDegrees : vRFieldOfView:('own) vRFieldOfView_like ->  float = "leftDegrees" [@@bs.get] 
    
    
end
 module CharacteristicEventHandlers = struct
    
    
    external oncharacteristicvaluechanged : characteristicEventHandlers:('own) characteristicEventHandlers_like ->  (event -> 'a233 [@bs]) option = "oncharacteristicvaluechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOncharacteristicvaluechanged : characteristicEventHandlers:('own) characteristicEventHandlers_like -> oncharacteristicvaluechanged:(event -> 'a234 [@bs]) Js.null ->  unit = "oncharacteristicvaluechanged" [@@bs.set]
    
    
end
 module Gamepad = struct
    
    
    external id : gamepad:('own) gamepad_like ->  string = "id" [@@bs.get] 
    external index : gamepad:('own) gamepad_like ->  int = "index" [@@bs.get] 
    external connected : gamepad:('own) gamepad_like ->  bool = "connected" [@@bs.get] 
    external timestamp : gamepad:('own) gamepad_like ->  float = "timestamp" [@@bs.get] 
    external mapping : gamepad:('own) gamepad_like ->  string = "mapping" [@@bs.get] 
    external axes : gamepad:('own) gamepad_like ->  Js_typed_array.Float64Array.t = "axes" [@@bs.get] 
    external buttons : gamepad:('own) gamepad_like ->  gamepadButtonList = "buttons" [@@bs.get] 
    external hand : gamepad:('own) gamepad_like ->  string = "hand" [@@bs.get] 
    external pose : gamepad:('own) gamepad_like ->  vRPose option = "pose" [@@bs.get] [@@bs.return null_to_opt]
    external displayId : gamepad:('own) gamepad_like ->  int = "displayId" [@@bs.get] 
    
    
end
 module TextDecoder = struct
    
    
    external encoding : textDecoder:('own) textDecoder_like ->  string = "encoding" [@@bs.get] 
    external fatal : textDecoder:('own) textDecoder_like ->  bool = "fatal" [@@bs.get] 
    external decode : ?input:'a235 Js.undefined ->  string = "decode" [@@bs.send.pipe: ('own) textDecoder_like] 
    
    let decode ?input textDecoder =
      let conv_input = Js_undefined.from_opt in
      let input = conv_input input in
      decode ~input textDecoder
    
end
 module TestBindingPairIterable = struct
    
    
    external add : key:string -> value:int ->  unit = "add" [@@bs.send.pipe: ('own) testBindingPairIterable_like] 
    
    
end
 module HTMLHyperlinkElementUtils = struct
    
    
    external href : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "origin" [@@bs.get] 
    external protocol : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "username" [@@bs.get] 
    external setUsername : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> username:string ->  unit = "username" [@@bs.set]
    external password : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "password" [@@bs.get] 
    external setPassword : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> password:string ->  unit = "password" [@@bs.set]
    external host : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "host" [@@bs.get] 
    external setHost : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "hostname" [@@bs.get] 
    external setHostname : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "port" [@@bs.get] 
    external setPort : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "pathname" [@@bs.get] 
    external setPathname : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "search" [@@bs.get] 
    external setSearch : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like ->  string = "hash" [@@bs.get] 
    external setHash : hTMLHyperlinkElementUtils:('own) hTMLHyperlinkElementUtils_like -> hash:string ->  unit = "hash" [@@bs.set]
    external toString :  string = "toString" [@@bs.send.pipe: ('own) hTMLHyperlinkElementUtils_like] 
    
    
end
 module NamedNodeMap = struct
    
    
    external length : namedNodeMap:('own) namedNodeMap_like ->  int = "length" [@@bs.get] 
    external getNamedItem : qualifiedName:string ->  attr option = "getNamedItem" [@@bs.send.pipe: ('own) namedNodeMap_like] [@@bs.return null_to_opt]
    external getNamedItemNS : namespace:string Js.null -> localName:string ->  attr option = "getNamedItemNS" [@@bs.send.pipe: ('own) namedNodeMap_like] [@@bs.return null_to_opt]
    external item : index:int ->  attr option = "item" [@@bs.send.pipe: ('own) namedNodeMap_like] [@@bs.return null_to_opt]
    external removeNamedItem : qualifiedName:string ->  attr = "removeNamedItem" [@@bs.send.pipe: ('own) namedNodeMap_like] 
    external removeNamedItemNS : namespace:string Js.null -> localName:string ->  attr = "removeNamedItemNS" [@@bs.send.pipe: ('own) namedNodeMap_like] 
    external setNamedItem : attr:(_) attr_like ->  attr option = "setNamedItem" [@@bs.send.pipe: ('own) namedNodeMap_like] [@@bs.return null_to_opt]
    external setNamedItemNS : attr:(_) attr_like ->  attr option = "setNamedItemNS" [@@bs.send.pipe: ('own) namedNodeMap_like] [@@bs.return null_to_opt]
    
    
end
 module TouchList = struct
    
    
    external length : touchList:('own) touchList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  touch option = "item" [@@bs.send.pipe: ('own) touchList_like] [@@bs.return null_to_opt]
    
    
end
 module WebGLActiveInfo = struct
    
    
    external size : webGLActiveInfo:('own) webGLActiveInfo_like ->  int = "size" [@@bs.get] 
    external type_ : webGLActiveInfo:('own) webGLActiveInfo_like ->  int = "type" [@@bs.get] 
    external name : webGLActiveInfo:('own) webGLActiveInfo_like ->  string = "name" [@@bs.get] 
    
    
end
 module Plugin = struct
    
    
    external name : plugin:('own) plugin_like ->  string = "name" [@@bs.get] 
    external description : plugin:('own) plugin_like ->  string = "description" [@@bs.get] 
    external filename : plugin:('own) plugin_like ->  string = "filename" [@@bs.get] 
    external length : plugin:('own) plugin_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  mimeType option = "item" [@@bs.send.pipe: ('own) plugin_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  mimeType option = "namedItem" [@@bs.send.pipe: ('own) plugin_like] [@@bs.return null_to_opt]
    
    
end
 module VRDisplayCapabilities = struct
    
    
    external hasPosition : vRDisplayCapabilities:('own) vRDisplayCapabilities_like ->  bool = "hasPosition" [@@bs.get] 
    external hasOrientation : vRDisplayCapabilities:('own) vRDisplayCapabilities_like ->  bool = "hasOrientation" [@@bs.get] 
    external hasExternalDisplay : vRDisplayCapabilities:('own) vRDisplayCapabilities_like ->  bool = "hasExternalDisplay" [@@bs.get] 
    external canPresent : vRDisplayCapabilities:('own) vRDisplayCapabilities_like ->  bool = "canPresent" [@@bs.get] 
    external maxLayers : vRDisplayCapabilities:('own) vRDisplayCapabilities_like ->  int = "maxLayers" [@@bs.get] 
    
    
end
 module Headers = struct
    
    
    external append : name:string -> value:string ->  unit = "append" [@@bs.send.pipe: ('own) headers_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) headers_like] 
    external get : name:string ->  string option = "get" [@@bs.send.pipe: ('own) headers_like] [@@bs.return null_to_opt]
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) headers_like] 
    external set : name:string -> value:string ->  unit = "set" [@@bs.send.pipe: ('own) headers_like] 
    
    
end
 module OESTextureHalfFloatLinear = struct
    
    
    
    
    
end
 module Worklet = struct
    
    
    external addModule : moduleURL:string -> ?options:(_) workletOptions_like Js.undefined ->  unit Js.Promise.t = "addModule" [@@bs.send.pipe: ('own) worklet_like] 
    
    let addModule ~moduleURL ?options worklet =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      addModule ~moduleURL ~options worklet
    
end
 module Navigator = struct
    
    
    external cookieEnabled : navigator:('own) navigator_like ->  bool = "cookieEnabled" [@@bs.get] 
    external plugins : navigator:('own) navigator_like ->  pluginArray = "plugins" [@@bs.get] 
    external mimeTypes : navigator:('own) navigator_like ->  mimeTypeArray = "mimeTypes" [@@bs.get] 
    external language : navigator:('own) navigator_like ->  string = "language" [@@bs.get] 
    external appCodeName : navigator:('own) navigator_like ->  string = "appCodeName" [@@bs.get] 
    external appName : navigator:('own) navigator_like ->  string = "appName" [@@bs.get] 
    external appVersion : navigator:('own) navigator_like ->  string = "appVersion" [@@bs.get] 
    external platform : navigator:('own) navigator_like ->  string = "platform" [@@bs.get] 
    external product : navigator:('own) navigator_like ->  string = "product" [@@bs.get] 
    external userAgent : navigator:('own) navigator_like ->  string = "userAgent" [@@bs.get] 
    external bluetooth : navigator:('own) navigator_like ->  bluetooth = "bluetooth" [@@bs.get] 
    external serviceWorker : navigator:('own) navigator_like ->  serviceWorkerContainer = "serviceWorker" [@@bs.get] 
    external vr : navigator:('own) navigator_like ->  vR = "vr" [@@bs.get] 
    external permissions : navigator:('own) navigator_like ->  permissions = "permissions" [@@bs.get] 
    external getGamepads :  gamepadList = "getGamepads" [@@bs.send.pipe: ('own) navigator_like] 
    external javaEnabled :  bool = "javaEnabled" [@@bs.send.pipe: ('own) navigator_like] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) navigator_like] 
    
    
end
 module NavigatorID = struct
    
    
    external appCodeName : navigatorID:('own) navigatorID_like ->  string = "appCodeName" [@@bs.get] 
    external appName : navigatorID:('own) navigatorID_like ->  string = "appName" [@@bs.get] 
    external appVersion : navigatorID:('own) navigatorID_like ->  string = "appVersion" [@@bs.get] 
    external platform : navigatorID:('own) navigatorID_like ->  string = "platform" [@@bs.get] 
    external product : navigatorID:('own) navigatorID_like ->  string = "product" [@@bs.get] 
    external userAgent : navigatorID:('own) navigatorID_like ->  string = "userAgent" [@@bs.get] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) navigatorID_like] 
    
    
end
 module NavigatorLanguage = struct
    
    
    external language : navigatorLanguage:('own) navigatorLanguage_like ->  string = "language" [@@bs.get] 
    
    
end
 module NavigatorPlugins = struct
    
    
    external plugins : navigatorPlugins:('own) navigatorPlugins_like ->  pluginArray = "plugins" [@@bs.get] 
    external mimeTypes : navigatorPlugins:('own) navigatorPlugins_like ->  mimeTypeArray = "mimeTypes" [@@bs.get] 
    external javaEnabled :  bool = "javaEnabled" [@@bs.send.pipe: ('own) navigatorPlugins_like] 
    
    
end
 module NavigatorCookies = struct
    
    
    external cookieEnabled : navigatorCookies:('own) navigatorCookies_like ->  bool = "cookieEnabled" [@@bs.get] 
    
    
end
 module PromiseNativeHandler = struct
    
    
    
    
    
end
 module FileReaderSync = struct
    
    
    
    
    
end
 module ImageData = struct
    
    
    external width : imageData:('own) imageData_like ->  int = "width" [@@bs.get] 
    external height : imageData:('own) imageData_like ->  int = "height" [@@bs.get] 
    external data : imageData:('own) imageData_like ->  Js_typed_array.Uint8ClampedArray.t = "data" [@@bs.get] 
    
    
end
 module MimeType = struct
    
    
    external type_ : mimeType:('own) mimeType_like ->  string = "type" [@@bs.get] 
    external description : mimeType:('own) mimeType_like ->  string = "description" [@@bs.get] 
    external suffixes : mimeType:('own) mimeType_like ->  string = "suffixes" [@@bs.get] 
    external enabledPlugin : mimeType:('own) mimeType_like ->  plugin = "enabledPlugin" [@@bs.get] 
    
    
end
 module GlobalCrypto = struct
    
    
    external crypto : globalCrypto:('own) globalCrypto_like ->  crypto = "crypto" [@@bs.get] 
    
    
end
 module Crypto = struct
    
    
    external getRandomValues : array:'a237 ->  'a236 = "getRandomValues" [@@bs.send.pipe: ('own) crypto_like] 
    
    
end
 module CSSStyleDeclaration = struct
    
    
    external cssText : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "cssText" [@@bs.get] 
    external setCssText : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> cssText:string ->  unit = "cssText" [@@bs.set]
    external length : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  int = "length" [@@bs.get] 
    external cssFloat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "cssFloat" [@@bs.get] 
    external setCssFloat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> cssFloat:string ->  unit = "cssFloat" [@@bs.set]
    external all : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "all" [@@bs.get] 
    external setAll : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> all:string ->  unit = "all" [@@bs.set]
    external background : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "background" [@@bs.get] 
    external setBackground : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> background:string ->  unit = "background" [@@bs.set]
    external backgroundColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundColor" [@@bs.get] 
    external setBackgroundColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundColor:string ->  unit = "backgroundColor" [@@bs.set]
    external backgroundPosition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundPosition" [@@bs.get] 
    external setBackgroundPosition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundPosition:string ->  unit = "backgroundPosition" [@@bs.set]
    external backgroundPositionX : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundPositionX" [@@bs.get] 
    external setBackgroundPositionX : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundPositionX:string ->  unit = "backgroundPositionX" [@@bs.set]
    external backgroundPositionY : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundPositionY" [@@bs.get] 
    external setBackgroundPositionY : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundPositionY:string ->  unit = "backgroundPositionY" [@@bs.set]
    external backgroundRepeat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundRepeat" [@@bs.get] 
    external setBackgroundRepeat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundRepeat:string ->  unit = "backgroundRepeat" [@@bs.set]
    external backgroundImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundImage" [@@bs.get] 
    external setBackgroundImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundImage:string ->  unit = "backgroundImage" [@@bs.set]
    external backgroundAttachment : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundAttachment" [@@bs.get] 
    external setBackgroundAttachment : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundAttachment:string ->  unit = "backgroundAttachment" [@@bs.set]
    external backgroundSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundSize" [@@bs.get] 
    external setBackgroundSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundSize:string ->  unit = "backgroundSize" [@@bs.set]
    external backgroundOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundOrigin" [@@bs.get] 
    external setBackgroundOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundOrigin:string ->  unit = "backgroundOrigin" [@@bs.set]
    external backgroundClip : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backgroundClip" [@@bs.get] 
    external setBackgroundClip : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backgroundClip:string ->  unit = "backgroundClip" [@@bs.set]
    external border : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "border" [@@bs.get] 
    external setBorder : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> border:string ->  unit = "border" [@@bs.set]
    external borderColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderColor" [@@bs.get] 
    external setBorderColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderColor:string ->  unit = "borderColor" [@@bs.set]
    external borderRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderRadius" [@@bs.get] 
    external setBorderRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderRadius:string ->  unit = "borderRadius" [@@bs.set]
    external borderSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderSpacing" [@@bs.get] 
    external setBorderSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderSpacing:string ->  unit = "borderSpacing" [@@bs.set]
    external borderStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderStyle" [@@bs.get] 
    external setBorderStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderStyle:string ->  unit = "borderStyle" [@@bs.set]
    external borderWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderWidth" [@@bs.get] 
    external setBorderWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderWidth:string ->  unit = "borderWidth" [@@bs.set]
    external borderBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottom" [@@bs.get] 
    external setBorderBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottom:string ->  unit = "borderBottom" [@@bs.set]
    external borderBottomColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottomColor" [@@bs.get] 
    external setBorderBottomColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottomColor:string ->  unit = "borderBottomColor" [@@bs.set]
    external borderBottomLeftRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottomLeftRadius" [@@bs.get] 
    external setBorderBottomLeftRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottomLeftRadius:string ->  unit = "borderBottomLeftRadius" [@@bs.set]
    external borderBottomRightRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottomRightRadius" [@@bs.get] 
    external setBorderBottomRightRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottomRightRadius:string ->  unit = "borderBottomRightRadius" [@@bs.set]
    external borderBottomStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottomStyle" [@@bs.get] 
    external setBorderBottomStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottomStyle:string ->  unit = "borderBottomStyle" [@@bs.set]
    external borderBottomWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBottomWidth" [@@bs.get] 
    external setBorderBottomWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBottomWidth:string ->  unit = "borderBottomWidth" [@@bs.set]
    external borderLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderLeft" [@@bs.get] 
    external setBorderLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderLeft:string ->  unit = "borderLeft" [@@bs.set]
    external borderLeftColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderLeftColor" [@@bs.get] 
    external setBorderLeftColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderLeftColor:string ->  unit = "borderLeftColor" [@@bs.set]
    external borderLeftStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderLeftStyle" [@@bs.get] 
    external setBorderLeftStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderLeftStyle:string ->  unit = "borderLeftStyle" [@@bs.set]
    external borderLeftWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderLeftWidth" [@@bs.get] 
    external setBorderLeftWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderLeftWidth:string ->  unit = "borderLeftWidth" [@@bs.set]
    external borderRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderRight" [@@bs.get] 
    external setBorderRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderRight:string ->  unit = "borderRight" [@@bs.set]
    external borderRightColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderRightColor" [@@bs.get] 
    external setBorderRightColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderRightColor:string ->  unit = "borderRightColor" [@@bs.set]
    external borderRightStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderRightStyle" [@@bs.get] 
    external setBorderRightStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderRightStyle:string ->  unit = "borderRightStyle" [@@bs.set]
    external borderRightWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderRightWidth" [@@bs.get] 
    external setBorderRightWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderRightWidth:string ->  unit = "borderRightWidth" [@@bs.set]
    external borderTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTop" [@@bs.get] 
    external setBorderTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTop:string ->  unit = "borderTop" [@@bs.set]
    external borderTopColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTopColor" [@@bs.get] 
    external setBorderTopColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTopColor:string ->  unit = "borderTopColor" [@@bs.set]
    external borderTopLeftRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTopLeftRadius" [@@bs.get] 
    external setBorderTopLeftRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTopLeftRadius:string ->  unit = "borderTopLeftRadius" [@@bs.set]
    external borderTopRightRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTopRightRadius" [@@bs.get] 
    external setBorderTopRightRadius : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTopRightRadius:string ->  unit = "borderTopRightRadius" [@@bs.set]
    external borderTopStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTopStyle" [@@bs.get] 
    external setBorderTopStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTopStyle:string ->  unit = "borderTopStyle" [@@bs.set]
    external borderTopWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderTopWidth" [@@bs.get] 
    external setBorderTopWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderTopWidth:string ->  unit = "borderTopWidth" [@@bs.set]
    external borderImageSource : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImageSource" [@@bs.get] 
    external setBorderImageSource : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImageSource:string ->  unit = "borderImageSource" [@@bs.set]
    external borderImageSlice : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImageSlice" [@@bs.get] 
    external setBorderImageSlice : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImageSlice:string ->  unit = "borderImageSlice" [@@bs.set]
    external borderImageRepeat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImageRepeat" [@@bs.get] 
    external setBorderImageRepeat : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImageRepeat:string ->  unit = "borderImageRepeat" [@@bs.set]
    external borderImageOutset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImageOutset" [@@bs.get] 
    external setBorderImageOutset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImageOutset:string ->  unit = "borderImageOutset" [@@bs.set]
    external borderImageWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImageWidth" [@@bs.get] 
    external setBorderImageWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImageWidth:string ->  unit = "borderImageWidth" [@@bs.set]
    external borderImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderImage" [@@bs.get] 
    external setBorderImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderImage:string ->  unit = "borderImage" [@@bs.set]
    external borderBlockStartColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockStartColor" [@@bs.get] 
    external setBorderBlockStartColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockStartColor:string ->  unit = "borderBlockStartColor" [@@bs.set]
    external borderBlockStartWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockStartWidth" [@@bs.get] 
    external setBorderBlockStartWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockStartWidth:string ->  unit = "borderBlockStartWidth" [@@bs.set]
    external borderBlockStartStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockStartStyle" [@@bs.get] 
    external setBorderBlockStartStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockStartStyle:string ->  unit = "borderBlockStartStyle" [@@bs.set]
    external borderBlockEndColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockEndColor" [@@bs.get] 
    external setBorderBlockEndColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockEndColor:string ->  unit = "borderBlockEndColor" [@@bs.set]
    external borderBlockEndWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockEndWidth" [@@bs.get] 
    external setBorderBlockEndWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockEndWidth:string ->  unit = "borderBlockEndWidth" [@@bs.set]
    external borderBlockEndStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockEndStyle" [@@bs.get] 
    external setBorderBlockEndStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockEndStyle:string ->  unit = "borderBlockEndStyle" [@@bs.set]
    external borderInlineStartColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineStartColor" [@@bs.get] 
    external setBorderInlineStartColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineStartColor:string ->  unit = "borderInlineStartColor" [@@bs.set]
    external borderInlineStartWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineStartWidth" [@@bs.get] 
    external setBorderInlineStartWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineStartWidth:string ->  unit = "borderInlineStartWidth" [@@bs.set]
    external borderInlineStartStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineStartStyle" [@@bs.get] 
    external setBorderInlineStartStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineStartStyle:string ->  unit = "borderInlineStartStyle" [@@bs.set]
    external borderInlineEndColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineEndColor" [@@bs.get] 
    external setBorderInlineEndColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineEndColor:string ->  unit = "borderInlineEndColor" [@@bs.set]
    external borderInlineEndWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineEndWidth" [@@bs.get] 
    external setBorderInlineEndWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineEndWidth:string ->  unit = "borderInlineEndWidth" [@@bs.set]
    external borderInlineEndStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineEndStyle" [@@bs.get] 
    external setBorderInlineEndStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineEndStyle:string ->  unit = "borderInlineEndStyle" [@@bs.set]
    external borderBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockStart" [@@bs.get] 
    external setBorderBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockStart:string ->  unit = "borderBlockStart" [@@bs.set]
    external borderBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderBlockEnd" [@@bs.get] 
    external setBorderBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderBlockEnd:string ->  unit = "borderBlockEnd" [@@bs.set]
    external borderInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineStart" [@@bs.get] 
    external setBorderInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineStart:string ->  unit = "borderInlineStart" [@@bs.set]
    external borderInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderInlineEnd" [@@bs.get] 
    external setBorderInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderInlineEnd:string ->  unit = "borderInlineEnd" [@@bs.set]
    external content : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "content" [@@bs.get] 
    external setContent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> content:string ->  unit = "content" [@@bs.set]
    external color : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "color" [@@bs.get] 
    external setColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> color:string ->  unit = "color" [@@bs.set]
    external display : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "display" [@@bs.get] 
    external setDisplay : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> display:string ->  unit = "display" [@@bs.set]
    external opacity : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "opacity" [@@bs.get] 
    external setOpacity : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> opacity:string ->  unit = "opacity" [@@bs.set]
    external visibility : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "visibility" [@@bs.get] 
    external setVisibility : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> visibility:string ->  unit = "visibility" [@@bs.set]
    external cursor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "cursor" [@@bs.get] 
    external setCursor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> cursor:string ->  unit = "cursor" [@@bs.set]
    external boxSizing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "boxSizing" [@@bs.get] 
    external setBoxSizing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> boxSizing:string ->  unit = "boxSizing" [@@bs.set]
    external boxShadow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "boxShadow" [@@bs.get] 
    external setBoxShadow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> boxShadow:string ->  unit = "boxShadow" [@@bs.set]
    external textShadow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textShadow" [@@bs.get] 
    external setTextShadow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textShadow:string ->  unit = "textShadow" [@@bs.set]
    external _float : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "_float" [@@bs.get] 
    external set_float : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> _float:string ->  unit = "_float" [@@bs.set]
    external clear : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "clear" [@@bs.get] 
    external setClear : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> clear:string ->  unit = "clear" [@@bs.set]
    external clip : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "clip" [@@bs.get] 
    external setClip : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> clip:string ->  unit = "clip" [@@bs.set]
    external transform : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transform" [@@bs.get] 
    external setTransform : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transform:string ->  unit = "transform" [@@bs.set]
    external transformOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transformOrigin" [@@bs.get] 
    external setTransformOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transformOrigin:string ->  unit = "transformOrigin" [@@bs.set]
    external perspective : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "perspective" [@@bs.get] 
    external setPerspective : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> perspective:string ->  unit = "perspective" [@@bs.set]
    external perspectiveOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "perspectiveOrigin" [@@bs.get] 
    external setPerspectiveOrigin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> perspectiveOrigin:string ->  unit = "perspectiveOrigin" [@@bs.set]
    external transformStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transformStyle" [@@bs.get] 
    external setTransformStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transformStyle:string ->  unit = "transformStyle" [@@bs.set]
    external backfaceVisibility : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "backfaceVisibility" [@@bs.get] 
    external setBackfaceVisibility : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> backfaceVisibility:string ->  unit = "backfaceVisibility" [@@bs.set]
    external direction : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "direction" [@@bs.get] 
    external setDirection : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> direction:string ->  unit = "direction" [@@bs.set]
    external unicodeBidi : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "unicodeBidi" [@@bs.get] 
    external setUnicodeBidi : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> unicodeBidi:string ->  unit = "unicodeBidi" [@@bs.set]
    external filter : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "filter" [@@bs.get] 
    external setFilter : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> filter:string ->  unit = "filter" [@@bs.set]
    external lineHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "lineHeight" [@@bs.get] 
    external setLineHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> lineHeight:string ->  unit = "lineHeight" [@@bs.set]
    external mixBlendMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "mixBlendMode" [@@bs.get] 
    external setMixBlendMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> mixBlendMode:string ->  unit = "mixBlendMode" [@@bs.set]
    external verticalAlign : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "verticalAlign" [@@bs.get] 
    external setVerticalAlign : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> verticalAlign:string ->  unit = "verticalAlign" [@@bs.set]
    external listStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "listStyle" [@@bs.get] 
    external setListStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> listStyle:string ->  unit = "listStyle" [@@bs.set]
    external listStylePosition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "listStylePosition" [@@bs.get] 
    external setListStylePosition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> listStylePosition:string ->  unit = "listStylePosition" [@@bs.set]
    external listStyleType : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "listStyleType" [@@bs.get] 
    external setListStyleType : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> listStyleType:string ->  unit = "listStyleType" [@@bs.set]
    external listStyleImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "listStyleImage" [@@bs.get] 
    external setListStyleImage : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> listStyleImage:string ->  unit = "listStyleImage" [@@bs.set]
    external quotes : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "quotes" [@@bs.get] 
    external setQuotes : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> quotes:string ->  unit = "quotes" [@@bs.set]
    external counterIncrement : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "counterIncrement" [@@bs.get] 
    external setCounterIncrement : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> counterIncrement:string ->  unit = "counterIncrement" [@@bs.set]
    external counterReset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "counterReset" [@@bs.get] 
    external setCounterReset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> counterReset:string ->  unit = "counterReset" [@@bs.set]
    external overflow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "overflow" [@@bs.get] 
    external setOverflow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> overflow:string ->  unit = "overflow" [@@bs.set]
    external overflowX : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "overflowX" [@@bs.get] 
    external setOverflowX : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> overflowX:string ->  unit = "overflowX" [@@bs.set]
    external overflowY : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "overflowY" [@@bs.get] 
    external setOverflowY : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> overflowY:string ->  unit = "overflowY" [@@bs.set]
    external overflowWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "overflowWrap" [@@bs.get] 
    external setOverflowWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> overflowWrap:string ->  unit = "overflowWrap" [@@bs.set]
    external tableLayout : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "tableLayout" [@@bs.get] 
    external setTableLayout : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> tableLayout:string ->  unit = "tableLayout" [@@bs.set]
    external borderCollapse : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "borderCollapse" [@@bs.get] 
    external setBorderCollapse : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> borderCollapse:string ->  unit = "borderCollapse" [@@bs.set]
    external emptyCells : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "emptyCells" [@@bs.get] 
    external setEmptyCells : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> emptyCells:string ->  unit = "emptyCells" [@@bs.set]
    external captionSide : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "captionSide" [@@bs.get] 
    external setCaptionSide : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> captionSide:string ->  unit = "captionSide" [@@bs.set]
    external whiteSpace : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "whiteSpace" [@@bs.get] 
    external setWhiteSpace : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> whiteSpace:string ->  unit = "whiteSpace" [@@bs.set]
    external writingMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "writingMode" [@@bs.get] 
    external setWritingMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> writingMode:string ->  unit = "writingMode" [@@bs.set]
    external letterSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "letterSpacing" [@@bs.get] 
    external setLetterSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> letterSpacing:string ->  unit = "letterSpacing" [@@bs.set]
    external wordBreak : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "wordBreak" [@@bs.get] 
    external setWordBreak : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> wordBreak:string ->  unit = "wordBreak" [@@bs.set]
    external wordSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "wordSpacing" [@@bs.get] 
    external setWordSpacing : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> wordSpacing:string ->  unit = "wordSpacing" [@@bs.set]
    external wordWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "wordWrap" [@@bs.get] 
    external setWordWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> wordWrap:string ->  unit = "wordWrap" [@@bs.set]
    external textOverflow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textOverflow" [@@bs.get] 
    external setTextOverflow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textOverflow:string ->  unit = "textOverflow" [@@bs.set]
    external textAlign : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textAlign" [@@bs.get] 
    external setTextAlign : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textAlign:string ->  unit = "textAlign" [@@bs.set]
    external textDecoration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textDecoration" [@@bs.get] 
    external setTextDecoration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textDecoration:string ->  unit = "textDecoration" [@@bs.set]
    external textDecorationLine : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textDecorationLine" [@@bs.get] 
    external setTextDecorationLine : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textDecorationLine:string ->  unit = "textDecorationLine" [@@bs.set]
    external textIndent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textIndent" [@@bs.get] 
    external setTextIndent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textIndent:string ->  unit = "textIndent" [@@bs.set]
    external textJustify : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textJustify" [@@bs.get] 
    external setTextJustify : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textJustify:string ->  unit = "textJustify" [@@bs.set]
    external textRendering : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textRendering" [@@bs.get] 
    external setTextRendering : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textRendering:string ->  unit = "textRendering" [@@bs.set]
    external textTransform : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "textTransform" [@@bs.get] 
    external setTextTransform : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> textTransform:string ->  unit = "textTransform" [@@bs.set]
    external font : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "font" [@@bs.get] 
    external setFont : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> font:string ->  unit = "font" [@@bs.set]
    external fontFamily : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontFamily" [@@bs.get] 
    external setFontFamily : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontFamily:string ->  unit = "fontFamily" [@@bs.set]
    external fontSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontSize" [@@bs.get] 
    external setFontSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontSize:string ->  unit = "fontSize" [@@bs.set]
    external fontStretch : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontStretch" [@@bs.get] 
    external setFontStretch : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontStretch:string ->  unit = "fontStretch" [@@bs.set]
    external fontStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontStyle" [@@bs.get] 
    external setFontStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontStyle:string ->  unit = "fontStyle" [@@bs.set]
    external fontVariant : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontVariant" [@@bs.get] 
    external setFontVariant : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontVariant:string ->  unit = "fontVariant" [@@bs.set]
    external fontVariantCaps : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontVariantCaps" [@@bs.get] 
    external setFontVariantCaps : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontVariantCaps:string ->  unit = "fontVariantCaps" [@@bs.set]
    external fontWeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "fontWeight" [@@bs.get] 
    external setFontWeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> fontWeight:string ->  unit = "fontWeight" [@@bs.set]
    external margin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "margin" [@@bs.get] 
    external setMargin : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> margin:string ->  unit = "margin" [@@bs.set]
    external marginBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginBottom" [@@bs.get] 
    external setMarginBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginBottom:string ->  unit = "marginBottom" [@@bs.set]
    external marginLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginLeft" [@@bs.get] 
    external setMarginLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginLeft:string ->  unit = "marginLeft" [@@bs.set]
    external marginRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginRight" [@@bs.get] 
    external setMarginRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginRight:string ->  unit = "marginRight" [@@bs.set]
    external marginTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginTop" [@@bs.get] 
    external setMarginTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginTop:string ->  unit = "marginTop" [@@bs.set]
    external marginBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginBlockStart" [@@bs.get] 
    external setMarginBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginBlockStart:string ->  unit = "marginBlockStart" [@@bs.set]
    external marginBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginBlockEnd" [@@bs.get] 
    external setMarginBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginBlockEnd:string ->  unit = "marginBlockEnd" [@@bs.set]
    external marginInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginInlineStart" [@@bs.get] 
    external setMarginInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginInlineStart:string ->  unit = "marginInlineStart" [@@bs.set]
    external marginInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "marginInlineEnd" [@@bs.get] 
    external setMarginInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> marginInlineEnd:string ->  unit = "marginInlineEnd" [@@bs.set]
    external padding : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "padding" [@@bs.get] 
    external setPadding : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> padding:string ->  unit = "padding" [@@bs.set]
    external paddingBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingBottom" [@@bs.get] 
    external setPaddingBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingBottom:string ->  unit = "paddingBottom" [@@bs.set]
    external paddingLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingLeft" [@@bs.get] 
    external setPaddingLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingLeft:string ->  unit = "paddingLeft" [@@bs.set]
    external paddingRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingRight" [@@bs.get] 
    external setPaddingRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingRight:string ->  unit = "paddingRight" [@@bs.set]
    external paddingTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingTop" [@@bs.get] 
    external setPaddingTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingTop:string ->  unit = "paddingTop" [@@bs.set]
    external paddingBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingBlockStart" [@@bs.get] 
    external setPaddingBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingBlockStart:string ->  unit = "paddingBlockStart" [@@bs.set]
    external paddingBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingBlockEnd" [@@bs.get] 
    external setPaddingBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingBlockEnd:string ->  unit = "paddingBlockEnd" [@@bs.set]
    external paddingInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingInlineStart" [@@bs.get] 
    external setPaddingInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingInlineStart:string ->  unit = "paddingInlineStart" [@@bs.set]
    external paddingInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "paddingInlineEnd" [@@bs.get] 
    external setPaddingInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> paddingInlineEnd:string ->  unit = "paddingInlineEnd" [@@bs.set]
    external outline : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "outline" [@@bs.get] 
    external setOutline : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> outline:string ->  unit = "outline" [@@bs.set]
    external outlineColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "outlineColor" [@@bs.get] 
    external setOutlineColor : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> outlineColor:string ->  unit = "outlineColor" [@@bs.set]
    external outlineStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "outlineStyle" [@@bs.get] 
    external setOutlineStyle : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> outlineStyle:string ->  unit = "outlineStyle" [@@bs.set]
    external outlineWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "outlineWidth" [@@bs.get] 
    external setOutlineWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> outlineWidth:string ->  unit = "outlineWidth" [@@bs.set]
    external outlineOffset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "outlineOffset" [@@bs.get] 
    external setOutlineOffset : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> outlineOffset:string ->  unit = "outlineOffset" [@@bs.set]
    external position : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "position" [@@bs.get] 
    external setPosition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> position:string ->  unit = "position" [@@bs.set]
    external pointerEvents : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "pointerEvents" [@@bs.get] 
    external setPointerEvents : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> pointerEvents:string ->  unit = "pointerEvents" [@@bs.set]
    external top : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "top" [@@bs.get] 
    external setTop : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> top:string ->  unit = "top" [@@bs.set]
    external right : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "right" [@@bs.get] 
    external setRight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> right:string ->  unit = "right" [@@bs.set]
    external left : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "left" [@@bs.get] 
    external setLeft : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> left:string ->  unit = "left" [@@bs.set]
    external bottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "bottom" [@@bs.get] 
    external setBottom : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> bottom:string ->  unit = "bottom" [@@bs.set]
    external offsetBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "offsetBlockStart" [@@bs.get] 
    external setOffsetBlockStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> offsetBlockStart:string ->  unit = "offsetBlockStart" [@@bs.set]
    external offsetBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "offsetBlockEnd" [@@bs.get] 
    external setOffsetBlockEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> offsetBlockEnd:string ->  unit = "offsetBlockEnd" [@@bs.set]
    external offsetInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "offsetInlineStart" [@@bs.get] 
    external setOffsetInlineStart : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> offsetInlineStart:string ->  unit = "offsetInlineStart" [@@bs.set]
    external offsetInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "offsetInlineEnd" [@@bs.get] 
    external setOffsetInlineEnd : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> offsetInlineEnd:string ->  unit = "offsetInlineEnd" [@@bs.set]
    external height : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "height" [@@bs.get] 
    external setHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> height:string ->  unit = "height" [@@bs.set]
    external minHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "minHeight" [@@bs.get] 
    external setMinHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> minHeight:string ->  unit = "minHeight" [@@bs.set]
    external maxHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "maxHeight" [@@bs.get] 
    external setMaxHeight : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> maxHeight:string ->  unit = "maxHeight" [@@bs.set]
    external width : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "width" [@@bs.get] 
    external setWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> width:string ->  unit = "width" [@@bs.set]
    external minWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "minWidth" [@@bs.get] 
    external setMinWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> minWidth:string ->  unit = "minWidth" [@@bs.set]
    external maxWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "maxWidth" [@@bs.get] 
    external setMaxWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> maxWidth:string ->  unit = "maxWidth" [@@bs.set]
    external blockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "blockSize" [@@bs.get] 
    external setBlockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> blockSize:string ->  unit = "blockSize" [@@bs.set]
    external inlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "inlineSize" [@@bs.get] 
    external setInlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> inlineSize:string ->  unit = "inlineSize" [@@bs.set]
    external maxBlockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "maxBlockSize" [@@bs.get] 
    external setMaxBlockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> maxBlockSize:string ->  unit = "maxBlockSize" [@@bs.set]
    external maxInlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "maxInlineSize" [@@bs.get] 
    external setMaxInlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> maxInlineSize:string ->  unit = "maxInlineSize" [@@bs.set]
    external minBlockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "minBlockSize" [@@bs.get] 
    external setMinBlockSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> minBlockSize:string ->  unit = "minBlockSize" [@@bs.set]
    external minInlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "minInlineSize" [@@bs.get] 
    external setMinInlineSize : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> minInlineSize:string ->  unit = "minInlineSize" [@@bs.set]
    external zIndex : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "zIndex" [@@bs.get] 
    external setZIndex : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> zIndex:string ->  unit = "zIndex" [@@bs.set]
    external imageRendering : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "imageRendering" [@@bs.get] 
    external setImageRendering : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> imageRendering:string ->  unit = "imageRendering" [@@bs.set]
    external columnCount : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "columnCount" [@@bs.get] 
    external setColumnCount : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> columnCount:string ->  unit = "columnCount" [@@bs.set]
    external columnWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "columnWidth" [@@bs.get] 
    external setColumnWidth : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> columnWidth:string ->  unit = "columnWidth" [@@bs.set]
    external columns : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "columns" [@@bs.get] 
    external setColumns : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> columns:string ->  unit = "columns" [@@bs.set]
    external columnGap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "columnGap" [@@bs.get] 
    external setColumnGap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> columnGap:string ->  unit = "columnGap" [@@bs.set]
    external transition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transition" [@@bs.get] 
    external setTransition : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transition:string ->  unit = "transition" [@@bs.set]
    external transitionDuration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transitionDuration" [@@bs.get] 
    external setTransitionDuration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transitionDuration:string ->  unit = "transitionDuration" [@@bs.set]
    external transitionTimingFunction : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transitionTimingFunction" [@@bs.get] 
    external setTransitionTimingFunction : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transitionTimingFunction:string ->  unit = "transitionTimingFunction" [@@bs.set]
    external transitionProperty : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transitionProperty" [@@bs.get] 
    external setTransitionProperty : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transitionProperty:string ->  unit = "transitionProperty" [@@bs.set]
    external transitionDelay : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "transitionDelay" [@@bs.get] 
    external setTransitionDelay : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> transitionDelay:string ->  unit = "transitionDelay" [@@bs.set]
    external flex : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flex" [@@bs.get] 
    external setFlex : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flex:string ->  unit = "flex" [@@bs.set]
    external flexFlow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexFlow" [@@bs.get] 
    external setFlexFlow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexFlow:string ->  unit = "flexFlow" [@@bs.set]
    external flexDirection : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexDirection" [@@bs.get] 
    external setFlexDirection : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexDirection:string ->  unit = "flexDirection" [@@bs.set]
    external flexWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexWrap" [@@bs.get] 
    external setFlexWrap : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexWrap:string ->  unit = "flexWrap" [@@bs.set]
    external justifyContent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "justifyContent" [@@bs.get] 
    external setJustifyContent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> justifyContent:string ->  unit = "justifyContent" [@@bs.set]
    external alignItems : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "alignItems" [@@bs.get] 
    external setAlignItems : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> alignItems:string ->  unit = "alignItems" [@@bs.set]
    external alignContent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "alignContent" [@@bs.get] 
    external setAlignContent : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> alignContent:string ->  unit = "alignContent" [@@bs.set]
    external order : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "order" [@@bs.get] 
    external setOrder : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> order:string ->  unit = "order" [@@bs.set]
    external flexBasis : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexBasis" [@@bs.get] 
    external setFlexBasis : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexBasis:string ->  unit = "flexBasis" [@@bs.set]
    external flexGrow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexGrow" [@@bs.get] 
    external setFlexGrow : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexGrow:string ->  unit = "flexGrow" [@@bs.set]
    external flexShrink : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "flexShrink" [@@bs.get] 
    external setFlexShrink : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> flexShrink:string ->  unit = "flexShrink" [@@bs.set]
    external alignSelf : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "alignSelf" [@@bs.get] 
    external setAlignSelf : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> alignSelf:string ->  unit = "alignSelf" [@@bs.set]
    external animation : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animation" [@@bs.get] 
    external setAnimation : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animation:string ->  unit = "animation" [@@bs.set]
    external animationName : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationName" [@@bs.get] 
    external setAnimationName : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationName:string ->  unit = "animationName" [@@bs.set]
    external animationDuration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationDuration" [@@bs.get] 
    external setAnimationDuration : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationDuration:string ->  unit = "animationDuration" [@@bs.set]
    external animationTimingFunction : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationTimingFunction" [@@bs.get] 
    external setAnimationTimingFunction : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationTimingFunction:string ->  unit = "animationTimingFunction" [@@bs.set]
    external animationIterationCount : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationIterationCount" [@@bs.get] 
    external setAnimationIterationCount : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationIterationCount:string ->  unit = "animationIterationCount" [@@bs.set]
    external animationDirection : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationDirection" [@@bs.get] 
    external setAnimationDirection : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationDirection:string ->  unit = "animationDirection" [@@bs.set]
    external animationPlayState : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationPlayState" [@@bs.get] 
    external setAnimationPlayState : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationPlayState:string ->  unit = "animationPlayState" [@@bs.set]
    external animationFillMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationFillMode" [@@bs.get] 
    external setAnimationFillMode : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationFillMode:string ->  unit = "animationFillMode" [@@bs.set]
    external animationDelay : cSSStyleDeclaration:('own) cSSStyleDeclaration_like ->  string = "animationDelay" [@@bs.get] 
    external setAnimationDelay : cSSStyleDeclaration:('own) cSSStyleDeclaration_like -> animationDelay:string ->  unit = "animationDelay" [@@bs.set]
    external getPropertyPriority : property:string ->  string = "getPropertyPriority" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external getPropertyValue : property:string ->  string = "getPropertyValue" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external item : index:int ->  string = "item" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external removeProperty : property:string ->  string = "removeProperty" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external setProperty : property:string -> value:string -> ?priority:string Js.undefined ->  unit = "setProperty" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external setPropertyPriority : property:string -> priority:string ->  unit = "setPropertyPriority" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    external setPropertyValue : property:string -> value:string ->  unit = "setPropertyValue" [@@bs.send.pipe: ('own) cSSStyleDeclaration_like] 
    
    let setProperty ~property ~value ?priority cSSStyleDeclaration =
      let conv_priority = Js_undefined.from_opt in
      let priority = conv_priority priority in
      setProperty ~property ~value ~priority cSSStyleDeclaration
    
end
 module DOMQuad = struct
    
    
    external p1 : dOMQuad:('own) dOMQuad_like ->  dOMPoint = "p1" [@@bs.get] 
    external p2 : dOMQuad:('own) dOMQuad_like ->  dOMPoint = "p2" [@@bs.get] 
    external p3 : dOMQuad:('own) dOMQuad_like ->  dOMPoint = "p3" [@@bs.get] 
    external p4 : dOMQuad:('own) dOMQuad_like ->  dOMPoint = "p4" [@@bs.get] 
    external fromQuad : ?other:(_) dOMQuadInit_like Js.undefined ->  dOMQuad = "fromQuad" [@@bs.send.pipe: ('own) dOMQuad_like] 
    external fromRect : ?other:(_) dOMRectInit_like Js.undefined ->  dOMQuad = "fromRect" [@@bs.send.pipe: ('own) dOMQuad_like] 
    external getBounds :  dOMRect = "getBounds" [@@bs.send.pipe: ('own) dOMQuad_like] 
    
    let fromQuad ?other dOMQuad =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromQuad ~other dOMQuad
    
    let fromRect ?other dOMQuad =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromRect ~other dOMQuad
    
end
 module Request = struct
    
    
    external bodyUsed : request:('own) request_like ->  bool = "bodyUsed" [@@bs.get] 
    external method_ : request:('own) request_like ->  string = "method" [@@bs.get] 
    external url : request:('own) request_like ->  string = "url" [@@bs.get] 
    external headers : request:('own) request_like ->  headers = "headers" [@@bs.get] 
    external type_ : request:('own) request_like ->  string = "type" [@@bs.get] 
    external destination : request:('own) request_like ->  string = "destination" [@@bs.get] 
    external referrer : request:('own) request_like ->  string = "referrer" [@@bs.get] 
    external referrerPolicy : request:('own) request_like ->  string = "referrerPolicy" [@@bs.get] 
    external mode : request:('own) request_like ->  string = "mode" [@@bs.get] 
    external credentials : request:('own) request_like ->  string = "credentials" [@@bs.get] 
    external cache : request:('own) request_like ->  string = "cache" [@@bs.get] 
    external redirect : request:('own) request_like ->  string = "redirect" [@@bs.get] 
    external integrity : request:('own) request_like ->  string = "integrity" [@@bs.get] 
    external blob :  blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) request_like] 
    external clone :  request = "clone" [@@bs.send.pipe: ('own) request_like] 
    external formData :  formData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) request_like] 
    external json :  'a238 Js.Promise.t = "json" [@@bs.send.pipe: ('own) request_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) request_like] 
    
    
end
 module DOMTokenList = struct
    
    
    external length : dOMTokenList:('own) dOMTokenList_like ->  int = "length" [@@bs.get] 
    external value : dOMTokenList:('own) dOMTokenList_like ->  string = "value" [@@bs.get] 
    external setValue : dOMTokenList:('own) dOMTokenList_like -> value:string ->  unit = "value" [@@bs.set]
    external add : dOMTokenList:('own) dOMTokenList_like ->  (('own) dOMTokenList_like, unit, (string)) variadic_func = "add" [@@bs.get]
    external contains : token:string ->  bool = "contains" [@@bs.send.pipe: ('own) dOMTokenList_like] 
    external item : index:int ->  string option = "item" [@@bs.send.pipe: ('own) dOMTokenList_like] [@@bs.return null_to_opt]
    external remove : dOMTokenList:('own) dOMTokenList_like ->  (('own) dOMTokenList_like, unit, (string)) variadic_func = "remove" [@@bs.get]
    external replace : token:string -> newToken:string ->  unit = "replace" [@@bs.send.pipe: ('own) dOMTokenList_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) dOMTokenList_like] 
    external toggle : token:string -> ?force:Js.boolean Js.undefined ->  bool = "toggle" [@@bs.send.pipe: ('own) dOMTokenList_like] 
    
    let add ~tokens dOMTokenList =
      let func = add dOMTokenList in
      let args = to_arg tokens in
      apply func dOMTokenList args
    
    let remove ~tokens dOMTokenList =
      let func = remove dOMTokenList in
      let args = to_arg tokens in
      apply func dOMTokenList args
    
    let toggle ~token ?force dOMTokenList =
      let conv_force = Js_undefined.from_opt in
      let force = conv_force force in
      toggle ~token ~force dOMTokenList
    
end
 module Promise = struct
    
    
    
    
    
end
 module VRPose = struct
    
    
    external position : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "position" [@@bs.get] [@@bs.return null_to_opt]
    external linearVelocity : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "linearVelocity" [@@bs.get] [@@bs.return null_to_opt]
    external linearAcceleration : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "linearAcceleration" [@@bs.get] [@@bs.return null_to_opt]
    external orientation : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "orientation" [@@bs.get] [@@bs.return null_to_opt]
    external angularVelocity : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "angularVelocity" [@@bs.get] [@@bs.return null_to_opt]
    external angularAcceleration : vRPose:('own) vRPose_like ->  Js_typed_array.Float32Array.t option = "angularAcceleration" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module GamepadButtonList = struct
    
    
    external length : gamepadButtonList:('own) gamepadButtonList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  gamepadButton option = "item" [@@bs.send.pipe: ('own) gamepadButtonList_like] [@@bs.return null_to_opt]
    
    
end
 module DOMPointReadOnly = struct
    
    
    external x : dOMPointReadOnly:('own) dOMPointReadOnly_like ->  float = "x" [@@bs.get] 
    external y : dOMPointReadOnly:('own) dOMPointReadOnly_like ->  float = "y" [@@bs.get] 
    external z : dOMPointReadOnly:('own) dOMPointReadOnly_like ->  float = "z" [@@bs.get] 
    external w : dOMPointReadOnly:('own) dOMPointReadOnly_like ->  float = "w" [@@bs.get] 
    
    
end
 module Client = struct
    
    
    external url : client:('own) client_like ->  string = "url" [@@bs.get] 
    external frameType : client:('own) client_like ->  string = "frameType" [@@bs.get] 
    external id : client:('own) client_like ->  string = "id" [@@bs.get] 
    
    
end
 module OESTextureFloatLinear = struct
    
    
    
    
    
end
 module WebGLShaderPrecisionFormat = struct
    
    
    external rangeMin : webGLShaderPrecisionFormat:('own) webGLShaderPrecisionFormat_like ->  int = "rangeMin" [@@bs.get] 
    external rangeMax : webGLShaderPrecisionFormat:('own) webGLShaderPrecisionFormat_like ->  int = "rangeMax" [@@bs.get] 
    external precision : webGLShaderPrecisionFormat:('own) webGLShaderPrecisionFormat_like ->  int = "precision" [@@bs.get] 
    
    
end
 module Response = struct
    
    
    external bodyUsed : response:('own) response_like ->  bool = "bodyUsed" [@@bs.get] 
    external type_ : response:('own) response_like ->  string = "type" [@@bs.get] 
    external url : response:('own) response_like ->  string = "url" [@@bs.get] 
    external redirected : response:('own) response_like ->  bool = "redirected" [@@bs.get] 
    external status : response:('own) response_like ->  int = "status" [@@bs.get] 
    external ok : response:('own) response_like ->  bool = "ok" [@@bs.get] 
    external statusText : response:('own) response_like ->  string = "statusText" [@@bs.get] 
    external headers : response:('own) response_like ->  headers = "headers" [@@bs.get] 
    external blob :  blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) response_like] 
    external clone :  response = "clone" [@@bs.send.pipe: ('own) response_like] 
    external error :  response = "error" [@@bs.send.pipe: ('own) response_like] 
    external formData :  formData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) response_like] 
    external json :  'a239 Js.Promise.t = "json" [@@bs.send.pipe: ('own) response_like] 
    external redirect : url:string -> ?status:int Js.undefined ->  response = "redirect" [@@bs.send.pipe: ('own) response_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) response_like] 
    
    let redirect ~url ?status response =
      let conv_status = Js_undefined.from_opt in
      let status = conv_status status in
      redirect ~url ~status response
    
end
 module MediaError = struct
    
    
    external code : mediaError:('own) mediaError_like ->  int = "code" [@@bs.get] 
    
    let media_err_aborted  =
      
      1
    
    let media_err_network  =
      
      2
    
    let media_err_decode  =
      
      3
    
    let media_err_src_not_supported  =
      
      4
    
end
 module VRStageParameters = struct
    
    
    external sittingToStandingTransform : vRStageParameters:('own) vRStageParameters_like ->  Js_typed_array.Float32Array.t = "sittingToStandingTransform" [@@bs.get] 
    external sizeX : vRStageParameters:('own) vRStageParameters_like ->  float = "sizeX" [@@bs.get] 
    external sizeZ : vRStageParameters:('own) vRStageParameters_like ->  float = "sizeZ" [@@bs.get] 
    
    
end
 module AbstractWorker = struct
    
    
    external onerror : abstractWorker:('own) abstractWorker_like ->  (event -> 'a240 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : abstractWorker:('own) abstractWorker_like -> onerror:(event -> 'a241 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    
    
end
 module TestWorklet = struct
    
    
    external addModule : moduleURL:string -> ?options:(_) workletOptions_like Js.undefined ->  unit Js.Promise.t = "addModule" [@@bs.send.pipe: ('own) testWorklet_like] 
    external lookup : key:string ->  string option = "lookup" [@@bs.send.pipe: ('own) testWorklet_like] [@@bs.return null_to_opt]
    
    let addModule ~moduleURL ?options testWorklet =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      addModule ~moduleURL ~options testWorklet
    
end
 module CSSRule = struct
    
    
    external type_ : cSSRule:('own) cSSRule_like ->  int = "type" [@@bs.get] 
    external cssText : cSSRule:('own) cSSRule_like ->  string = "cssText" [@@bs.get] 
    external setCssText : cSSRule:('own) cSSRule_like -> cssText:string ->  unit = "cssText" [@@bs.set]
    external parentStyleSheet : cSSRule:('own) cSSRule_like ->  cSSStyleSheet option = "parentStyleSheet" [@@bs.get] [@@bs.return null_to_opt]
    
    let style_rule  =
      
      1
    
    let charset_rule  =
      
      2
    
    let import_rule  =
      
      3
    
    let media_rule  =
      
      4
    
    let font_face_rule  =
      
      5
    
    let page_rule  =
      
      6
    
    let margin_rule  =
      
      9
    
    let namespace_rule  =
      
      10
    
    let keyframes_rule  =
      
      7
    
    let keyframe_rule  =
      
      8
    
    let viewport_rule  =
      
      15
    
    let supports_rule  =
      
      12
    
end
 module BluetoothUUID = struct
    
    
    external canonicalUUID : alias:int ->  string = "canonicalUUID" [@@bs.send.pipe: ('own) bluetoothUUID_like] 
    external getCharacteristic : name:'a242 ->  string = "getCharacteristic" [@@bs.send.pipe: ('own) bluetoothUUID_like] 
    external getDescriptor : name:'a243 ->  string = "getDescriptor" [@@bs.send.pipe: ('own) bluetoothUUID_like] 
    external getService : name:'a244 ->  string = "getService" [@@bs.send.pipe: ('own) bluetoothUUID_like] 
    
    let getCharacteristic ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getCharacteristic ~name bluetoothUUID in
      return
    
    let getDescriptor ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getDescriptor ~name bluetoothUUID in
      return
    
    let getService ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getService ~name bluetoothUUID in
      return
    
end
 module CanvasRenderingContext2D = struct
    
    
    external lineWidth : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "lineWidth" [@@bs.get] 
    external setLineWidth : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> lineWidth:float ->  unit = "lineWidth" [@@bs.set]
    external lineCap : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  string = "lineCap" [@@bs.get] 
    external setLineCap : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> lineCap:string ->  unit = "lineCap" [@@bs.set]
    external lineJoin : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  string = "lineJoin" [@@bs.get] 
    external setLineJoin : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> lineJoin:string ->  unit = "lineJoin" [@@bs.set]
    external miterLimit : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "miterLimit" [@@bs.get] 
    external setMiterLimit : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> miterLimit:float ->  unit = "miterLimit" [@@bs.set]
    external shadowOffsetX : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "shadowOffsetX" [@@bs.get] 
    external setShadowOffsetX : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> shadowOffsetX:float ->  unit = "shadowOffsetX" [@@bs.set]
    external shadowOffsetY : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "shadowOffsetY" [@@bs.get] 
    external setShadowOffsetY : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> shadowOffsetY:float ->  unit = "shadowOffsetY" [@@bs.set]
    external shadowBlur : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "shadowBlur" [@@bs.get] 
    external setShadowBlur : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> shadowBlur:float ->  unit = "shadowBlur" [@@bs.set]
    external shadowColor : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  string = "shadowColor" [@@bs.get] 
    external setShadowColor : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> shadowColor:string ->  unit = "shadowColor" [@@bs.set]
    external strokeStyle : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  'a245 = "strokeStyle" [@@bs.get] 
    external setStrokeStyle : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> strokeStyle:'a246 ->  unit = "strokeStyle" [@@bs.set]
    external fillStyle : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  'a247 = "fillStyle" [@@bs.get] 
    external setFillStyle : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> fillStyle:'a248 ->  unit = "fillStyle" [@@bs.set]
    external imageSmoothingEnabled : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  bool = "imageSmoothingEnabled" [@@bs.get] 
    external setImageSmoothingEnabled : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> imageSmoothingEnabled:Js.boolean ->  unit = "imageSmoothingEnabled" [@@bs.set]
    external globalAlpha : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  float = "globalAlpha" [@@bs.get] 
    external setGlobalAlpha : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> globalAlpha:float ->  unit = "globalAlpha" [@@bs.set]
    external globalCompositeOperation : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  string = "globalCompositeOperation" [@@bs.get] 
    external setGlobalCompositeOperation : canvasRenderingContext2D:('own) canvasRenderingContext2D_like -> globalCompositeOperation:string ->  unit = "globalCompositeOperation" [@@bs.set]
    external canvas : canvasRenderingContext2D:('own) canvasRenderingContext2D_like ->  hTMLCanvasElement = "canvas" [@@bs.get] 
    external arc : x:float -> y:float -> radius:float -> startAngle:float -> endAngle:float -> ?anticlockwise:Js.boolean Js.undefined ->  unit = "arc" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external arcTo : x1:float -> y1:float -> x2:float -> y2:float -> radius:float ->  unit = "arcTo" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external beginPath :  unit = "beginPath" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external bezierCurveTo : cp1x:float -> cp1y:float -> cp2x:float -> cp2y:float -> x:float -> y:float ->  unit = "bezierCurveTo" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external clearRect : x:float -> y:float -> w:float -> h:float ->  unit = "clearRect" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external clip : ?fillRule:string Js.undefined ->  unit = "clip" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external closePath :  unit = "closePath" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external createImageData : sw:float -> sh:float ->  imageData = "createImageData" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external createLinearGradient : x0:float -> y0:float -> x1:float -> y1:float ->  canvasGradient = "createLinearGradient" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external createPattern : image:'a249 -> repetition:string ->  canvasPattern = "createPattern" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external createRadialGradient : x0:float -> y0:float -> r0:float -> x1:float -> y1:float -> r1:float ->  canvasGradient = "createRadialGradient" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external drawImage : image:'a250 -> dx:float -> dy:float ->  unit = "drawImage" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external fill : ?fillRule:string Js.undefined ->  unit = "fill" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external fillRect : x:float -> y:float -> w:float -> h:float ->  unit = "fillRect" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external getImageData : sx:float -> sy:float -> sw:float -> sh:float ->  imageData = "getImageData" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external isPointInPath : x:float -> y:float -> ?fillRule:string Js.undefined ->  bool = "isPointInPath" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external lineTo : x:float -> y:float ->  unit = "lineTo" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external moveTo : x:float -> y:float ->  unit = "moveTo" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external putImageData : imagedata:(_) imageData_like -> dx:float -> dy:float ->  unit = "putImageData" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external quadraticCurveTo : cpx:float -> cpy:float -> x:float -> y:float ->  unit = "quadraticCurveTo" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external rect : x:float -> y:float -> w:float -> h:float ->  unit = "rect" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external resetTransform :  unit = "resetTransform" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external restore :  unit = "restore" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external rotate : angle:float ->  unit = "rotate" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external save :  unit = "save" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external scale : x:float -> y:float ->  unit = "scale" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external setTransform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "setTransform" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external stroke :  unit = "stroke" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external strokeRect : x:float -> y:float -> w:float -> h:float ->  unit = "strokeRect" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external transform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "transform" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    external translate : x:float -> y:float ->  unit = "translate" [@@bs.send.pipe: ('own) canvasRenderingContext2D_like] 
    
    let arc ~x ~y ~radius ~startAngle ~endAngle ?anticlockwise canvasRenderingContext2D =
      let conv_anticlockwise = Js_undefined.from_opt in
      let anticlockwise = conv_anticlockwise anticlockwise in
      arc ~x ~y ~radius ~startAngle ~endAngle ~anticlockwise canvasRenderingContext2D
    
    let clip ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = clip ~fillRule canvasRenderingContext2D in
      return
    
    let clip ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      clip ~fillRule canvasRenderingContext2D
    
    let createPattern ~image ~repetition canvasRenderingContext2D =
      let conv_image = function
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) canvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = createPattern ~image ~repetition canvasRenderingContext2D in
      return
    
    let drawImage ~image ~dx ~dy canvasRenderingContext2D =
      let conv_image = function
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) canvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = drawImage ~image ~dx ~dy canvasRenderingContext2D in
      return
    
    let fill ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = fill ~fillRule canvasRenderingContext2D in
      return
    
    let fill ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      fill ~fillRule canvasRenderingContext2D
    
    let isPointInPath ~x ~y ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = isPointInPath ~x ~y ~fillRule canvasRenderingContext2D in
      return
    
    let isPointInPath ~x ~y ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      isPointInPath ~x ~y ~fillRule canvasRenderingContext2D
    
end
 module CanvasState = struct
    
    
    external restore :  unit = "restore" [@@bs.send.pipe: ('own) canvasState_like] 
    external save :  unit = "save" [@@bs.send.pipe: ('own) canvasState_like] 
    
    
end
 module CanvasTransform = struct
    
    
    external resetTransform :  unit = "resetTransform" [@@bs.send.pipe: ('own) canvasTransform_like] 
    external rotate : angle:float ->  unit = "rotate" [@@bs.send.pipe: ('own) canvasTransform_like] 
    external scale : x:float -> y:float ->  unit = "scale" [@@bs.send.pipe: ('own) canvasTransform_like] 
    external setTransform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "setTransform" [@@bs.send.pipe: ('own) canvasTransform_like] 
    external transform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "transform" [@@bs.send.pipe: ('own) canvasTransform_like] 
    external translate : x:float -> y:float ->  unit = "translate" [@@bs.send.pipe: ('own) canvasTransform_like] 
    
    
end
 module CanvasCompositing = struct
    
    
    external globalAlpha : canvasCompositing:('own) canvasCompositing_like ->  float = "globalAlpha" [@@bs.get] 
    external setGlobalAlpha : canvasCompositing:('own) canvasCompositing_like -> globalAlpha:float ->  unit = "globalAlpha" [@@bs.set]
    external globalCompositeOperation : canvasCompositing:('own) canvasCompositing_like ->  string = "globalCompositeOperation" [@@bs.get] 
    external setGlobalCompositeOperation : canvasCompositing:('own) canvasCompositing_like -> globalCompositeOperation:string ->  unit = "globalCompositeOperation" [@@bs.set]
    
    
end
 module CanvasImageSmoothing = struct
    
    
    external imageSmoothingEnabled : canvasImageSmoothing:('own) canvasImageSmoothing_like ->  bool = "imageSmoothingEnabled" [@@bs.get] 
    external setImageSmoothingEnabled : canvasImageSmoothing:('own) canvasImageSmoothing_like -> imageSmoothingEnabled:Js.boolean ->  unit = "imageSmoothingEnabled" [@@bs.set]
    
    
end
 module CanvasFillStrokeStyles = struct
    
    
    external strokeStyle : canvasFillStrokeStyles:('own) canvasFillStrokeStyles_like ->  'a251 = "strokeStyle" [@@bs.get] 
    external setStrokeStyle : canvasFillStrokeStyles:('own) canvasFillStrokeStyles_like -> strokeStyle:'a252 ->  unit = "strokeStyle" [@@bs.set]
    external fillStyle : canvasFillStrokeStyles:('own) canvasFillStrokeStyles_like ->  'a253 = "fillStyle" [@@bs.get] 
    external setFillStyle : canvasFillStrokeStyles:('own) canvasFillStrokeStyles_like -> fillStyle:'a254 ->  unit = "fillStyle" [@@bs.set]
    external createLinearGradient : x0:float -> y0:float -> x1:float -> y1:float ->  canvasGradient = "createLinearGradient" [@@bs.send.pipe: ('own) canvasFillStrokeStyles_like] 
    external createPattern : image:'a255 -> repetition:string ->  canvasPattern = "createPattern" [@@bs.send.pipe: ('own) canvasFillStrokeStyles_like] 
    external createRadialGradient : x0:float -> y0:float -> r0:float -> x1:float -> y1:float -> r1:float ->  canvasGradient = "createRadialGradient" [@@bs.send.pipe: ('own) canvasFillStrokeStyles_like] 
    
    let createPattern ~image ~repetition canvasFillStrokeStyles =
      let conv_image = function
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) canvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = createPattern ~image ~repetition canvasFillStrokeStyles in
      return
    
end
 module CanvasShadowStyles = struct
    
    
    external shadowOffsetX : canvasShadowStyles:('own) canvasShadowStyles_like ->  float = "shadowOffsetX" [@@bs.get] 
    external setShadowOffsetX : canvasShadowStyles:('own) canvasShadowStyles_like -> shadowOffsetX:float ->  unit = "shadowOffsetX" [@@bs.set]
    external shadowOffsetY : canvasShadowStyles:('own) canvasShadowStyles_like ->  float = "shadowOffsetY" [@@bs.get] 
    external setShadowOffsetY : canvasShadowStyles:('own) canvasShadowStyles_like -> shadowOffsetY:float ->  unit = "shadowOffsetY" [@@bs.set]
    external shadowBlur : canvasShadowStyles:('own) canvasShadowStyles_like ->  float = "shadowBlur" [@@bs.get] 
    external setShadowBlur : canvasShadowStyles:('own) canvasShadowStyles_like -> shadowBlur:float ->  unit = "shadowBlur" [@@bs.set]
    external shadowColor : canvasShadowStyles:('own) canvasShadowStyles_like ->  string = "shadowColor" [@@bs.get] 
    external setShadowColor : canvasShadowStyles:('own) canvasShadowStyles_like -> shadowColor:string ->  unit = "shadowColor" [@@bs.set]
    
    
end
 module CanvasRect = struct
    
    
    external clearRect : x:float -> y:float -> w:float -> h:float ->  unit = "clearRect" [@@bs.send.pipe: ('own) canvasRect_like] 
    external fillRect : x:float -> y:float -> w:float -> h:float ->  unit = "fillRect" [@@bs.send.pipe: ('own) canvasRect_like] 
    external strokeRect : x:float -> y:float -> w:float -> h:float ->  unit = "strokeRect" [@@bs.send.pipe: ('own) canvasRect_like] 
    
    
end
 module CanvasDrawPath = struct
    
    
    external beginPath :  unit = "beginPath" [@@bs.send.pipe: ('own) canvasDrawPath_like] 
    external clip : ?fillRule:string Js.undefined ->  unit = "clip" [@@bs.send.pipe: ('own) canvasDrawPath_like] 
    external fill : ?fillRule:string Js.undefined ->  unit = "fill" [@@bs.send.pipe: ('own) canvasDrawPath_like] 
    external isPointInPath : x:float -> y:float -> ?fillRule:string Js.undefined ->  bool = "isPointInPath" [@@bs.send.pipe: ('own) canvasDrawPath_like] 
    external stroke :  unit = "stroke" [@@bs.send.pipe: ('own) canvasDrawPath_like] 
    
    let clip ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = clip ~fillRule canvasDrawPath in
      return
    
    let clip ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      clip ~fillRule canvasDrawPath
    
    let fill ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = fill ~fillRule canvasDrawPath in
      return
    
    let fill ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      fill ~fillRule canvasDrawPath
    
    let isPointInPath ~x ~y ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = isPointInPath ~x ~y ~fillRule canvasDrawPath in
      return
    
    let isPointInPath ~x ~y ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      isPointInPath ~x ~y ~fillRule canvasDrawPath
    
end
 module CanvasUserInterface = struct
    
    
    
    
    
end
 module CanvasText = struct
    
    
    
    
    
end
 module CanvasDrawImage = struct
    
    
    external drawImage : image:'a256 -> dx:float -> dy:float ->  unit = "drawImage" [@@bs.send.pipe: ('own) canvasDrawImage_like] 
    
    let drawImage ~image ~dx ~dy canvasDrawImage =
      let conv_image = function
        | `HTMLImageElement (x: (_) hTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) hTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) canvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = drawImage ~image ~dx ~dy canvasDrawImage in
      return
    
end
 module CanvasHitRegion = struct
    
    
    
    
    
end
 module CanvasImageData = struct
    
    
    external createImageData : sw:float -> sh:float ->  imageData = "createImageData" [@@bs.send.pipe: ('own) canvasImageData_like] 
    external getImageData : sx:float -> sy:float -> sw:float -> sh:float ->  imageData = "getImageData" [@@bs.send.pipe: ('own) canvasImageData_like] 
    external putImageData : imagedata:(_) imageData_like -> dx:float -> dy:float ->  unit = "putImageData" [@@bs.send.pipe: ('own) canvasImageData_like] 
    
    
end
 module CanvasPathDrawingStyles = struct
    
    
    external lineWidth : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like ->  float = "lineWidth" [@@bs.get] 
    external setLineWidth : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like -> lineWidth:float ->  unit = "lineWidth" [@@bs.set]
    external lineCap : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like ->  string = "lineCap" [@@bs.get] 
    external setLineCap : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like -> lineCap:string ->  unit = "lineCap" [@@bs.set]
    external lineJoin : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like ->  string = "lineJoin" [@@bs.get] 
    external setLineJoin : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like -> lineJoin:string ->  unit = "lineJoin" [@@bs.set]
    external miterLimit : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like ->  float = "miterLimit" [@@bs.get] 
    external setMiterLimit : canvasPathDrawingStyles:('own) canvasPathDrawingStyles_like -> miterLimit:float ->  unit = "miterLimit" [@@bs.set]
    
    
end
 module CanvasTextDrawingStyles = struct
    
    
    
    
    
end
 module CanvasPath = struct
    
    
    external arc : x:float -> y:float -> radius:float -> startAngle:float -> endAngle:float -> ?anticlockwise:Js.boolean Js.undefined ->  unit = "arc" [@@bs.send.pipe: ('own) canvasPath_like] 
    external arcTo : x1:float -> y1:float -> x2:float -> y2:float -> radius:float ->  unit = "arcTo" [@@bs.send.pipe: ('own) canvasPath_like] 
    external bezierCurveTo : cp1x:float -> cp1y:float -> cp2x:float -> cp2y:float -> x:float -> y:float ->  unit = "bezierCurveTo" [@@bs.send.pipe: ('own) canvasPath_like] 
    external closePath :  unit = "closePath" [@@bs.send.pipe: ('own) canvasPath_like] 
    external lineTo : x:float -> y:float ->  unit = "lineTo" [@@bs.send.pipe: ('own) canvasPath_like] 
    external moveTo : x:float -> y:float ->  unit = "moveTo" [@@bs.send.pipe: ('own) canvasPath_like] 
    external quadraticCurveTo : cpx:float -> cpy:float -> x:float -> y:float ->  unit = "quadraticCurveTo" [@@bs.send.pipe: ('own) canvasPath_like] 
    external rect : x:float -> y:float -> w:float -> h:float ->  unit = "rect" [@@bs.send.pipe: ('own) canvasPath_like] 
    
    let arc ~x ~y ~radius ~startAngle ~endAngle ?anticlockwise canvasPath =
      let conv_anticlockwise = Js_undefined.from_opt in
      let anticlockwise = conv_anticlockwise anticlockwise in
      arc ~x ~y ~radius ~startAngle ~endAngle ~anticlockwise canvasPath
    
end
 module MediaList = struct
    
    
    external mediaText : mediaList:('own) mediaList_like ->  string = "mediaText" [@@bs.get] 
    external setMediaText : mediaList:('own) mediaList_like -> mediaText:string ->  unit = "mediaText" [@@bs.set]
    external length : mediaList:('own) mediaList_like ->  int = "length" [@@bs.get] 
    external appendMedium : medium:string ->  unit = "appendMedium" [@@bs.send.pipe: ('own) mediaList_like] 
    external deleteMedium : medium:string ->  unit = "deleteMedium" [@@bs.send.pipe: ('own) mediaList_like] 
    external item : index:int ->  string option = "item" [@@bs.send.pipe: ('own) mediaList_like] [@@bs.return null_to_opt]
    
    
end
 module OESTextureFloat = struct
    
    
    
    
    
end
 module Permissions = struct
    
    
    external query : permissionDesc:'a257 ->  permissionStatus Js.Promise.t = "query" [@@bs.send.pipe: ('own) permissions_like] 
    external request : permissionDesc:'a258 ->  permissionStatus Js.Promise.t = "request" [@@bs.send.pipe: ('own) permissions_like] 
    external revoke : permissionDesc:'a259 ->  permissionStatus Js.Promise.t = "revoke" [@@bs.send.pipe: ('own) permissions_like] 
    
    
end
 module CanvasPattern = struct
    
    
    
    
    
end
 module MutationRecord = struct
    
    
    external type_ : mutationRecord:('own) mutationRecord_like ->  string = "type" [@@bs.get] 
    external target : mutationRecord:('own) mutationRecord_like ->  node = "target" [@@bs.get] 
    external addedNodes : mutationRecord:('own) mutationRecord_like ->  nodeList = "addedNodes" [@@bs.get] 
    external removedNodes : mutationRecord:('own) mutationRecord_like ->  nodeList = "removedNodes" [@@bs.get] 
    external previousSibling : mutationRecord:('own) mutationRecord_like ->  node option = "previousSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextSibling : mutationRecord:('own) mutationRecord_like ->  node option = "nextSibling" [@@bs.get] [@@bs.return null_to_opt]
    external attributeName : mutationRecord:('own) mutationRecord_like ->  string option = "attributeName" [@@bs.get] [@@bs.return null_to_opt]
    external attributeNamespace : mutationRecord:('own) mutationRecord_like ->  string option = "attributeNamespace" [@@bs.get] [@@bs.return null_to_opt]
    external oldValue : mutationRecord:('own) mutationRecord_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module Storage = struct
    
    
    external length : storage:('own) storage_like ->  int = "length" [@@bs.get] 
    external clear :  unit = "clear" [@@bs.send.pipe: ('own) storage_like] 
    external getItem : name:string ->  string option = "getItem" [@@bs.send.pipe: ('own) storage_like] [@@bs.return null_to_opt]
    external key : index:int ->  string option = "key" [@@bs.send.pipe: ('own) storage_like] [@@bs.return null_to_opt]
    external removeItem : name:string ->  unit = "removeItem" [@@bs.send.pipe: ('own) storage_like] 
    external setItem : name:string -> value:string ->  unit = "setItem" [@@bs.send.pipe: ('own) storage_like] 
    
    
end
 module MutationObserver = struct
    
    
    external observe : target:(_) node_like -> ?options:(_) mutationObserverInit_like Js.undefined ->  unit = "observe" [@@bs.send.pipe: ('own) mutationObserver_like] 
    
    let observe ~target ?options mutationObserver =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      observe ~target ~options mutationObserver
    
end
 module TestBindingIterable = struct
    
    
    external length : testBindingIterable:('own) testBindingIterable_like ->  int = "length" [@@bs.get] 
    external add : arg:string ->  unit = "add" [@@bs.send.pipe: ('own) testBindingIterable_like] 
    external getItem : index:int ->  string = "getItem" [@@bs.send.pipe: ('own) testBindingIterable_like] 
    
    
end
 module ServiceEventHandlers = struct
    
    
    external onserviceadded : serviceEventHandlers:('own) serviceEventHandlers_like ->  (event -> 'a260 [@bs]) option = "onserviceadded" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceadded : serviceEventHandlers:('own) serviceEventHandlers_like -> onserviceadded:(event -> 'a261 [@bs]) Js.null ->  unit = "onserviceadded" [@@bs.set]
    external onservicechanged : serviceEventHandlers:('own) serviceEventHandlers_like ->  (event -> 'a262 [@bs]) option = "onservicechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnservicechanged : serviceEventHandlers:('own) serviceEventHandlers_like -> onservicechanged:(event -> 'a263 [@bs]) Js.null ->  unit = "onservicechanged" [@@bs.set]
    external onserviceremoved : serviceEventHandlers:('own) serviceEventHandlers_like ->  (event -> 'a264 [@bs]) option = "onserviceremoved" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceremoved : serviceEventHandlers:('own) serviceEventHandlers_like -> onserviceremoved:(event -> 'a265 [@bs]) Js.null ->  unit = "onserviceremoved" [@@bs.set]
    
    
end
 module TextEncoder = struct
    
    
    external encoding : textEncoder:('own) textEncoder_like ->  string = "encoding" [@@bs.get] 
    external encode : ?input:string Js.undefined ->  Js_typed_array.Uint8Array.t = "encode" [@@bs.send.pipe: ('own) textEncoder_like] 
    
    let encode ?input textEncoder =
      let conv_input = Js_undefined.from_opt in
      let input = conv_input input in
      encode ~input textEncoder
    
end
 module Event = struct
    
    
    external type_ : event:('own) event_like ->  string = "type" [@@bs.get] 
    external target : event:('own) event_like ->  eventTarget option = "target" [@@bs.get] [@@bs.return null_to_opt]
    external currentTarget : event:('own) event_like ->  eventTarget option = "currentTarget" [@@bs.get] [@@bs.return null_to_opt]
    external eventPhase : event:('own) event_like ->  int = "eventPhase" [@@bs.get] 
    external bubbles : event:('own) event_like ->  bool = "bubbles" [@@bs.get] 
    external cancelable : event:('own) event_like ->  bool = "cancelable" [@@bs.get] 
    external defaultPrevented : event:('own) event_like ->  bool = "defaultPrevented" [@@bs.get] 
    external isTrusted : event:('own) event_like ->  bool = "isTrusted" [@@bs.get] 
    external timeStamp : event:('own) event_like ->  int = "timeStamp" [@@bs.get] 
    external initEvent : type_:string -> bubbles:Js.boolean -> cancelable:Js.boolean ->  unit = "initEvent" [@@bs.send.pipe: ('own) event_like] 
    external preventDefault :  unit = "preventDefault" [@@bs.send.pipe: ('own) event_like] 
    external stopImmediatePropagation :  unit = "stopImmediatePropagation" [@@bs.send.pipe: ('own) event_like] 
    external stopPropagation :  unit = "stopPropagation" [@@bs.send.pipe: ('own) event_like] 
    
    let none  =
      
      0
    
    let capturing_phase  =
      
      1
    
    let at_target  =
      
      2
    
    let bubbling_phase  =
      
      3
    
end
 module ValidityState = struct
    
    
    external valueMissing : validityState:('own) validityState_like ->  bool = "valueMissing" [@@bs.get] 
    external typeMismatch : validityState:('own) validityState_like ->  bool = "typeMismatch" [@@bs.get] 
    external patternMismatch : validityState:('own) validityState_like ->  bool = "patternMismatch" [@@bs.get] 
    external tooLong : validityState:('own) validityState_like ->  bool = "tooLong" [@@bs.get] 
    external tooShort : validityState:('own) validityState_like ->  bool = "tooShort" [@@bs.get] 
    external rangeUnderflow : validityState:('own) validityState_like ->  bool = "rangeUnderflow" [@@bs.get] 
    external rangeOverflow : validityState:('own) validityState_like ->  bool = "rangeOverflow" [@@bs.get] 
    external stepMismatch : validityState:('own) validityState_like ->  bool = "stepMismatch" [@@bs.get] 
    external badInput : validityState:('own) validityState_like ->  bool = "badInput" [@@bs.get] 
    external customError : validityState:('own) validityState_like ->  bool = "customError" [@@bs.get] 
    external valid : validityState:('own) validityState_like ->  bool = "valid" [@@bs.get] 
    
    
end
 module WindowProxy = struct
    
    
    
    
    
end
 module WindowTimers = struct
    
    
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) windowTimers_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) windowTimers_like] 
    external setInterval : windowTimers:('own) windowTimers_like ->  (('own) windowTimers_like, int, ('a266*(int Js.undefined*('a267)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : windowTimers:('own) windowTimers_like ->  (('own) windowTimers_like, int, ('a268*(int Js.undefined*('a269)))) variadic_func = "setTimeout" [@@bs.get]
    
    let clearInterval ?handle windowTimers =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle windowTimers
    
    let clearTimeout ?handle windowTimers =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle windowTimers
    
    let setInterval ~handler ~timeout ~arguments windowTimers =
      let func = setInterval windowTimers in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func windowTimers args
    
    let setInterval ~handler ~timeout ~arguments windowTimers =
      let conv_handler = function
        | `Callback (x: ('a270 -> 'a271 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments windowTimers in
      return
    
    let setInterval ~handler ?timeout ~arguments windowTimers =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments windowTimers
    
    let setTimeout ~handler ~timeout ~arguments windowTimers =
      let func = setTimeout windowTimers in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func windowTimers args
    
    let setTimeout ~handler ~timeout ~arguments windowTimers =
      let conv_handler = function
        | `Callback (x: ('a272 -> 'a273 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments windowTimers in
      return
    
    let setTimeout ~handler ?timeout ~arguments windowTimers =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments windowTimers
    
end
 module WindowBase64 = struct
    
    
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) windowBase64_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) windowBase64_like] 
    
    
end
 module WindowSessionStorage = struct
    
    
    external sessionStorage : windowSessionStorage:('own) windowSessionStorage_like ->  storage = "sessionStorage" [@@bs.get] 
    
    
end
 module WindowLocalStorage = struct
    
    
    external localStorage : windowLocalStorage:('own) windowLocalStorage_like ->  storage = "localStorage" [@@bs.get] 
    
    
end
 module DOMStringMap = struct
    
    
    external none : dOMStringMap:('own) dOMStringMap_like -> name:string ->  string = "" [@@bs.get_index] 
    external none : dOMStringMap:('own) dOMStringMap_like -> name:string -> value:string ->  unit = "" [@@bs.set_index] 
    external none : dOMStringMap:('own) dOMStringMap_like -> name:string ->  unit = "" [@@bs.get_index] 
    
    
end
 module GlobalEventHandlers = struct
    
    
    external onabort : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a274 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : globalEventHandlers:('own) globalEventHandlers_like -> onabort:(event -> 'a275 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a276 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : globalEventHandlers:('own) globalEventHandlers_like -> onblur:(event -> 'a277 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a278 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : globalEventHandlers:('own) globalEventHandlers_like -> oncancel:(event -> 'a279 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a280 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : globalEventHandlers:('own) globalEventHandlers_like -> oncanplay:(event -> 'a281 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a282 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : globalEventHandlers:('own) globalEventHandlers_like -> oncanplaythrough:(event -> 'a283 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a284 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : globalEventHandlers:('own) globalEventHandlers_like -> onchange:(event -> 'a285 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a286 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : globalEventHandlers:('own) globalEventHandlers_like -> onclick:(event -> 'a287 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a288 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : globalEventHandlers:('own) globalEventHandlers_like -> onclose:(event -> 'a289 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a290 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : globalEventHandlers:('own) globalEventHandlers_like -> oncontextmenu:(event -> 'a291 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a292 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : globalEventHandlers:('own) globalEventHandlers_like -> oncuechange:(event -> 'a293 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a294 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : globalEventHandlers:('own) globalEventHandlers_like -> ondblclick:(event -> 'a295 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a296 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : globalEventHandlers:('own) globalEventHandlers_like -> ondrag:(event -> 'a297 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a298 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : globalEventHandlers:('own) globalEventHandlers_like -> ondragend:(event -> 'a299 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a300 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : globalEventHandlers:('own) globalEventHandlers_like -> ondragenter:(event -> 'a301 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a302 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : globalEventHandlers:('own) globalEventHandlers_like -> ondragexit:(event -> 'a303 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a304 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : globalEventHandlers:('own) globalEventHandlers_like -> ondragleave:(event -> 'a305 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a306 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : globalEventHandlers:('own) globalEventHandlers_like -> ondragover:(event -> 'a307 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a308 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : globalEventHandlers:('own) globalEventHandlers_like -> ondragstart:(event -> 'a309 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a310 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : globalEventHandlers:('own) globalEventHandlers_like -> ondrop:(event -> 'a311 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a312 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : globalEventHandlers:('own) globalEventHandlers_like -> ondurationchange:(event -> 'a313 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a314 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : globalEventHandlers:('own) globalEventHandlers_like -> onemptied:(event -> 'a315 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a316 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : globalEventHandlers:('own) globalEventHandlers_like -> onended:(event -> 'a317 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : globalEventHandlers:('own) globalEventHandlers_like ->  ('a318 -> string -> int -> int -> 'a319 -> 'a320 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : globalEventHandlers:('own) globalEventHandlers_like -> onerror:('a321 -> string -> int -> int -> 'a322 -> 'a323 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a324 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : globalEventHandlers:('own) globalEventHandlers_like -> onfocus:(event -> 'a325 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a326 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : globalEventHandlers:('own) globalEventHandlers_like -> oninput:(event -> 'a327 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a328 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : globalEventHandlers:('own) globalEventHandlers_like -> oninvalid:(event -> 'a329 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a330 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : globalEventHandlers:('own) globalEventHandlers_like -> onkeydown:(event -> 'a331 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a332 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : globalEventHandlers:('own) globalEventHandlers_like -> onkeypress:(event -> 'a333 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a334 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : globalEventHandlers:('own) globalEventHandlers_like -> onkeyup:(event -> 'a335 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a336 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : globalEventHandlers:('own) globalEventHandlers_like -> onload:(event -> 'a337 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a338 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : globalEventHandlers:('own) globalEventHandlers_like -> onloadeddata:(event -> 'a339 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a340 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : globalEventHandlers:('own) globalEventHandlers_like -> onloadedmetadata:(event -> 'a341 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a342 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : globalEventHandlers:('own) globalEventHandlers_like -> onloadstart:(event -> 'a343 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a344 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : globalEventHandlers:('own) globalEventHandlers_like -> onmousedown:(event -> 'a345 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a346 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : globalEventHandlers:('own) globalEventHandlers_like -> onmouseenter:(event -> 'a347 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a348 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : globalEventHandlers:('own) globalEventHandlers_like -> onmouseleave:(event -> 'a349 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a350 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : globalEventHandlers:('own) globalEventHandlers_like -> onmousemove:(event -> 'a351 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a352 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : globalEventHandlers:('own) globalEventHandlers_like -> onmouseout:(event -> 'a353 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a354 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : globalEventHandlers:('own) globalEventHandlers_like -> onmouseover:(event -> 'a355 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a356 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : globalEventHandlers:('own) globalEventHandlers_like -> onmouseup:(event -> 'a357 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a358 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : globalEventHandlers:('own) globalEventHandlers_like -> onwheel:(event -> 'a359 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a360 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : globalEventHandlers:('own) globalEventHandlers_like -> onpause:(event -> 'a361 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a362 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : globalEventHandlers:('own) globalEventHandlers_like -> onplay:(event -> 'a363 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a364 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : globalEventHandlers:('own) globalEventHandlers_like -> onplaying:(event -> 'a365 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a366 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : globalEventHandlers:('own) globalEventHandlers_like -> onprogress:(event -> 'a367 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a368 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : globalEventHandlers:('own) globalEventHandlers_like -> onratechange:(event -> 'a369 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a370 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : globalEventHandlers:('own) globalEventHandlers_like -> onreset:(event -> 'a371 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a372 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : globalEventHandlers:('own) globalEventHandlers_like -> onresize:(event -> 'a373 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a374 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : globalEventHandlers:('own) globalEventHandlers_like -> onscroll:(event -> 'a375 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a376 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : globalEventHandlers:('own) globalEventHandlers_like -> onseeked:(event -> 'a377 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a378 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : globalEventHandlers:('own) globalEventHandlers_like -> onseeking:(event -> 'a379 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a380 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : globalEventHandlers:('own) globalEventHandlers_like -> onselect:(event -> 'a381 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a382 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : globalEventHandlers:('own) globalEventHandlers_like -> onshow:(event -> 'a383 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a384 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : globalEventHandlers:('own) globalEventHandlers_like -> onstalled:(event -> 'a385 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a386 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : globalEventHandlers:('own) globalEventHandlers_like -> onsubmit:(event -> 'a387 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a388 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : globalEventHandlers:('own) globalEventHandlers_like -> onsuspend:(event -> 'a389 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a390 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : globalEventHandlers:('own) globalEventHandlers_like -> ontimeupdate:(event -> 'a391 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a392 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : globalEventHandlers:('own) globalEventHandlers_like -> ontoggle:(event -> 'a393 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a394 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : globalEventHandlers:('own) globalEventHandlers_like -> onvolumechange:(event -> 'a395 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a396 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : globalEventHandlers:('own) globalEventHandlers_like -> onwaiting:(event -> 'a397 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : globalEventHandlers:('own) globalEventHandlers_like ->  (event -> 'a398 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : globalEventHandlers:('own) globalEventHandlers_like -> ontransitionend:(event -> 'a399 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    
    
end
 module WindowEventHandlers = struct
    
    
    external onafterprint : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a400 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : windowEventHandlers:('own) windowEventHandlers_like -> onafterprint:(event -> 'a401 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a402 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : windowEventHandlers:('own) windowEventHandlers_like -> onbeforeprint:(event -> 'a403 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : windowEventHandlers:('own) windowEventHandlers_like -> onbeforeunload:(event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a404 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : windowEventHandlers:('own) windowEventHandlers_like -> onhashchange:(event -> 'a405 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a406 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : windowEventHandlers:('own) windowEventHandlers_like -> onlanguagechange:(event -> 'a407 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a408 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : windowEventHandlers:('own) windowEventHandlers_like -> onmessage:(event -> 'a409 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a410 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : windowEventHandlers:('own) windowEventHandlers_like -> onoffline:(event -> 'a411 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a412 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : windowEventHandlers:('own) windowEventHandlers_like -> ononline:(event -> 'a413 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a414 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : windowEventHandlers:('own) windowEventHandlers_like -> onpagehide:(event -> 'a415 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a416 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : windowEventHandlers:('own) windowEventHandlers_like -> onpageshow:(event -> 'a417 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a418 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : windowEventHandlers:('own) windowEventHandlers_like -> onpopstate:(event -> 'a419 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a420 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : windowEventHandlers:('own) windowEventHandlers_like -> onrejectionhandled:(event -> 'a421 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a422 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : windowEventHandlers:('own) windowEventHandlers_like -> onstorage:(event -> 'a423 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a424 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : windowEventHandlers:('own) windowEventHandlers_like -> onunhandledrejection:(event -> 'a425 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : windowEventHandlers:('own) windowEventHandlers_like ->  (event -> 'a426 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : windowEventHandlers:('own) windowEventHandlers_like -> onunload:(event -> 'a427 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    
    
end
 module DocumentAndElementEventHandlers = struct
    
    
    external oncopy : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like ->  (event -> 'a428 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like -> oncopy:(event -> 'a429 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like ->  (event -> 'a430 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like -> oncut:(event -> 'a431 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like ->  (event -> 'a432 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : documentAndElementEventHandlers:('own) documentAndElementEventHandlers_like -> onpaste:(event -> 'a433 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    
    
end
 module Blob = struct
    
    
    external size : blob:('own) blob_like ->  int = "size" [@@bs.get] 
    external type_ : blob:('own) blob_like ->  string = "type" [@@bs.get] 
    external slice : ?start:int Js.undefined -> ?end_:int Js.undefined -> ?contentType:string Js.undefined ->  blob = "slice" [@@bs.send.pipe: ('own) blob_like] 
    
    let slice ?start ?end_ ?contentType blob =
      let conv_start = Js_undefined.from_opt in
      let start = conv_start start in
      let conv_end = Js_undefined.from_opt in
      let end_ = conv_end end_ in
      let conv_contentType = Js_undefined.from_opt in
      let contentType = conv_contentType contentType in
      slice ~start ~end_ ~contentType blob
    
end
 module VRFrameData = struct
    
    
    external timestamp : vRFrameData:('own) vRFrameData_like ->  float = "timestamp" [@@bs.get] 
    external leftProjectionMatrix : vRFrameData:('own) vRFrameData_like ->  Js_typed_array.Float32Array.t = "leftProjectionMatrix" [@@bs.get] 
    external leftViewMatrix : vRFrameData:('own) vRFrameData_like ->  Js_typed_array.Float32Array.t = "leftViewMatrix" [@@bs.get] 
    external rightProjectionMatrix : vRFrameData:('own) vRFrameData_like ->  Js_typed_array.Float32Array.t = "rightProjectionMatrix" [@@bs.get] 
    external rightViewMatrix : vRFrameData:('own) vRFrameData_like ->  Js_typed_array.Float32Array.t = "rightViewMatrix" [@@bs.get] 
    external pose : vRFrameData:('own) vRFrameData_like ->  vRPose = "pose" [@@bs.get] 
    
    
end
 module ServoParser = struct
    
    
    
    
    
end
 module Attr = struct
    
    
    external namespaceURI : attr:('own) attr_like ->  string option = "namespaceURI" [@@bs.get] [@@bs.return null_to_opt]
    external prefix : attr:('own) attr_like ->  string option = "prefix" [@@bs.get] [@@bs.return null_to_opt]
    external localName : attr:('own) attr_like ->  string = "localName" [@@bs.get] 
    external name : attr:('own) attr_like ->  string = "name" [@@bs.get] 
    external nodeName : attr:('own) attr_like ->  string = "nodeName" [@@bs.get] 
    external value : attr:('own) attr_like ->  string = "value" [@@bs.get] 
    external setValue : attr:('own) attr_like -> value:string ->  unit = "value" [@@bs.set]
    external textContent : attr:('own) attr_like ->  string = "textContent" [@@bs.get] 
    external setTextContent : attr:('own) attr_like -> textContent:string ->  unit = "textContent" [@@bs.set]
    external nodeValue : attr:('own) attr_like ->  string = "nodeValue" [@@bs.get] 
    external setNodeValue : attr:('own) attr_like -> nodeValue:string ->  unit = "nodeValue" [@@bs.set]
    external ownerElement : attr:('own) attr_like ->  element option = "ownerElement" [@@bs.get] [@@bs.return null_to_opt]
    external specified : attr:('own) attr_like ->  bool = "specified" [@@bs.get] 
    
    
end
 module ActivatableElement = struct
    
    
    external enterFormalActivationState :  unit = "enterFormalActivationState" [@@bs.send.pipe: ('own) activatableElement_like] 
    external exitFormalActivationState :  unit = "exitFormalActivationState" [@@bs.send.pipe: ('own) activatableElement_like] 
    
    
end
 module StyleSheetList = struct
    
    
    external length : styleSheetList:('own) styleSheetList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  styleSheet option = "item" [@@bs.send.pipe: ('own) styleSheetList_like] [@@bs.return null_to_opt]
    
    
end
 module EventSourceInit = struct
    
    
    external make : ?withCredentials:Js.boolean -> unit ->  eventSourceInit = "" [@@bs.obj]
    external withCredentials : eventSourceInit:('own) eventSourceInit_like ->  bool = "withCredentials" [@@bs.get] 
    external setWithCredentials : eventSourceInit:('own) eventSourceInit_like -> withCredentials:Js.boolean ->  unit = "withCredentials" [@@bs.set]
    
    
end
 module ElementDefinitionOptions = struct
    
    
    external make : ?extends:string -> unit ->  elementDefinitionOptions = "" [@@bs.obj]
    external extends : elementDefinitionOptions:('own) elementDefinitionOptions_like ->  string = "extends" [@@bs.get] 
    external setExtends : elementDefinitionOptions:('own) elementDefinitionOptions_like -> extends:string ->  unit = "extends" [@@bs.set]
    
    
end
 module DOMMatrixInit = struct
    
    
    external make : ?a:float -> ?b:float -> ?c:float -> ?d:float -> ?e:float -> ?f:float -> ?m11:float -> ?m12:float -> ?m13:float -> ?m14:float -> ?m21:float -> ?m22:float -> ?m23:float -> ?m24:float -> ?m31:float -> ?m32:float -> ?m33:float -> ?m34:float -> ?m41:float -> ?m42:float -> ?m43:float -> ?m44:float -> ?is2D:Js.boolean -> unit ->  dOMMatrixInit = "" [@@bs.obj]
    external a : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "a" [@@bs.get] 
    external setA : dOMMatrixInit:('own) dOMMatrixInit_like -> a:float ->  unit = "a" [@@bs.set]
    external b : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "b" [@@bs.get] 
    external setB : dOMMatrixInit:('own) dOMMatrixInit_like -> b:float ->  unit = "b" [@@bs.set]
    external c : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "c" [@@bs.get] 
    external setC : dOMMatrixInit:('own) dOMMatrixInit_like -> c:float ->  unit = "c" [@@bs.set]
    external d : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "d" [@@bs.get] 
    external setD : dOMMatrixInit:('own) dOMMatrixInit_like -> d:float ->  unit = "d" [@@bs.set]
    external e : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "e" [@@bs.get] 
    external setE : dOMMatrixInit:('own) dOMMatrixInit_like -> e:float ->  unit = "e" [@@bs.set]
    external f : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "f" [@@bs.get] 
    external setF : dOMMatrixInit:('own) dOMMatrixInit_like -> f:float ->  unit = "f" [@@bs.set]
    external m11 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m11" [@@bs.get] 
    external setM11 : dOMMatrixInit:('own) dOMMatrixInit_like -> m11:float ->  unit = "m11" [@@bs.set]
    external m12 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m12" [@@bs.get] 
    external setM12 : dOMMatrixInit:('own) dOMMatrixInit_like -> m12:float ->  unit = "m12" [@@bs.set]
    external m13 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m13" [@@bs.get] 
    external setM13 : dOMMatrixInit:('own) dOMMatrixInit_like -> m13:float ->  unit = "m13" [@@bs.set]
    external m14 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m14" [@@bs.get] 
    external setM14 : dOMMatrixInit:('own) dOMMatrixInit_like -> m14:float ->  unit = "m14" [@@bs.set]
    external m21 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m21" [@@bs.get] 
    external setM21 : dOMMatrixInit:('own) dOMMatrixInit_like -> m21:float ->  unit = "m21" [@@bs.set]
    external m22 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m22" [@@bs.get] 
    external setM22 : dOMMatrixInit:('own) dOMMatrixInit_like -> m22:float ->  unit = "m22" [@@bs.set]
    external m23 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m23" [@@bs.get] 
    external setM23 : dOMMatrixInit:('own) dOMMatrixInit_like -> m23:float ->  unit = "m23" [@@bs.set]
    external m24 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m24" [@@bs.get] 
    external setM24 : dOMMatrixInit:('own) dOMMatrixInit_like -> m24:float ->  unit = "m24" [@@bs.set]
    external m31 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m31" [@@bs.get] 
    external setM31 : dOMMatrixInit:('own) dOMMatrixInit_like -> m31:float ->  unit = "m31" [@@bs.set]
    external m32 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m32" [@@bs.get] 
    external setM32 : dOMMatrixInit:('own) dOMMatrixInit_like -> m32:float ->  unit = "m32" [@@bs.set]
    external m33 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m33" [@@bs.get] 
    external setM33 : dOMMatrixInit:('own) dOMMatrixInit_like -> m33:float ->  unit = "m33" [@@bs.set]
    external m34 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m34" [@@bs.get] 
    external setM34 : dOMMatrixInit:('own) dOMMatrixInit_like -> m34:float ->  unit = "m34" [@@bs.set]
    external m41 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m41" [@@bs.get] 
    external setM41 : dOMMatrixInit:('own) dOMMatrixInit_like -> m41:float ->  unit = "m41" [@@bs.set]
    external m42 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m42" [@@bs.get] 
    external setM42 : dOMMatrixInit:('own) dOMMatrixInit_like -> m42:float ->  unit = "m42" [@@bs.set]
    external m43 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m43" [@@bs.get] 
    external setM43 : dOMMatrixInit:('own) dOMMatrixInit_like -> m43:float ->  unit = "m43" [@@bs.set]
    external m44 : dOMMatrixInit:('own) dOMMatrixInit_like ->  float = "m44" [@@bs.get] 
    external setM44 : dOMMatrixInit:('own) dOMMatrixInit_like -> m44:float ->  unit = "m44" [@@bs.set]
    external is2D : dOMMatrixInit:('own) dOMMatrixInit_like ->  bool = "is2D" [@@bs.get] 
    external setIs2D : dOMMatrixInit:('own) dOMMatrixInit_like -> is2D:Js.boolean ->  unit = "is2D" [@@bs.set]
    
    
end
 module VRLayer = struct
    
    
    external make : ?source:(_) hTMLCanvasElement_like -> ?leftBounds:float array -> ?rightBounds:float array -> unit ->  vRLayer = "" [@@bs.obj]
    external source : vRLayer:('own) vRLayer_like ->  hTMLCanvasElement = "source" [@@bs.get] 
    external setSource : vRLayer:('own) vRLayer_like -> source:hTMLCanvasElement ->  unit = "source" [@@bs.set]
    external leftBounds : vRLayer:('own) vRLayer_like ->  float array = "leftBounds" [@@bs.get] 
    external setLeftBounds : vRLayer:('own) vRLayer_like -> leftBounds:float array ->  unit = "leftBounds" [@@bs.set]
    external rightBounds : vRLayer:('own) vRLayer_like ->  float array = "rightBounds" [@@bs.get] 
    external setRightBounds : vRLayer:('own) vRLayer_like -> rightBounds:float array ->  unit = "rightBounds" [@@bs.set]
    
    
end
 module IterableKeyOrValueResult = struct
    
    
    external make : ?value:'a434 -> ?done_:Js.boolean -> unit ->  iterableKeyOrValueResult = "" [@@bs.obj]
    external value : iterableKeyOrValueResult:('own) iterableKeyOrValueResult_like ->  'a435 = "value" [@@bs.get] 
    external setValue : iterableKeyOrValueResult:('own) iterableKeyOrValueResult_like -> value:'a436 ->  unit = "value" [@@bs.set]
    external done_ : iterableKeyOrValueResult:('own) iterableKeyOrValueResult_like ->  bool = "done" [@@bs.get] 
    external setDone : iterableKeyOrValueResult:('own) iterableKeyOrValueResult_like -> done_:Js.boolean ->  unit = "done" [@@bs.set]
    
    
end
 module IterableKeyAndValueResult = struct
    
    
    external make : ?value:'a437 array -> ?done_:Js.boolean -> unit ->  iterableKeyAndValueResult = "" [@@bs.obj]
    external value : iterableKeyAndValueResult:('own) iterableKeyAndValueResult_like ->  'a438 array = "value" [@@bs.get] 
    external setValue : iterableKeyAndValueResult:('own) iterableKeyAndValueResult_like -> value:'a439 array ->  unit = "value" [@@bs.set]
    external done_ : iterableKeyAndValueResult:('own) iterableKeyAndValueResult_like ->  bool = "done" [@@bs.get] 
    external setDone : iterableKeyAndValueResult:('own) iterableKeyAndValueResult_like -> done_:Js.boolean ->  unit = "done" [@@bs.set]
    
    
end
 module RegistrationOptions = struct
    
    
    external make : ?scope:string -> unit ->  registrationOptions = "" [@@bs.obj]
    external scope : registrationOptions:('own) registrationOptions_like ->  string = "scope" [@@bs.get] 
    external setScope : registrationOptions:('own) registrationOptions_like -> scope:string ->  unit = "scope" [@@bs.set]
    
    
end
 module PermissionDescriptor = struct
    
    
    external make : name:string -> unit ->  permissionDescriptor = "" [@@bs.obj]
    external name : permissionDescriptor:('own) permissionDescriptor_like ->  string = "name" [@@bs.get] 
    external setName : permissionDescriptor:('own) permissionDescriptor_like -> name:string ->  unit = "name" [@@bs.set]
    
    
end
 module WebGLContextAttributes = struct
    
    
    external make : ?alpha:Js.boolean -> ?depth:Js.boolean -> ?stencil:Js.boolean -> ?antialias:Js.boolean -> ?premultipliedAlpha:Js.boolean -> ?preserveDrawingBuffer:Js.boolean -> ?preferLowPowerToHighPerformance:Js.boolean -> ?failIfMajorPerformanceCaveat:Js.boolean -> unit ->  webGLContextAttributes = "" [@@bs.obj]
    external alpha : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "alpha" [@@bs.get] 
    external setAlpha : webGLContextAttributes:('own) webGLContextAttributes_like -> alpha:Js.boolean ->  unit = "alpha" [@@bs.set]
    external depth : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "depth" [@@bs.get] 
    external setDepth : webGLContextAttributes:('own) webGLContextAttributes_like -> depth:Js.boolean ->  unit = "depth" [@@bs.set]
    external stencil : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "stencil" [@@bs.get] 
    external setStencil : webGLContextAttributes:('own) webGLContextAttributes_like -> stencil:Js.boolean ->  unit = "stencil" [@@bs.set]
    external antialias : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "antialias" [@@bs.get] 
    external setAntialias : webGLContextAttributes:('own) webGLContextAttributes_like -> antialias:Js.boolean ->  unit = "antialias" [@@bs.set]
    external premultipliedAlpha : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "premultipliedAlpha" [@@bs.get] 
    external setPremultipliedAlpha : webGLContextAttributes:('own) webGLContextAttributes_like -> premultipliedAlpha:Js.boolean ->  unit = "premultipliedAlpha" [@@bs.set]
    external preserveDrawingBuffer : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "preserveDrawingBuffer" [@@bs.get] 
    external setPreserveDrawingBuffer : webGLContextAttributes:('own) webGLContextAttributes_like -> preserveDrawingBuffer:Js.boolean ->  unit = "preserveDrawingBuffer" [@@bs.set]
    external preferLowPowerToHighPerformance : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "preferLowPowerToHighPerformance" [@@bs.get] 
    external setPreferLowPowerToHighPerformance : webGLContextAttributes:('own) webGLContextAttributes_like -> preferLowPowerToHighPerformance:Js.boolean ->  unit = "preferLowPowerToHighPerformance" [@@bs.set]
    external failIfMajorPerformanceCaveat : webGLContextAttributes:('own) webGLContextAttributes_like ->  bool = "failIfMajorPerformanceCaveat" [@@bs.get] 
    external setFailIfMajorPerformanceCaveat : webGLContextAttributes:('own) webGLContextAttributes_like -> failIfMajorPerformanceCaveat:Js.boolean ->  unit = "failIfMajorPerformanceCaveat" [@@bs.set]
    
    
end
 module DOMRectInit = struct
    
    
    external make : ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit ->  dOMRectInit = "" [@@bs.obj]
    external x : dOMRectInit:('own) dOMRectInit_like ->  float = "x" [@@bs.get] 
    external setX : dOMRectInit:('own) dOMRectInit_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMRectInit:('own) dOMRectInit_like ->  float = "y" [@@bs.get] 
    external setY : dOMRectInit:('own) dOMRectInit_like -> y:float ->  unit = "y" [@@bs.set]
    external width : dOMRectInit:('own) dOMRectInit_like ->  float = "width" [@@bs.get] 
    external setWidth : dOMRectInit:('own) dOMRectInit_like -> width:float ->  unit = "width" [@@bs.set]
    external height : dOMRectInit:('own) dOMRectInit_like ->  float = "height" [@@bs.get] 
    external setHeight : dOMRectInit:('own) dOMRectInit_like -> height:float ->  unit = "height" [@@bs.set]
    
    
end
 module BrowserElementSecurityChangeDetail = struct
    
    
    external make : ?state:string -> ?trackingState:string -> ?mixedState:string -> ?extendedValidation:Js.boolean -> ?trackingContent:Js.boolean -> ?mixedContent:Js.boolean -> unit ->  browserElementSecurityChangeDetail = "" [@@bs.obj]
    external state : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  string = "state" [@@bs.get] 
    external setState : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> state:string ->  unit = "state" [@@bs.set]
    external trackingState : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  string = "trackingState" [@@bs.get] 
    external setTrackingState : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> trackingState:string ->  unit = "trackingState" [@@bs.set]
    external mixedState : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  string = "mixedState" [@@bs.get] 
    external setMixedState : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> mixedState:string ->  unit = "mixedState" [@@bs.set]
    external extendedValidation : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  bool = "extendedValidation" [@@bs.get] 
    external setExtendedValidation : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> extendedValidation:Js.boolean ->  unit = "extendedValidation" [@@bs.set]
    external trackingContent : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  bool = "trackingContent" [@@bs.get] 
    external setTrackingContent : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> trackingContent:Js.boolean ->  unit = "trackingContent" [@@bs.set]
    external mixedContent : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like ->  bool = "mixedContent" [@@bs.get] 
    external setMixedContent : browserElementSecurityChangeDetail:('own) browserElementSecurityChangeDetail_like -> mixedContent:Js.boolean ->  unit = "mixedContent" [@@bs.set]
    
    
end
 module BrowserElementErrorEventDetail = struct
    
    
    external make : ?type_:string -> ?description:string -> ?report:string -> ?version:string -> unit ->  browserElementErrorEventDetail = "" [@@bs.obj]
    external type_ : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like ->  string = "type" [@@bs.get] 
    external setType : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like -> type_:string ->  unit = "type" [@@bs.set]
    external description : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like ->  string = "description" [@@bs.get] 
    external setDescription : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like -> description:string ->  unit = "description" [@@bs.set]
    external report : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like ->  string = "report" [@@bs.get] 
    external setReport : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like -> report:string ->  unit = "report" [@@bs.set]
    external version : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like ->  string = "version" [@@bs.get] 
    external setVersion : browserElementErrorEventDetail:('own) browserElementErrorEventDetail_like -> version:string ->  unit = "version" [@@bs.set]
    
    
end
 module BrowserElementLocationChangeEventDetail = struct
    
    
    external make : ?url:string -> ?canGoBack:Js.boolean -> ?canGoForward:Js.boolean -> unit ->  browserElementLocationChangeEventDetail = "" [@@bs.obj]
    external url : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    external canGoBack : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like ->  bool = "canGoBack" [@@bs.get] 
    external setCanGoBack : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like -> canGoBack:Js.boolean ->  unit = "canGoBack" [@@bs.set]
    external canGoForward : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like ->  bool = "canGoForward" [@@bs.get] 
    external setCanGoForward : browserElementLocationChangeEventDetail:('own) browserElementLocationChangeEventDetail_like -> canGoForward:Js.boolean ->  unit = "canGoForward" [@@bs.set]
    
    
end
 module BrowserElementIconChangeEventDetail = struct
    
    
    external make : ?rel:string -> ?href:string -> ?sizes:string -> unit ->  browserElementIconChangeEventDetail = "" [@@bs.obj]
    external rel : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like ->  string = "rel" [@@bs.get] 
    external setRel : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like -> rel:string ->  unit = "rel" [@@bs.set]
    external href : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like ->  string = "href" [@@bs.get] 
    external setHref : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like -> href:string ->  unit = "href" [@@bs.set]
    external sizes : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like ->  string = "sizes" [@@bs.get] 
    external setSizes : browserElementIconChangeEventDetail:('own) browserElementIconChangeEventDetail_like -> sizes:string ->  unit = "sizes" [@@bs.set]
    
    
end
 module BrowserShowModalPromptEventDetail = struct
    
    
    external make : ?promptType:string -> ?title:string -> ?message:string -> ?returnValue:string -> unit ->  browserShowModalPromptEventDetail = "" [@@bs.obj]
    external promptType : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like ->  string = "promptType" [@@bs.get] 
    external setPromptType : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like -> promptType:string ->  unit = "promptType" [@@bs.set]
    external title : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like ->  string = "title" [@@bs.get] 
    external setTitle : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like -> title:string ->  unit = "title" [@@bs.set]
    external message : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like ->  string = "message" [@@bs.get] 
    external setMessage : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like -> message:string ->  unit = "message" [@@bs.set]
    external returnValue : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : browserShowModalPromptEventDetail:('own) browserShowModalPromptEventDetail_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    
    
end
 module BrowserElementOpenTabEventDetail = struct
    
    
    external make : ?url:string -> unit ->  browserElementOpenTabEventDetail = "" [@@bs.obj]
    external url : browserElementOpenTabEventDetail:('own) browserElementOpenTabEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementOpenTabEventDetail:('own) browserElementOpenTabEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    
    
end
 module BrowserElementOpenWindowEventDetail = struct
    
    
    external make : ?url:string -> ?target:string -> ?features:string -> unit ->  browserElementOpenWindowEventDetail = "" [@@bs.obj]
    external url : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    external target : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like ->  string = "target" [@@bs.get] 
    external setTarget : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like -> target:string ->  unit = "target" [@@bs.set]
    external features : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like ->  string = "features" [@@bs.get] 
    external setFeatures : browserElementOpenWindowEventDetail:('own) browserElementOpenWindowEventDetail_like -> features:string ->  unit = "features" [@@bs.set]
    
    
end
 module BrowserElementVisibilityChangeEventDetail = struct
    
    
    external make : ?visible:Js.boolean -> unit ->  browserElementVisibilityChangeEventDetail = "" [@@bs.obj]
    external visible : browserElementVisibilityChangeEventDetail:('own) browserElementVisibilityChangeEventDetail_like ->  bool = "visible" [@@bs.get] 
    external setVisible : browserElementVisibilityChangeEventDetail:('own) browserElementVisibilityChangeEventDetail_like -> visible:Js.boolean ->  unit = "visible" [@@bs.set]
    
    
end
 module TestDictionary = struct
    
    
    external make : requiredValue:Js.boolean -> ?booleanValue:Js.boolean -> ?byteValue:int -> ?octetValue:int -> ?shortValue:int -> ?unsignedShortValue:int -> ?longValue:int -> ?unsignedLongValue:int -> ?longLongValue:int -> ?unsignedLongLongValue:int -> ?unrestrictedFloatValue:float -> ?floatValue:float -> ?unrestrictedDoubleValue:float -> ?doubleValue:float -> ?stringValue:string -> ?usvstringValue:string -> ?enumValue:string -> ?interfaceValue:(_) blob_like -> ?anyValue:'a440 -> ?objectValue:'a441 -> ?dict:(_) testDictionaryDefaults_like -> ?seqDict:(_) testDictionaryDefaults_like array -> ?type_:string -> ?nonRequiredNullable:string Js.null -> ?nonRequiredNullable2:string Js.null -> unit ->  testDictionary = "" [@@bs.obj]
    external requiredValue : testDictionary:('own) testDictionary_like ->  bool = "requiredValue" [@@bs.get] 
    external setRequiredValue : testDictionary:('own) testDictionary_like -> requiredValue:Js.boolean ->  unit = "requiredValue" [@@bs.set]
    external booleanValue : testDictionary:('own) testDictionary_like ->  bool = "booleanValue" [@@bs.get] 
    external setBooleanValue : testDictionary:('own) testDictionary_like -> booleanValue:Js.boolean ->  unit = "booleanValue" [@@bs.set]
    external byteValue : testDictionary:('own) testDictionary_like ->  int = "byteValue" [@@bs.get] 
    external setByteValue : testDictionary:('own) testDictionary_like -> byteValue:int ->  unit = "byteValue" [@@bs.set]
    external octetValue : testDictionary:('own) testDictionary_like ->  int = "octetValue" [@@bs.get] 
    external setOctetValue : testDictionary:('own) testDictionary_like -> octetValue:int ->  unit = "octetValue" [@@bs.set]
    external shortValue : testDictionary:('own) testDictionary_like ->  int = "shortValue" [@@bs.get] 
    external setShortValue : testDictionary:('own) testDictionary_like -> shortValue:int ->  unit = "shortValue" [@@bs.set]
    external unsignedShortValue : testDictionary:('own) testDictionary_like ->  int = "unsignedShortValue" [@@bs.get] 
    external setUnsignedShortValue : testDictionary:('own) testDictionary_like -> unsignedShortValue:int ->  unit = "unsignedShortValue" [@@bs.set]
    external longValue : testDictionary:('own) testDictionary_like ->  int = "longValue" [@@bs.get] 
    external setLongValue : testDictionary:('own) testDictionary_like -> longValue:int ->  unit = "longValue" [@@bs.set]
    external unsignedLongValue : testDictionary:('own) testDictionary_like ->  int = "unsignedLongValue" [@@bs.get] 
    external setUnsignedLongValue : testDictionary:('own) testDictionary_like -> unsignedLongValue:int ->  unit = "unsignedLongValue" [@@bs.set]
    external longLongValue : testDictionary:('own) testDictionary_like ->  int = "longLongValue" [@@bs.get] 
    external setLongLongValue : testDictionary:('own) testDictionary_like -> longLongValue:int ->  unit = "longLongValue" [@@bs.set]
    external unsignedLongLongValue : testDictionary:('own) testDictionary_like ->  int = "unsignedLongLongValue" [@@bs.get] 
    external setUnsignedLongLongValue : testDictionary:('own) testDictionary_like -> unsignedLongLongValue:int ->  unit = "unsignedLongLongValue" [@@bs.set]
    external unrestrictedFloatValue : testDictionary:('own) testDictionary_like ->  float = "unrestrictedFloatValue" [@@bs.get] 
    external setUnrestrictedFloatValue : testDictionary:('own) testDictionary_like -> unrestrictedFloatValue:float ->  unit = "unrestrictedFloatValue" [@@bs.set]
    external floatValue : testDictionary:('own) testDictionary_like ->  float = "floatValue" [@@bs.get] 
    external setFloatValue : testDictionary:('own) testDictionary_like -> floatValue:float ->  unit = "floatValue" [@@bs.set]
    external unrestrictedDoubleValue : testDictionary:('own) testDictionary_like ->  float = "unrestrictedDoubleValue" [@@bs.get] 
    external setUnrestrictedDoubleValue : testDictionary:('own) testDictionary_like -> unrestrictedDoubleValue:float ->  unit = "unrestrictedDoubleValue" [@@bs.set]
    external doubleValue : testDictionary:('own) testDictionary_like ->  float = "doubleValue" [@@bs.get] 
    external setDoubleValue : testDictionary:('own) testDictionary_like -> doubleValue:float ->  unit = "doubleValue" [@@bs.set]
    external stringValue : testDictionary:('own) testDictionary_like ->  string = "stringValue" [@@bs.get] 
    external setStringValue : testDictionary:('own) testDictionary_like -> stringValue:string ->  unit = "stringValue" [@@bs.set]
    external usvstringValue : testDictionary:('own) testDictionary_like ->  string = "usvstringValue" [@@bs.get] 
    external setUsvstringValue : testDictionary:('own) testDictionary_like -> usvstringValue:string ->  unit = "usvstringValue" [@@bs.set]
    external enumValue : testDictionary:('own) testDictionary_like ->  string = "enumValue" [@@bs.get] 
    external setEnumValue : testDictionary:('own) testDictionary_like -> enumValue:string ->  unit = "enumValue" [@@bs.set]
    external interfaceValue : testDictionary:('own) testDictionary_like ->  blob = "interfaceValue" [@@bs.get] 
    external setInterfaceValue : testDictionary:('own) testDictionary_like -> interfaceValue:blob ->  unit = "interfaceValue" [@@bs.set]
    external anyValue : testDictionary:('own) testDictionary_like ->  'a442 = "anyValue" [@@bs.get] 
    external setAnyValue : testDictionary:('own) testDictionary_like -> anyValue:'a443 ->  unit = "anyValue" [@@bs.set]
    external objectValue : testDictionary:('own) testDictionary_like ->  'a444 = "objectValue" [@@bs.get] 
    external setObjectValue : testDictionary:('own) testDictionary_like -> objectValue:'a445 ->  unit = "objectValue" [@@bs.set]
    external dict : testDictionary:('own) testDictionary_like ->  testDictionaryDefaults = "dict" [@@bs.get] 
    external setDict : testDictionary:('own) testDictionary_like -> dict:testDictionaryDefaults ->  unit = "dict" [@@bs.set]
    external seqDict : testDictionary:('own) testDictionary_like ->  testDictionaryDefaults array = "seqDict" [@@bs.get] 
    external setSeqDict : testDictionary:('own) testDictionary_like -> seqDict:testDictionaryDefaults array ->  unit = "seqDict" [@@bs.set]
    external type_ : testDictionary:('own) testDictionary_like ->  string = "type" [@@bs.get] 
    external setType : testDictionary:('own) testDictionary_like -> type_:string ->  unit = "type" [@@bs.set]
    external nonRequiredNullable : testDictionary:('own) testDictionary_like ->  string option = "nonRequiredNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setNonRequiredNullable : testDictionary:('own) testDictionary_like -> nonRequiredNullable:string Js.null ->  unit = "nonRequiredNullable" [@@bs.set]
    external nonRequiredNullable2 : testDictionary:('own) testDictionary_like ->  string option = "nonRequiredNullable2" [@@bs.get] [@@bs.return null_to_opt]
    external setNonRequiredNullable2 : testDictionary:('own) testDictionary_like -> nonRequiredNullable2:string Js.null ->  unit = "nonRequiredNullable2" [@@bs.set]
    
    
end
 module TestDictionaryDefaults = struct
    
    
    external make : ?booleanValue:Js.boolean -> ?byteValue:int -> ?octetValue:int -> ?shortValue:int -> ?unsignedShortValue:int -> ?longValue:int -> ?unsignedLongValue:int -> ?longLongValue:int -> ?unsignedLongLongValue:int -> ?unrestrictedFloatValue:float -> ?floatValue:float -> ?unrestrictedDoubleValue:float -> ?doubleValue:float -> ?bytestringValue:string -> ?stringValue:string -> ?usvstringValue:string -> ?enumValue:string -> ?anyValue:'a446 -> ?nullableBooleanValue:Js.boolean Js.null -> ?nullableByteValue:int Js.null -> ?nullableOctetValue:int Js.null -> ?nullableShortValue:int Js.null -> ?nullableUnsignedShortValue:int Js.null -> ?nullableLongValue:int Js.null -> ?nullableUnsignedLongValue:int Js.null -> ?nullableLongLongValue:int Js.null -> ?nullableUnsignedLongLongValue:int Js.null -> ?nullableUnrestrictedFloatValue:float Js.null -> ?nullableFloatValue:float Js.null -> ?nullableUnrestrictedDoubleValue:float Js.null -> ?nullableDoubleValue:float Js.null -> ?nullableBytestringValue:string Js.null -> ?nullableStringValue:string Js.null -> ?nullableUsvstringValue:string Js.null -> ?nullableObjectValue:'a447 Js.null -> unit ->  testDictionaryDefaults = "" [@@bs.obj]
    external booleanValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  bool = "booleanValue" [@@bs.get] 
    external setBooleanValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> booleanValue:Js.boolean ->  unit = "booleanValue" [@@bs.set]
    external byteValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "byteValue" [@@bs.get] 
    external setByteValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> byteValue:int ->  unit = "byteValue" [@@bs.set]
    external octetValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "octetValue" [@@bs.get] 
    external setOctetValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> octetValue:int ->  unit = "octetValue" [@@bs.set]
    external shortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "shortValue" [@@bs.get] 
    external setShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> shortValue:int ->  unit = "shortValue" [@@bs.set]
    external unsignedShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "unsignedShortValue" [@@bs.get] 
    external setUnsignedShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> unsignedShortValue:int ->  unit = "unsignedShortValue" [@@bs.set]
    external longValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "longValue" [@@bs.get] 
    external setLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> longValue:int ->  unit = "longValue" [@@bs.set]
    external unsignedLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "unsignedLongValue" [@@bs.get] 
    external setUnsignedLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> unsignedLongValue:int ->  unit = "unsignedLongValue" [@@bs.set]
    external longLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "longLongValue" [@@bs.get] 
    external setLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> longLongValue:int ->  unit = "longLongValue" [@@bs.set]
    external unsignedLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int = "unsignedLongLongValue" [@@bs.get] 
    external setUnsignedLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> unsignedLongLongValue:int ->  unit = "unsignedLongLongValue" [@@bs.set]
    external unrestrictedFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float = "unrestrictedFloatValue" [@@bs.get] 
    external setUnrestrictedFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> unrestrictedFloatValue:float ->  unit = "unrestrictedFloatValue" [@@bs.set]
    external floatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float = "floatValue" [@@bs.get] 
    external setFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> floatValue:float ->  unit = "floatValue" [@@bs.set]
    external unrestrictedDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float = "UnrestrictedDoubleValue" [@@bs.get] 
    external setUnrestrictedDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> unrestrictedDoubleValue:float ->  unit = "UnrestrictedDoubleValue" [@@bs.set]
    external doubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float = "doubleValue" [@@bs.get] 
    external setDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> doubleValue:float ->  unit = "doubleValue" [@@bs.set]
    external bytestringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string = "bytestringValue" [@@bs.get] 
    external setBytestringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> bytestringValue:string ->  unit = "bytestringValue" [@@bs.set]
    external stringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string = "stringValue" [@@bs.get] 
    external setStringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> stringValue:string ->  unit = "stringValue" [@@bs.set]
    external usvstringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string = "usvstringValue" [@@bs.get] 
    external setUsvstringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> usvstringValue:string ->  unit = "usvstringValue" [@@bs.set]
    external enumValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string = "enumValue" [@@bs.get] 
    external setEnumValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> enumValue:string ->  unit = "enumValue" [@@bs.set]
    external anyValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  'a448 = "anyValue" [@@bs.get] 
    external setAnyValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> anyValue:'a449 ->  unit = "anyValue" [@@bs.set]
    external nullableBooleanValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  Js.boolean option = "nullableBooleanValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableBooleanValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableBooleanValue:Js.boolean Js.null ->  unit = "nullableBooleanValue" [@@bs.set]
    external nullableByteValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableByteValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableByteValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableByteValue:int Js.null ->  unit = "nullableByteValue" [@@bs.set]
    external nullableOctetValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableOctetValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableOctetValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableOctetValue:int Js.null ->  unit = "nullableOctetValue" [@@bs.set]
    external nullableShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableShortValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableShortValue:int Js.null ->  unit = "nullableShortValue" [@@bs.set]
    external nullableUnsignedShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableUnsignedShortValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedShortValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUnsignedShortValue:int Js.null ->  unit = "nullableUnsignedShortValue" [@@bs.set]
    external nullableLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableLongValue:int Js.null ->  unit = "nullableLongValue" [@@bs.set]
    external nullableUnsignedLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableUnsignedLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUnsignedLongValue:int Js.null ->  unit = "nullableUnsignedLongValue" [@@bs.set]
    external nullableLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableLongLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableLongLongValue:int Js.null ->  unit = "nullableLongLongValue" [@@bs.set]
    external nullableUnsignedLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  int option = "nullableUnsignedLongLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedLongLongValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUnsignedLongLongValue:int Js.null ->  unit = "nullableUnsignedLongLongValue" [@@bs.set]
    external nullableUnrestrictedFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float option = "nullableUnrestrictedFloatValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnrestrictedFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUnrestrictedFloatValue:float Js.null ->  unit = "nullableUnrestrictedFloatValue" [@@bs.set]
    external nullableFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float option = "nullableFloatValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableFloatValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableFloatValue:float Js.null ->  unit = "nullableFloatValue" [@@bs.set]
    external nullableUnrestrictedDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float option = "nullableUnrestrictedDoubleValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnrestrictedDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUnrestrictedDoubleValue:float Js.null ->  unit = "nullableUnrestrictedDoubleValue" [@@bs.set]
    external nullableDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  float option = "nullableDoubleValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableDoubleValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableDoubleValue:float Js.null ->  unit = "nullableDoubleValue" [@@bs.set]
    external nullableBytestringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string option = "nullableBytestringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableBytestringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableBytestringValue:string Js.null ->  unit = "nullableBytestringValue" [@@bs.set]
    external nullableStringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string option = "nullableStringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableStringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableStringValue:string Js.null ->  unit = "nullableStringValue" [@@bs.set]
    external nullableUsvstringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  string option = "nullableUsvstringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUsvstringValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableUsvstringValue:string Js.null ->  unit = "nullableUsvstringValue" [@@bs.set]
    external nullableObjectValue : testDictionaryDefaults:('own) testDictionaryDefaults_like ->  'a450 option = "nullableObjectValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableObjectValue : testDictionaryDefaults:('own) testDictionaryDefaults_like -> nullableObjectValue:'a451 Js.null ->  unit = "nullableObjectValue" [@@bs.set]
    
    
end
 module TextDecoderOptions = struct
    
    
    external make : ?fatal:Js.boolean -> unit ->  textDecoderOptions = "" [@@bs.obj]
    external fatal : textDecoderOptions:('own) textDecoderOptions_like ->  bool = "fatal" [@@bs.get] 
    external setFatal : textDecoderOptions:('own) textDecoderOptions_like -> fatal:Js.boolean ->  unit = "fatal" [@@bs.set]
    
    
end
 module WorkletOptions = struct
    
    
    external make : ?credentials:string -> unit ->  workletOptions = "" [@@bs.obj]
    external credentials : workletOptions:('own) workletOptions_like ->  string = "credentials" [@@bs.get] 
    external setCredentials : workletOptions:('own) workletOptions_like -> credentials:string ->  unit = "credentials" [@@bs.set]
    
    
end
 module DOMPointInit = struct
    
    
    external make : ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit ->  dOMPointInit = "" [@@bs.obj]
    external x : dOMPointInit:('own) dOMPointInit_like ->  float = "x" [@@bs.get] 
    external setX : dOMPointInit:('own) dOMPointInit_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMPointInit:('own) dOMPointInit_like ->  float = "y" [@@bs.get] 
    external setY : dOMPointInit:('own) dOMPointInit_like -> y:float ->  unit = "y" [@@bs.set]
    external z : dOMPointInit:('own) dOMPointInit_like ->  float = "z" [@@bs.get] 
    external setZ : dOMPointInit:('own) dOMPointInit_like -> z:float ->  unit = "z" [@@bs.set]
    external w : dOMPointInit:('own) dOMPointInit_like ->  float = "w" [@@bs.get] 
    external setW : dOMPointInit:('own) dOMPointInit_like -> w:float ->  unit = "w" [@@bs.set]
    
    
end
 module DOMQuadInit = struct
    
    
    external make : ?p1:(_) dOMPointInit_like -> ?p2:(_) dOMPointInit_like -> ?p3:(_) dOMPointInit_like -> ?p4:(_) dOMPointInit_like -> unit ->  dOMQuadInit = "" [@@bs.obj]
    external p1 : dOMQuadInit:('own) dOMQuadInit_like ->  dOMPointInit = "p1" [@@bs.get] 
    external setP1 : dOMQuadInit:('own) dOMQuadInit_like -> p1:dOMPointInit ->  unit = "p1" [@@bs.set]
    external p2 : dOMQuadInit:('own) dOMQuadInit_like ->  dOMPointInit = "p2" [@@bs.get] 
    external setP2 : dOMQuadInit:('own) dOMQuadInit_like -> p2:dOMPointInit ->  unit = "p2" [@@bs.set]
    external p3 : dOMQuadInit:('own) dOMQuadInit_like ->  dOMPointInit = "p3" [@@bs.get] 
    external setP3 : dOMQuadInit:('own) dOMQuadInit_like -> p3:dOMPointInit ->  unit = "p3" [@@bs.set]
    external p4 : dOMQuadInit:('own) dOMQuadInit_like ->  dOMPointInit = "p4" [@@bs.get] 
    external setP4 : dOMQuadInit:('own) dOMQuadInit_like -> p4:dOMPointInit ->  unit = "p4" [@@bs.set]
    
    
end
 module RequestInit = struct
    
    
    external make : ?method_:string -> ?headers:'a452 -> ?body:'a453 Js.null -> ?referrer:string -> ?referrerPolicy:string -> ?mode:string -> ?credentials:string -> ?cache:string -> ?redirect:string -> ?integrity:string -> ?window:'a454 -> unit ->  requestInit = "" [@@bs.obj]
    external method_ : requestInit:('own) requestInit_like ->  string = "method" [@@bs.get] 
    external setMethod : requestInit:('own) requestInit_like -> method_:string ->  unit = "method" [@@bs.set]
    external headers : requestInit:('own) requestInit_like ->  'a455 = "headers" [@@bs.get] 
    external setHeaders : requestInit:('own) requestInit_like -> headers:'a456 ->  unit = "headers" [@@bs.set]
    external body : requestInit:('own) requestInit_like ->  'a457 option = "body" [@@bs.get] [@@bs.return null_to_opt]
    external setBody : requestInit:('own) requestInit_like -> body:'a458 Js.null ->  unit = "body" [@@bs.set]
    external referrer : requestInit:('own) requestInit_like ->  string = "referrer" [@@bs.get] 
    external setReferrer : requestInit:('own) requestInit_like -> referrer:string ->  unit = "referrer" [@@bs.set]
    external referrerPolicy : requestInit:('own) requestInit_like ->  string = "referrerPolicy" [@@bs.get] 
    external setReferrerPolicy : requestInit:('own) requestInit_like -> referrerPolicy:string ->  unit = "referrerPolicy" [@@bs.set]
    external mode : requestInit:('own) requestInit_like ->  string = "mode" [@@bs.get] 
    external setMode : requestInit:('own) requestInit_like -> mode:string ->  unit = "mode" [@@bs.set]
    external credentials : requestInit:('own) requestInit_like ->  string = "credentials" [@@bs.get] 
    external setCredentials : requestInit:('own) requestInit_like -> credentials:string ->  unit = "credentials" [@@bs.set]
    external cache : requestInit:('own) requestInit_like ->  string = "cache" [@@bs.get] 
    external setCache : requestInit:('own) requestInit_like -> cache:string ->  unit = "cache" [@@bs.set]
    external redirect : requestInit:('own) requestInit_like ->  string = "redirect" [@@bs.get] 
    external setRedirect : requestInit:('own) requestInit_like -> redirect:string ->  unit = "redirect" [@@bs.set]
    external integrity : requestInit:('own) requestInit_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : requestInit:('own) requestInit_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external window : requestInit:('own) requestInit_like ->  'a459 = "window" [@@bs.get] 
    external setWindow : requestInit:('own) requestInit_like -> window:'a460 ->  unit = "window" [@@bs.set]
    
    
end
 module ElementCreationOptions = struct
    
    
    external make : ?is:string -> unit ->  elementCreationOptions = "" [@@bs.obj]
    external is : elementCreationOptions:('own) elementCreationOptions_like ->  string = "is" [@@bs.get] 
    external setIs : elementCreationOptions:('own) elementCreationOptions_like -> is:string ->  unit = "is" [@@bs.set]
    
    
end
 module ResponseInit = struct
    
    
    external make : ?status:int -> ?statusText:string -> ?headers:'a461 -> unit ->  responseInit = "" [@@bs.obj]
    external status : responseInit:('own) responseInit_like ->  int = "status" [@@bs.get] 
    external setStatus : responseInit:('own) responseInit_like -> status:int ->  unit = "status" [@@bs.set]
    external statusText : responseInit:('own) responseInit_like ->  string = "statusText" [@@bs.get] 
    external setStatusText : responseInit:('own) responseInit_like -> statusText:string ->  unit = "statusText" [@@bs.set]
    external headers : responseInit:('own) responseInit_like ->  'a462 = "headers" [@@bs.get] 
    external setHeaders : responseInit:('own) responseInit_like -> headers:'a463 ->  unit = "headers" [@@bs.set]
    
    
end
 module BluetoothDataFilterInit = struct
    
    
    external make : ?dataPrefix:int array -> ?mask:int array -> unit ->  bluetoothDataFilterInit = "" [@@bs.obj]
    external dataPrefix : bluetoothDataFilterInit:('own) bluetoothDataFilterInit_like ->  int array = "dataPrefix" [@@bs.get] 
    external setDataPrefix : bluetoothDataFilterInit:('own) bluetoothDataFilterInit_like -> dataPrefix:int array ->  unit = "dataPrefix" [@@bs.set]
    external mask : bluetoothDataFilterInit:('own) bluetoothDataFilterInit_like ->  int array = "mask" [@@bs.get] 
    external setMask : bluetoothDataFilterInit:('own) bluetoothDataFilterInit_like -> mask:int array ->  unit = "mask" [@@bs.set]
    
    
end
 module BluetoothLEScanFilterInit = struct
    
    
    external make : ?services:'a464 array -> ?name:string -> ?namePrefix:string -> ?manufacturerData:'a465 -> ?serviceData:'a466 -> unit ->  bluetoothLEScanFilterInit = "" [@@bs.obj]
    external services : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like ->  'a467 array = "services" [@@bs.get] 
    external setServices : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like -> services:'a468 array ->  unit = "services" [@@bs.set]
    external name : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like ->  string = "name" [@@bs.get] 
    external setName : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like -> name:string ->  unit = "name" [@@bs.set]
    external namePrefix : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like ->  string = "namePrefix" [@@bs.get] 
    external setNamePrefix : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like -> namePrefix:string ->  unit = "namePrefix" [@@bs.set]
    external manufacturerData : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like ->  'a469 = "manufacturerData" [@@bs.get] 
    external setManufacturerData : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like -> manufacturerData:'a470 ->  unit = "manufacturerData" [@@bs.set]
    external serviceData : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like ->  'a471 = "serviceData" [@@bs.get] 
    external setServiceData : bluetoothLEScanFilterInit:('own) bluetoothLEScanFilterInit_like -> serviceData:'a472 ->  unit = "serviceData" [@@bs.set]
    
    
end
 module RequestDeviceOptions = struct
    
    
    external make : ?filters:(_) bluetoothLEScanFilterInit_like array -> ?optionalServices:'a473 array -> ?acceptAllDevices:Js.boolean -> unit ->  requestDeviceOptions = "" [@@bs.obj]
    external filters : requestDeviceOptions:('own) requestDeviceOptions_like ->  bluetoothLEScanFilterInit array = "filters" [@@bs.get] 
    external setFilters : requestDeviceOptions:('own) requestDeviceOptions_like -> filters:bluetoothLEScanFilterInit array ->  unit = "filters" [@@bs.set]
    external optionalServices : requestDeviceOptions:('own) requestDeviceOptions_like ->  'a474 array = "optionalServices" [@@bs.get] 
    external setOptionalServices : requestDeviceOptions:('own) requestDeviceOptions_like -> optionalServices:'a475 array ->  unit = "optionalServices" [@@bs.set]
    external acceptAllDevices : requestDeviceOptions:('own) requestDeviceOptions_like ->  bool = "acceptAllDevices" [@@bs.get] 
    external setAcceptAllDevices : requestDeviceOptions:('own) requestDeviceOptions_like -> acceptAllDevices:Js.boolean ->  unit = "acceptAllDevices" [@@bs.set]
    
    
end
 module MutationObserverInit = struct
    
    
    external make : ?childList:Js.boolean -> ?attributes:Js.boolean -> ?characterData:Js.boolean -> ?subtree:Js.boolean -> ?attributeOldValue:Js.boolean -> ?characterDataOldValue:Js.boolean -> ?attributeFilter:string array -> unit ->  mutationObserverInit = "" [@@bs.obj]
    external childList : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "childList" [@@bs.get] 
    external setChildList : mutationObserverInit:('own) mutationObserverInit_like -> childList:Js.boolean ->  unit = "childList" [@@bs.set]
    external attributes : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "attributes" [@@bs.get] 
    external setAttributes : mutationObserverInit:('own) mutationObserverInit_like -> attributes:Js.boolean ->  unit = "attributes" [@@bs.set]
    external characterData : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "characterData" [@@bs.get] 
    external setCharacterData : mutationObserverInit:('own) mutationObserverInit_like -> characterData:Js.boolean ->  unit = "characterData" [@@bs.set]
    external subtree : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "subtree" [@@bs.get] 
    external setSubtree : mutationObserverInit:('own) mutationObserverInit_like -> subtree:Js.boolean ->  unit = "subtree" [@@bs.set]
    external attributeOldValue : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "attributeOldValue" [@@bs.get] 
    external setAttributeOldValue : mutationObserverInit:('own) mutationObserverInit_like -> attributeOldValue:Js.boolean ->  unit = "attributeOldValue" [@@bs.set]
    external characterDataOldValue : mutationObserverInit:('own) mutationObserverInit_like ->  bool = "characterDataOldValue" [@@bs.get] 
    external setCharacterDataOldValue : mutationObserverInit:('own) mutationObserverInit_like -> characterDataOldValue:Js.boolean ->  unit = "characterDataOldValue" [@@bs.set]
    external attributeFilter : mutationObserverInit:('own) mutationObserverInit_like ->  string array = "attributeFilter" [@@bs.get] 
    external setAttributeFilter : mutationObserverInit:('own) mutationObserverInit_like -> attributeFilter:string array ->  unit = "attributeFilter" [@@bs.set]
    
    
end
 module EventInit = struct
    
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> unit ->  eventInit = "" [@@bs.obj]
    external bubbles : eventInit:('own) eventInit_like ->  bool = "bubbles" [@@bs.get] 
    external setBubbles : eventInit:('own) eventInit_like -> bubbles:Js.boolean ->  unit = "bubbles" [@@bs.set]
    external cancelable : eventInit:('own) eventInit_like ->  bool = "cancelable" [@@bs.get] 
    external setCancelable : eventInit:('own) eventInit_like -> cancelable:Js.boolean ->  unit = "cancelable" [@@bs.set]
    
    
end
 module ScrollOptions = struct
    
    
    external make : ?behavior:string -> unit ->  scrollOptions = "" [@@bs.obj]
    external behavior : scrollOptions:('own) scrollOptions_like ->  string = "behavior" [@@bs.get] 
    external setBehavior : scrollOptions:('own) scrollOptions_like -> behavior:string ->  unit = "behavior" [@@bs.set]
    
    
end
 module BlobPropertyBag = struct
    
    
    external make : ?type_:string -> unit ->  blobPropertyBag = "" [@@bs.obj]
    external type_ : blobPropertyBag:('own) blobPropertyBag_like ->  string = "type" [@@bs.get] 
    external setType : blobPropertyBag:('own) blobPropertyBag_like -> type_:string ->  unit = "type" [@@bs.set]
    
    
end
 module NodeFilter = struct
    
    
    external make : acceptNode:((_) node_like -> int [@bs]) -> unit ->  nodeFilter = "" [@@bs.obj]
    external acceptNode : node:(_) node_like ->  int = "acceptNode" [@@bs.send.pipe: ('own) nodeFilter_like] 
    
    let filter_accept  =
      
      1
    
    let filter_reject  =
      
      2
    
    let filter_skip  =
      
      3
    
    let show_all  =
      
      4294967295
    
    let show_element  =
      
      1
    
    let show_attribute  =
      
      2
    
    let show_text  =
      
      4
    
    let show_cdata_section  =
      
      8
    
    let show_entity_reference  =
      
      16
    
    let show_entity  =
      
      32
    
    let show_processing_instruction  =
      
      64
    
    let show_comment  =
      
      128
    
    let show_document  =
      
      256
    
    let show_document_type  =
      
      512
    
    let show_document_fragment  =
      
      1024
    
    let show_notation  =
      
      2048
    
end
 module EventListener = struct
    
    
    external make : handleEvent:((_) event_like -> unit [@bs]) -> unit ->  eventListener = "" [@@bs.obj]
    external handleEvent : event:(_) event_like ->  unit = "handleEvent" [@@bs.send.pipe: ('own) eventListener_like] 
    
    
end
 module EventSource = struct
    include EventTarget
    
    external url : eventSource:('own) eventSource_like ->  string = "url" [@@bs.get] 
    external withCredentials : eventSource:('own) eventSource_like ->  bool = "withCredentials" [@@bs.get] 
    external readyState : eventSource:('own) eventSource_like ->  int = "readyState" [@@bs.get] 
    external onopen : eventSource:('own) eventSource_like ->  (event -> 'a476 [@bs]) option = "onopen" [@@bs.get] [@@bs.return null_to_opt]
    external setOnopen : eventSource:('own) eventSource_like -> onopen:(event -> 'a477 [@bs]) Js.null ->  unit = "onopen" [@@bs.set]
    external onmessage : eventSource:('own) eventSource_like ->  (event -> 'a478 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : eventSource:('own) eventSource_like -> onmessage:(event -> 'a479 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onerror : eventSource:('own) eventSource_like ->  (event -> 'a480 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : eventSource:('own) eventSource_like -> onerror:(event -> 'a481 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external close :  unit = "close" [@@bs.send.pipe: ('own) eventSource_like] 
    
    let connecting  =
      
      0
    
    let open_  =
      
      1
    
    let closed_  =
      
      2
    
end
 module CSSStyleRule = struct
    include CSSRule
    
    external style : cSSStyleRule:('own) cSSStyleRule_like ->  cSSStyleDeclaration = "style" [@@bs.get] 
    
    
end
 module CSSFontFaceRule = struct
    include CSSRule
    
    
    
    
end
 module UIEvent = struct
    include Event
    
    external view : uIEvent:('own) uIEvent_like ->  window option = "view" [@@bs.get] [@@bs.return null_to_opt]
    external detail : uIEvent:('own) uIEvent_like ->  int = "detail" [@@bs.get] 
    external initUIEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) window_like Js.null -> detailArg:int ->  unit = "initUIEvent" [@@bs.send.pipe: ('own) uIEvent_like] 
    
    
end
 module GamepadEvent = struct
    include Event
    
    external gamepad : gamepadEvent:('own) gamepadEvent_like ->  gamepad = "gamepad" [@@bs.get] 
    
    
end
 module HTMLOptionsCollection = struct
    include HTMLCollection
    
    external length : hTMLOptionsCollection:('own) hTMLOptionsCollection_like ->  int = "length" [@@bs.get] 
    external setLength : hTMLOptionsCollection:('own) hTMLOptionsCollection_like -> length:int ->  unit = "length" [@@bs.set]
    external selectedIndex : hTMLOptionsCollection:('own) hTMLOptionsCollection_like ->  int = "selectedIndex" [@@bs.get] 
    external setSelectedIndex : hTMLOptionsCollection:('own) hTMLOptionsCollection_like -> selectedIndex:int ->  unit = "selectedIndex" [@@bs.set]
    external none : hTMLOptionsCollection:('own) hTMLOptionsCollection_like -> index:int -> option:(_) hTMLOptionElement_like Js.null ->  unit = "" [@@bs.set_index] 
    external add : element:'a482 -> ?before:'a483 Js.undefined ->  unit = "add" [@@bs.send.pipe: ('own) hTMLOptionsCollection_like] 
    external remove : index:int ->  unit = "remove" [@@bs.send.pipe: ('own) hTMLOptionsCollection_like] 
    
    let add ~element ~before hTMLOptionsCollection =
      let conv_element = function
        | `HTMLOptionElement (x: (_) hTMLOptionElement_like) -> Obj.magic x
        | `HTMLOptGroupElement (x: (_) hTMLOptGroupElement_like) -> Obj.magic x
         in
      let element = conv_element element in
      let conv_before = function
        | `HTMLElement_Null (x: (_) hTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_before = access_undef conv_before in
      let before = conv_before before in
      let return = add ~element ~before hTMLOptionsCollection in
      return
    
    let add ~element ?before hTMLOptionsCollection =
      let conv_before = Js_undefined.from_opt in
      let before = conv_before before in
      add ~element ~before hTMLOptionsCollection
    
end
 module DOMMatrix = struct
    include DOMMatrixReadOnly
    
    external a : dOMMatrix:('own) dOMMatrix_like ->  float = "a" [@@bs.get] 
    external setA : dOMMatrix:('own) dOMMatrix_like -> a:float ->  unit = "a" [@@bs.set]
    external b : dOMMatrix:('own) dOMMatrix_like ->  float = "b" [@@bs.get] 
    external setB : dOMMatrix:('own) dOMMatrix_like -> b:float ->  unit = "b" [@@bs.set]
    external c : dOMMatrix:('own) dOMMatrix_like ->  float = "c" [@@bs.get] 
    external setC : dOMMatrix:('own) dOMMatrix_like -> c:float ->  unit = "c" [@@bs.set]
    external d : dOMMatrix:('own) dOMMatrix_like ->  float = "d" [@@bs.get] 
    external setD : dOMMatrix:('own) dOMMatrix_like -> d:float ->  unit = "d" [@@bs.set]
    external e : dOMMatrix:('own) dOMMatrix_like ->  float = "e" [@@bs.get] 
    external setE : dOMMatrix:('own) dOMMatrix_like -> e:float ->  unit = "e" [@@bs.set]
    external f : dOMMatrix:('own) dOMMatrix_like ->  float = "f" [@@bs.get] 
    external setF : dOMMatrix:('own) dOMMatrix_like -> f:float ->  unit = "f" [@@bs.set]
    external m11 : dOMMatrix:('own) dOMMatrix_like ->  float = "m11" [@@bs.get] 
    external setM11 : dOMMatrix:('own) dOMMatrix_like -> m11:float ->  unit = "m11" [@@bs.set]
    external m12 : dOMMatrix:('own) dOMMatrix_like ->  float = "m12" [@@bs.get] 
    external setM12 : dOMMatrix:('own) dOMMatrix_like -> m12:float ->  unit = "m12" [@@bs.set]
    external m13 : dOMMatrix:('own) dOMMatrix_like ->  float = "m13" [@@bs.get] 
    external setM13 : dOMMatrix:('own) dOMMatrix_like -> m13:float ->  unit = "m13" [@@bs.set]
    external m14 : dOMMatrix:('own) dOMMatrix_like ->  float = "m14" [@@bs.get] 
    external setM14 : dOMMatrix:('own) dOMMatrix_like -> m14:float ->  unit = "m14" [@@bs.set]
    external m21 : dOMMatrix:('own) dOMMatrix_like ->  float = "m21" [@@bs.get] 
    external setM21 : dOMMatrix:('own) dOMMatrix_like -> m21:float ->  unit = "m21" [@@bs.set]
    external m22 : dOMMatrix:('own) dOMMatrix_like ->  float = "m22" [@@bs.get] 
    external setM22 : dOMMatrix:('own) dOMMatrix_like -> m22:float ->  unit = "m22" [@@bs.set]
    external m23 : dOMMatrix:('own) dOMMatrix_like ->  float = "m23" [@@bs.get] 
    external setM23 : dOMMatrix:('own) dOMMatrix_like -> m23:float ->  unit = "m23" [@@bs.set]
    external m24 : dOMMatrix:('own) dOMMatrix_like ->  float = "m24" [@@bs.get] 
    external setM24 : dOMMatrix:('own) dOMMatrix_like -> m24:float ->  unit = "m24" [@@bs.set]
    external m31 : dOMMatrix:('own) dOMMatrix_like ->  float = "m31" [@@bs.get] 
    external setM31 : dOMMatrix:('own) dOMMatrix_like -> m31:float ->  unit = "m31" [@@bs.set]
    external m32 : dOMMatrix:('own) dOMMatrix_like ->  float = "m32" [@@bs.get] 
    external setM32 : dOMMatrix:('own) dOMMatrix_like -> m32:float ->  unit = "m32" [@@bs.set]
    external m33 : dOMMatrix:('own) dOMMatrix_like ->  float = "m33" [@@bs.get] 
    external setM33 : dOMMatrix:('own) dOMMatrix_like -> m33:float ->  unit = "m33" [@@bs.set]
    external m34 : dOMMatrix:('own) dOMMatrix_like ->  float = "m34" [@@bs.get] 
    external setM34 : dOMMatrix:('own) dOMMatrix_like -> m34:float ->  unit = "m34" [@@bs.set]
    external m41 : dOMMatrix:('own) dOMMatrix_like ->  float = "m41" [@@bs.get] 
    external setM41 : dOMMatrix:('own) dOMMatrix_like -> m41:float ->  unit = "m41" [@@bs.set]
    external m42 : dOMMatrix:('own) dOMMatrix_like ->  float = "m42" [@@bs.get] 
    external setM42 : dOMMatrix:('own) dOMMatrix_like -> m42:float ->  unit = "m42" [@@bs.set]
    external m43 : dOMMatrix:('own) dOMMatrix_like ->  float = "m43" [@@bs.get] 
    external setM43 : dOMMatrix:('own) dOMMatrix_like -> m43:float ->  unit = "m43" [@@bs.set]
    external m44 : dOMMatrix:('own) dOMMatrix_like ->  float = "m44" [@@bs.get] 
    external setM44 : dOMMatrix:('own) dOMMatrix_like -> m44:float ->  unit = "m44" [@@bs.set]
    external fromMatrix : ?other:(_) dOMMatrixInit_like Js.undefined ->  dOMMatrix = "fromMatrix" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external invertSelf :  dOMMatrix = "invertSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external multiplySelf : ?other:(_) dOMMatrixInit_like Js.undefined ->  dOMMatrix = "multiplySelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external preMultiplySelf : ?other:(_) dOMMatrixInit_like Js.undefined ->  dOMMatrix = "preMultiplySelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external rotateAxisAngleSelf : ?x:float Js.undefined -> ?y:float Js.undefined -> ?z:float Js.undefined -> ?angle:float Js.undefined ->  dOMMatrix = "rotateAxisAngleSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external rotateFromVectorSelf : ?x:float Js.undefined -> ?y:float Js.undefined ->  dOMMatrix = "rotateFromVectorSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external rotateSelf : ?rotX:float Js.undefined -> ?rotY:float Js.undefined -> ?rotZ:float Js.undefined ->  dOMMatrix = "rotateSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external scale3dSelf : ?scale:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  dOMMatrix = "scale3dSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external scaleSelf : ?scaleX:float Js.undefined -> ?scaleY:float Js.undefined -> ?scaleZ:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  dOMMatrix = "scaleSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external skewXSelf : ?sx:float Js.undefined ->  dOMMatrix = "skewXSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external skewYSelf : ?sy:float Js.undefined ->  dOMMatrix = "skewYSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    external translateSelf : ?tx:float Js.undefined -> ?ty:float Js.undefined -> ?tz:float Js.undefined ->  dOMMatrix = "translateSelf" [@@bs.send.pipe: ('own) dOMMatrix_like] 
    
    let fromMatrix ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromMatrix ~other dOMMatrix
    
    let multiplySelf ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      multiplySelf ~other dOMMatrix
    
    let preMultiplySelf ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      preMultiplySelf ~other dOMMatrix
    
    let rotateAxisAngleSelf ?x ?y ?z ?angle dOMMatrix =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      let conv_z = Js_undefined.from_opt in
      let z = conv_z z in
      let conv_angle = Js_undefined.from_opt in
      let angle = conv_angle angle in
      rotateAxisAngleSelf ~x ~y ~z ~angle dOMMatrix
    
    let rotateFromVectorSelf ?x ?y dOMMatrix =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      rotateFromVectorSelf ~x ~y dOMMatrix
    
    let rotateSelf ?rotX ?rotY ?rotZ dOMMatrix =
      let conv_rotX = Js_undefined.from_opt in
      let rotX = conv_rotX rotX in
      let conv_rotY = Js_undefined.from_opt in
      let rotY = conv_rotY rotY in
      let conv_rotZ = Js_undefined.from_opt in
      let rotZ = conv_rotZ rotZ in
      rotateSelf ~rotX ~rotY ~rotZ dOMMatrix
    
    let scale3dSelf ?scale ?originX ?originY ?originZ dOMMatrix =
      let conv_scale = Js_undefined.from_opt in
      let scale = conv_scale scale in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale3dSelf ~scale ~originX ~originY ~originZ dOMMatrix
    
    let scaleSelf ?scaleX ?scaleY ?scaleZ ?originX ?originY ?originZ dOMMatrix =
      let conv_scaleX = Js_undefined.from_opt in
      let scaleX = conv_scaleX scaleX in
      let conv_scaleY = Js_undefined.from_opt in
      let scaleY = conv_scaleY scaleY in
      let conv_scaleZ = Js_undefined.from_opt in
      let scaleZ = conv_scaleZ scaleZ in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scaleSelf ~scaleX ~scaleY ~scaleZ ~originX ~originY ~originZ dOMMatrix
    
    let skewXSelf ?sx dOMMatrix =
      let conv_sx = Js_undefined.from_opt in
      let sx = conv_sx sx in
      skewXSelf ~sx dOMMatrix
    
    let skewYSelf ?sy dOMMatrix =
      let conv_sy = Js_undefined.from_opt in
      let sy = conv_sy sy in
      skewYSelf ~sy dOMMatrix
    
    let translateSelf ?tx ?ty ?tz dOMMatrix =
      let conv_tx = Js_undefined.from_opt in
      let tx = conv_tx tx in
      let conv_ty = Js_undefined.from_opt in
      let ty = conv_ty ty in
      let conv_tz = Js_undefined.from_opt in
      let tz = conv_tz tz in
      translateSelf ~tx ~ty ~tz dOMMatrix
    
end
 module WebGLFramebuffer = struct
    include WebGLObject
    
    
    
    
end
 module ServiceWorkerRegistration = struct
    include EventTarget
    
    external installing : serviceWorkerRegistration:('own) serviceWorkerRegistration_like ->  serviceWorker option = "installing" [@@bs.get] [@@bs.return null_to_opt]
    external waiting : serviceWorkerRegistration:('own) serviceWorkerRegistration_like ->  serviceWorker option = "waiting" [@@bs.get] [@@bs.return null_to_opt]
    external active : serviceWorkerRegistration:('own) serviceWorkerRegistration_like ->  serviceWorker option = "active" [@@bs.get] [@@bs.return null_to_opt]
    external scope : serviceWorkerRegistration:('own) serviceWorkerRegistration_like ->  string = "scope" [@@bs.get] 
    
    
end
 module ServiceWorkerContainer = struct
    include EventTarget
    
    external controller : serviceWorkerContainer:('own) serviceWorkerContainer_like ->  serviceWorker option = "controller" [@@bs.get] [@@bs.return null_to_opt]
    external register : scriptURL:string -> ?options:(_) registrationOptions_like Js.undefined ->  serviceWorkerRegistration Js.Promise.t = "register" [@@bs.send.pipe: ('own) serviceWorkerContainer_like] 
    
    let register ~scriptURL ?options serviceWorkerContainer =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      register ~scriptURL ~options serviceWorkerContainer
    
end
 module ErrorEvent = struct
    include Event
    
    external message : errorEvent:('own) errorEvent_like ->  string = "message" [@@bs.get] 
    external filename : errorEvent:('own) errorEvent_like ->  string = "filename" [@@bs.get] 
    external lineno : errorEvent:('own) errorEvent_like ->  int = "lineno" [@@bs.get] 
    external colno : errorEvent:('own) errorEvent_like ->  int = "colno" [@@bs.get] 
    external error : errorEvent:('own) errorEvent_like ->  'a484 = "error" [@@bs.get] 
    
    
end
 module PermissionStatus = struct
    include EventTarget
    
    external state : permissionStatus:('own) permissionStatus_like ->  string = "state" [@@bs.get] 
    external onchange : permissionStatus:('own) permissionStatus_like ->  (event -> 'a485 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : permissionStatus:('own) permissionStatus_like -> onchange:(event -> 'a486 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    
    
end
 module MessageEvent = struct
    include Event
    
    external data : messageEvent:('own) messageEvent_like ->  'a487 = "data" [@@bs.get] 
    external origin : messageEvent:('own) messageEvent_like ->  string = "origin" [@@bs.get] 
    external lastEventId : messageEvent:('own) messageEvent_like ->  string = "lastEventId" [@@bs.get] 
    
    
end
 module BeforeUnloadEvent = struct
    include Event
    
    external returnValue : beforeUnloadEvent:('own) beforeUnloadEvent_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : beforeUnloadEvent:('own) beforeUnloadEvent_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    
    
end
 module VR = struct
    include EventTarget
    
    external getDisplays :  vRDisplay array Js.Promise.t = "getDisplays" [@@bs.send.pipe: ('own) vR_like] 
    
    
end
 module DOMRect = struct
    include DOMRectReadOnly
    
    external x : dOMRect:('own) dOMRect_like ->  float = "x" [@@bs.get] 
    external setX : dOMRect:('own) dOMRect_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMRect:('own) dOMRect_like ->  float = "y" [@@bs.get] 
    external setY : dOMRect:('own) dOMRect_like -> y:float ->  unit = "y" [@@bs.set]
    external width : dOMRect:('own) dOMRect_like ->  float = "width" [@@bs.get] 
    external setWidth : dOMRect:('own) dOMRect_like -> width:float ->  unit = "width" [@@bs.set]
    external height : dOMRect:('own) dOMRect_like ->  float = "height" [@@bs.get] 
    external setHeight : dOMRect:('own) dOMRect_like -> height:float ->  unit = "height" [@@bs.set]
    
    
end
 module BluetoothDevice = struct
    include EventTarget
    
    external ongattserverdisconnected : bluetoothDevice:('own) bluetoothDevice_like ->  (event -> 'a488 [@bs]) option = "ongattserverdisconnected" [@@bs.get] [@@bs.return null_to_opt]
    external setOngattserverdisconnected : bluetoothDevice:('own) bluetoothDevice_like -> ongattserverdisconnected:(event -> 'a489 [@bs]) Js.null ->  unit = "ongattserverdisconnected" [@@bs.set]
    external id : bluetoothDevice:('own) bluetoothDevice_like ->  string = "id" [@@bs.get] 
    external name : bluetoothDevice:('own) bluetoothDevice_like ->  string option = "name" [@@bs.get] [@@bs.return null_to_opt]
    external gatt : bluetoothDevice:('own) bluetoothDevice_like ->  bluetoothRemoteGATTServer option = "gatt" [@@bs.get] [@@bs.return null_to_opt]
    external watchingAdvertisements : bluetoothDevice:('own) bluetoothDevice_like ->  bool = "watchingAdvertisements" [@@bs.get] 
    external unwatchAdvertisements :  unit = "unwatchAdvertisements" [@@bs.send.pipe: ('own) bluetoothDevice_like] 
    external watchAdvertisements :  unit Js.Promise.t = "watchAdvertisements" [@@bs.send.pipe: ('own) bluetoothDevice_like] 
    
    
end
 module CSSImportRule = struct
    include CSSRule
    
    
    
    
end
 module RadioNodeList = struct
    include NodeList
    
    external value : radioNodeList:('own) radioNodeList_like ->  string = "value" [@@bs.get] 
    external setValue : radioNodeList:('own) radioNodeList_like -> value:string ->  unit = "value" [@@bs.set]
    
    
end
 module File = struct
    include Blob
    
    external name : file:('own) file_like ->  string = "name" [@@bs.get] 
    external lastModified : file:('own) file_like ->  int = "lastModified" [@@bs.get] 
    
    
end
 module StorageEvent = struct
    include Event
    
    external key : storageEvent:('own) storageEvent_like ->  string option = "key" [@@bs.get] [@@bs.return null_to_opt]
    external oldValue : storageEvent:('own) storageEvent_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    external newValue : storageEvent:('own) storageEvent_like ->  string option = "newValue" [@@bs.get] [@@bs.return null_to_opt]
    external url : storageEvent:('own) storageEvent_like ->  string = "url" [@@bs.get] 
    external storageArea : storageEvent:('own) storageEvent_like ->  storage option = "storageArea" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module Node = struct
    include EventTarget
    
    external nodeType : node:('own) node_like ->  int = "nodeType" [@@bs.get] 
    external nodeName : node:('own) node_like ->  string = "nodeName" [@@bs.get] 
    external baseURI : node:('own) node_like ->  string = "baseURI" [@@bs.get] 
    external ownerDocument : node:('own) node_like ->  document option = "ownerDocument" [@@bs.get] [@@bs.return null_to_opt]
    external parentNode : node:('own) node_like ->  node option = "parentNode" [@@bs.get] [@@bs.return null_to_opt]
    external parentElement : node:('own) node_like ->  element option = "parentElement" [@@bs.get] [@@bs.return null_to_opt]
    external childNodes : node:('own) node_like ->  nodeList = "childNodes" [@@bs.get] 
    external firstChild : node:('own) node_like ->  node option = "firstChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastChild : node:('own) node_like ->  node option = "lastChild" [@@bs.get] [@@bs.return null_to_opt]
    external previousSibling : node:('own) node_like ->  node option = "previousSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextSibling : node:('own) node_like ->  node option = "nextSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nodeValue : node:('own) node_like ->  string option = "nodeValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNodeValue : node:('own) node_like -> nodeValue:string Js.null ->  unit = "nodeValue" [@@bs.set]
    external textContent : node:('own) node_like ->  string option = "textContent" [@@bs.get] [@@bs.return null_to_opt]
    external setTextContent : node:('own) node_like -> textContent:string Js.null ->  unit = "textContent" [@@bs.set]
    external appendChild : node:(_) node_like ->  node = "appendChild" [@@bs.send.pipe: ('own) node_like] 
    external cloneNode : ?deep:Js.boolean Js.undefined ->  node = "cloneNode" [@@bs.send.pipe: ('own) node_like] 
    external compareDocumentPosition : other:(_) node_like ->  int = "compareDocumentPosition" [@@bs.send.pipe: ('own) node_like] 
    external contains : other:(_) node_like Js.null ->  bool = "contains" [@@bs.send.pipe: ('own) node_like] 
    external getRootNode :  node = "getRootNode" [@@bs.send.pipe: ('own) node_like] 
    external hasChildNodes :  bool = "hasChildNodes" [@@bs.send.pipe: ('own) node_like] 
    external insertBefore : node:(_) node_like -> child:(_) node_like Js.null ->  node = "insertBefore" [@@bs.send.pipe: ('own) node_like] 
    external isDefaultNamespace : namespace:string Js.null ->  bool = "isDefaultNamespace" [@@bs.send.pipe: ('own) node_like] 
    external isEqualNode : node:(_) node_like Js.null ->  bool = "isEqualNode" [@@bs.send.pipe: ('own) node_like] 
    external isSameNode : otherNode:(_) node_like Js.null ->  bool = "isSameNode" [@@bs.send.pipe: ('own) node_like] 
    external lookupNamespaceURI : prefix:string Js.null ->  string option = "lookupNamespaceURI" [@@bs.send.pipe: ('own) node_like] [@@bs.return null_to_opt]
    external lookupPrefix : namespace:string Js.null ->  string option = "lookupPrefix" [@@bs.send.pipe: ('own) node_like] [@@bs.return null_to_opt]
    external normalize :  unit = "normalize" [@@bs.send.pipe: ('own) node_like] 
    external removeChild : child:(_) node_like ->  node = "removeChild" [@@bs.send.pipe: ('own) node_like] 
    external replaceChild : node:(_) node_like -> child:(_) node_like ->  node = "replaceChild" [@@bs.send.pipe: ('own) node_like] 
    
    let element_node  =
      
      1
    
    let attribute_node  =
      
      2
    
    let text_node  =
      
      3
    
    let cdata_section_node  =
      
      4
    
    let entity_reference_node  =
      
      5
    
    let entity_node  =
      
      6
    
    let processing_instruction_node  =
      
      7
    
    let comment_node  =
      
      8
    
    let document_node  =
      
      9
    
    let document_type_node  =
      
      10
    
    let document_fragment_node  =
      
      11
    
    let notation_node  =
      
      12
    
    let document_position_disconnected  =
      
      1
    
    let document_position_preceding  =
      
      2
    
    let document_position_following  =
      
      4
    
    let document_position_contains  =
      
      8
    
    let document_position_contained_by  =
      
      16
    
    let document_position_implementation_specific  =
      
      32
    
    let cloneNode ?deep node =
      let conv_deep = Js_undefined.from_opt in
      let deep = conv_deep deep in
      cloneNode ~deep node
    
end
 module VRDisplayEvent = struct
    include Event
    
    external display : vRDisplayEvent:('own) vRDisplayEvent_like ->  vRDisplay = "display" [@@bs.get] 
    external reason : vRDisplayEvent:('own) vRDisplayEvent_like ->  string option = "reason" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module PopStateEvent = struct
    include Event
    
    external state : popStateEvent:('own) popStateEvent_like ->  'a490 = "state" [@@bs.get] 
    
    
end
 module VRDisplay = struct
    include EventTarget
    
    external isConnected : vRDisplay:('own) vRDisplay_like ->  bool = "isConnected" [@@bs.get] 
    external isPresenting : vRDisplay:('own) vRDisplay_like ->  bool = "isPresenting" [@@bs.get] 
    external capabilities : vRDisplay:('own) vRDisplay_like ->  vRDisplayCapabilities = "capabilities" [@@bs.get] 
    external stageParameters : vRDisplay:('own) vRDisplay_like ->  vRStageParameters option = "stageParameters" [@@bs.get] [@@bs.return null_to_opt]
    external displayId : vRDisplay:('own) vRDisplay_like ->  int = "displayId" [@@bs.get] 
    external displayName : vRDisplay:('own) vRDisplay_like ->  string = "displayName" [@@bs.get] 
    external depthNear : vRDisplay:('own) vRDisplay_like ->  float = "depthNear" [@@bs.get] 
    external setDepthNear : vRDisplay:('own) vRDisplay_like -> depthNear:float ->  unit = "depthNear" [@@bs.set]
    external depthFar : vRDisplay:('own) vRDisplay_like ->  float = "depthFar" [@@bs.get] 
    external setDepthFar : vRDisplay:('own) vRDisplay_like -> depthFar:float ->  unit = "depthFar" [@@bs.set]
    external cancelAnimationFrame : handle:int ->  unit = "cancelAnimationFrame" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external exitPresent :  unit Js.Promise.t = "exitPresent" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external getEyeParameters : whichEye:string ->  vREyeParameters = "getEyeParameters" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external getFrameData : frameData:(_) vRFrameData_like ->  bool = "getFrameData" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external getPose :  vRPose = "getPose" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external requestAnimationFrame : callback:(float -> unit [@bs]) ->  int = "requestAnimationFrame" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external requestPresent : layers:(_) vRLayer_like array ->  unit Js.Promise.t = "requestPresent" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external resetPose :  unit = "resetPose" [@@bs.send.pipe: ('own) vRDisplay_like] 
    external submitFrame :  unit = "submitFrame" [@@bs.send.pipe: ('own) vRDisplay_like] 
    
    let getEyeParameters ~whichEye vRDisplay =
      let conv_whichEye = function
        | `left -> "left"
        | `right -> "right"
         in
      let whichEye = conv_whichEye whichEye in
      let return = getEyeParameters ~whichEye vRDisplay in
      return
    
end
 module WebGLContextEvent = struct
    include Event
    
    external statusMessage : webGLContextEvent:('own) webGLContextEvent_like ->  string = "statusMessage" [@@bs.get] 
    
    
end
 module WebGLProgram = struct
    include WebGLObject
    
    
    
    
end
 module BluetoothRemoteGATTCharacteristic = struct
    include EventTarget
    
    external oncharacteristicvaluechanged : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like ->  (event -> 'a491 [@bs]) option = "oncharacteristicvaluechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOncharacteristicvaluechanged : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like -> oncharacteristicvaluechanged:(event -> 'a492 [@bs]) Js.null ->  unit = "oncharacteristicvaluechanged" [@@bs.set]
    external service : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like ->  bluetoothRemoteGATTService = "service" [@@bs.get] 
    external uuid : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like ->  string = "uuid" [@@bs.get] 
    external properties : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like ->  bluetoothCharacteristicProperties = "properties" [@@bs.get] 
    external value : bluetoothRemoteGATTCharacteristic:('own) bluetoothRemoteGATTCharacteristic_like ->  string option = "value" [@@bs.get] [@@bs.return null_to_opt]
    external getDescriptor : descriptor:'a493 ->  bluetoothRemoteGATTDescriptor Js.Promise.t = "getDescriptor" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    external getDescriptors : ?descriptor:'a494 Js.undefined ->  bluetoothRemoteGATTDescriptor array Js.Promise.t = "getDescriptors" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    external readValue :  string Js.Promise.t = "readValue" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    external startNotifications :  bluetoothRemoteGATTCharacteristic Js.Promise.t = "startNotifications" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    external stopNotifications :  bluetoothRemoteGATTCharacteristic Js.Promise.t = "stopNotifications" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    external writeValue : value:int array ->  unit Js.Promise.t = "writeValue" [@@bs.send.pipe: ('own) bluetoothRemoteGATTCharacteristic_like] 
    
    let getDescriptor ~descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let descriptor = conv_descriptor descriptor in
      let return = getDescriptor ~descriptor bluetoothRemoteGATTCharacteristic in
      return
    
    let getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_descriptor = access_undef conv_descriptor in
      let descriptor = conv_descriptor descriptor in
      let return = getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic in
      return
    
    let getDescriptors ?descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = Js_undefined.from_opt in
      let descriptor = conv_descriptor descriptor in
      getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic
    
end
 module CSSKeyframeRule = struct
    include CSSRule
    
    external style : cSSKeyframeRule:('own) cSSKeyframeRule_like ->  cSSStyleDeclaration = "style" [@@bs.get] 
    
    
end
 module WebGLVertexArrayObjectOES = struct
    include WebGLObject
    
    
    
    
end
 module WebGLShader = struct
    include WebGLObject
    
    
    
    
end
 module GlobalScope = struct
    include EventTarget
    
    
    
    
end
 module TestBindingProxy = struct
    include TestBinding
    
    external length : testBindingProxy:('own) testBindingProxy_like ->  int = "length" [@@bs.get] 
    external getItem : index:int ->  string = "getItem" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    external getNamedItem : item_name:string ->  string = "getNamedItem" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    external removeItem : name:string ->  unit = "removeItem" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    external setItem : index:int -> value:string ->  unit = "setItem" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    external setNamedItem : item_name:string -> value:string ->  unit = "setNamedItem" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) testBindingProxy_like] 
    
    
end
 module HTMLFormControlsCollection = struct
    include HTMLCollection
    
    external namedItem : name:string ->  'a495 = "namedItem" [@@bs.send.pipe: ('own) hTMLFormControlsCollection_like] 
    
    
end
 module CustomEvent = struct
    include Event
    
    external detail : customEvent:('own) customEvent_like ->  'a496 = "detail" [@@bs.get] 
    external initCustomEvent : type_:string -> bubbles:Js.boolean -> cancelable:Js.boolean -> detail:'a497 ->  unit = "initCustomEvent" [@@bs.send.pipe: ('own) customEvent_like] 
    
    
end
 module DOMPoint = struct
    include DOMPointReadOnly
    
    external x : dOMPoint:('own) dOMPoint_like ->  float = "x" [@@bs.get] 
    external setX : dOMPoint:('own) dOMPoint_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMPoint:('own) dOMPoint_like ->  float = "y" [@@bs.get] 
    external setY : dOMPoint:('own) dOMPoint_like -> y:float ->  unit = "y" [@@bs.set]
    external z : dOMPoint:('own) dOMPoint_like ->  float = "z" [@@bs.get] 
    external setZ : dOMPoint:('own) dOMPoint_like -> z:float ->  unit = "z" [@@bs.set]
    external w : dOMPoint:('own) dOMPoint_like ->  float = "w" [@@bs.get] 
    external setW : dOMPoint:('own) dOMPoint_like -> w:float ->  unit = "w" [@@bs.set]
    
    
end
 module PageTransitionEvent = struct
    include Event
    
    external persisted : pageTransitionEvent:('own) pageTransitionEvent_like ->  bool = "persisted" [@@bs.get] 
    
    
end
 module ServiceWorker = struct
    include EventTarget
    
    external onerror : serviceWorker:('own) serviceWorker_like ->  (event -> 'a498 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : serviceWorker:('own) serviceWorker_like -> onerror:(event -> 'a499 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external scriptURL : serviceWorker:('own) serviceWorker_like ->  string = "scriptURL" [@@bs.get] 
    external state : serviceWorker:('own) serviceWorker_like ->  string = "state" [@@bs.get] 
    external onstatechange : serviceWorker:('own) serviceWorker_like ->  (event -> 'a500 [@bs]) option = "onstatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstatechange : serviceWorker:('own) serviceWorker_like -> onstatechange:(event -> 'a501 [@bs]) Js.null ->  unit = "onstatechange" [@@bs.set]
    external postMessage : message:'a502 ->  unit = "postMessage" [@@bs.send.pipe: ('own) serviceWorker_like] 
    
    
end
 module CloseEvent = struct
    include Event
    
    external wasClean : closeEvent:('own) closeEvent_like ->  bool = "wasClean" [@@bs.get] 
    external code : closeEvent:('own) closeEvent_like ->  int = "code" [@@bs.get] 
    external reason : closeEvent:('own) closeEvent_like ->  string = "reason" [@@bs.get] 
    
    
end
 module WebSocket = struct
    include EventTarget
    
    external url : webSocket:('own) webSocket_like ->  string = "url" [@@bs.get] 
    external readyState : webSocket:('own) webSocket_like ->  int = "readyState" [@@bs.get] 
    external bufferedAmount : webSocket:('own) webSocket_like ->  int = "bufferedAmount" [@@bs.get] 
    external onopen : webSocket:('own) webSocket_like ->  (event -> 'a503 [@bs]) option = "onopen" [@@bs.get] [@@bs.return null_to_opt]
    external setOnopen : webSocket:('own) webSocket_like -> onopen:(event -> 'a504 [@bs]) Js.null ->  unit = "onopen" [@@bs.set]
    external onerror : webSocket:('own) webSocket_like ->  (event -> 'a505 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : webSocket:('own) webSocket_like -> onerror:(event -> 'a506 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onclose : webSocket:('own) webSocket_like ->  (event -> 'a507 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : webSocket:('own) webSocket_like -> onclose:(event -> 'a508 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external protocol : webSocket:('own) webSocket_like ->  string = "protocol" [@@bs.get] 
    external onmessage : webSocket:('own) webSocket_like ->  (event -> 'a509 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : webSocket:('own) webSocket_like -> onmessage:(event -> 'a510 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external binaryType : webSocket:('own) webSocket_like ->  string = "binaryType" [@@bs.get] 
    external setBinaryType : webSocket:('own) webSocket_like -> binaryType:string ->  unit = "binaryType" [@@bs.set]
    external close : ?code:int Js.undefined -> ?reason:string Js.undefined ->  unit = "close" [@@bs.send.pipe: ('own) webSocket_like] 
    external send : data:'a511 ->  unit = "send" [@@bs.send.pipe: ('own) webSocket_like] 
    
    let connecting  =
      
      0
    
    let open_  =
      
      1
    
    let closing  =
      
      2
    
    let closed_  =
      
      3
    
    let close ?code ?reason webSocket =
      let conv_code = Js_undefined.from_opt in
      let code = conv_code code in
      let conv_reason = Js_undefined.from_opt in
      let reason = conv_reason reason in
      close ~code ~reason webSocket
    
    let send ~data webSocket =
      let conv_data = function
        | `String (x: string) -> Obj.magic x
        | `Blob (x: (_) blob_like) -> Obj.magic x
         in
      let data = conv_data data in
      let return = send ~data webSocket in
      return
    
end
 module MediaQueryListEvent = struct
    include Event
    
    external media : mediaQueryListEvent:('own) mediaQueryListEvent_like ->  string = "media" [@@bs.get] 
    external matches : mediaQueryListEvent:('own) mediaQueryListEvent_like ->  bool = "matches" [@@bs.get] 
    
    
end
 module WebGLBuffer = struct
    include WebGLObject
    
    
    
    
end
 module CSSViewportRule = struct
    include CSSRule
    
    
    
    
end
 module ExtendableEvent = struct
    include Event
    
    external waitUntil : f:'a512 ->  unit = "waitUntil" [@@bs.send.pipe: ('own) extendableEvent_like] 
    
    
end
 module ProgressEvent = struct
    include Event
    
    external lengthComputable : progressEvent:('own) progressEvent_like ->  bool = "lengthComputable" [@@bs.get] 
    external loaded : progressEvent:('own) progressEvent_like ->  int = "loaded" [@@bs.get] 
    external total : progressEvent:('own) progressEvent_like ->  int = "total" [@@bs.get] 
    
    
end
 module WebGLRenderbuffer = struct
    include WebGLObject
    
    
    
    
end
 module Bluetooth = struct
    include EventTarget
    
    external onavailabilitychanged : bluetooth:('own) bluetooth_like ->  (event -> 'a513 [@bs]) option = "onavailabilitychanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnavailabilitychanged : bluetooth:('own) bluetooth_like -> onavailabilitychanged:(event -> 'a514 [@bs]) Js.null ->  unit = "onavailabilitychanged" [@@bs.set]
    external getAvailability :  Js.boolean Js.Promise.t = "getAvailability" [@@bs.send.pipe: ('own) bluetooth_like] 
    external requestDevice : ?options:(_) requestDeviceOptions_like Js.undefined ->  bluetoothDevice Js.Promise.t = "requestDevice" [@@bs.send.pipe: ('own) bluetooth_like] 
    
    let requestDevice ?options bluetooth =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      requestDevice ~options bluetooth
    
end
 module Worker = struct
    include EventTarget
    
    external onerror : worker:('own) worker_like ->  (event -> 'a515 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : worker:('own) worker_like -> onerror:(event -> 'a516 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onmessage : worker:('own) worker_like ->  (event -> 'a517 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : worker:('own) worker_like -> onmessage:(event -> 'a518 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external postMessage : message:'a519 ->  unit = "postMessage" [@@bs.send.pipe: ('own) worker_like] 
    external terminate :  unit = "terminate" [@@bs.send.pipe: ('own) worker_like] 
    
    
end
 module TransitionEvent = struct
    include Event
    
    external propertyName : transitionEvent:('own) transitionEvent_like ->  string = "propertyName" [@@bs.get] 
    external elapsedTime : transitionEvent:('own) transitionEvent_like ->  float = "elapsedTime" [@@bs.get] 
    external pseudoElement : transitionEvent:('own) transitionEvent_like ->  string = "pseudoElement" [@@bs.get] 
    
    
end
 module MediaQueryList = struct
    include EventTarget
    
    external media : mediaQueryList:('own) mediaQueryList_like ->  string = "media" [@@bs.get] 
    external matches : mediaQueryList:('own) mediaQueryList_like ->  bool = "matches" [@@bs.get] 
    external onchange : mediaQueryList:('own) mediaQueryList_like ->  (event -> 'a520 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : mediaQueryList:('own) mediaQueryList_like -> onchange:(event -> 'a521 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external addListener : listener:(_) eventListener_like Js.null ->  unit = "addListener" [@@bs.send.pipe: ('own) mediaQueryList_like] 
    external removeListener : listener:(_) eventListener_like Js.null ->  unit = "removeListener" [@@bs.send.pipe: ('own) mediaQueryList_like] 
    
    
end
 module XMLHttpRequestEventTarget = struct
    include EventTarget
    
    external onloadstart : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a522 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onloadstart:(event -> 'a523 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onprogress : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a524 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onprogress:(event -> 'a525 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onabort : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a526 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onabort:(event -> 'a527 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onerror : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a528 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onerror:(event -> 'a529 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onload : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a530 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onload:(event -> 'a531 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external ontimeout : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a532 [@bs]) option = "ontimeout" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeout : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> ontimeout:(event -> 'a533 [@bs]) Js.null ->  unit = "ontimeout" [@@bs.set]
    external onloadend : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like ->  (event -> 'a534 [@bs]) option = "onloadend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadend : xMLHttpRequestEventTarget:('own) xMLHttpRequestEventTarget_like -> onloadend:(event -> 'a535 [@bs]) Js.null ->  unit = "onloadend" [@@bs.set]
    
    
end
 module CSSKeyframesRule = struct
    include CSSRule
    
    external name : cSSKeyframesRule:('own) cSSKeyframesRule_like ->  string = "name" [@@bs.get] 
    external setName : cSSKeyframesRule:('own) cSSKeyframesRule_like -> name:string ->  unit = "name" [@@bs.set]
    external cssRules : cSSKeyframesRule:('own) cSSKeyframesRule_like ->  cSSRuleList = "cssRules" [@@bs.get] 
    external appendRule : rule:string ->  unit = "appendRule" [@@bs.send.pipe: ('own) cSSKeyframesRule_like] 
    external deleteRule : select:string ->  unit = "deleteRule" [@@bs.send.pipe: ('own) cSSKeyframesRule_like] 
    external findRule : select:string ->  cSSKeyframeRule option = "findRule" [@@bs.send.pipe: ('own) cSSKeyframesRule_like] [@@bs.return null_to_opt]
    
    
end
 module BluetoothAdvertisingEvent = struct
    include Event
    
    external device : bluetoothAdvertisingEvent:('own) bluetoothAdvertisingEvent_like ->  bluetoothDevice = "device" [@@bs.get] 
    external name : bluetoothAdvertisingEvent:('own) bluetoothAdvertisingEvent_like ->  string option = "name" [@@bs.get] [@@bs.return null_to_opt]
    external appearance : bluetoothAdvertisingEvent:('own) bluetoothAdvertisingEvent_like ->  int option = "appearance" [@@bs.get] [@@bs.return null_to_opt]
    external txPower : bluetoothAdvertisingEvent:('own) bluetoothAdvertisingEvent_like ->  int option = "txPower" [@@bs.get] [@@bs.return null_to_opt]
    external rssi : bluetoothAdvertisingEvent:('own) bluetoothAdvertisingEvent_like ->  int option = "rssi" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module CSSNamespaceRule = struct
    include CSSRule
    
    external namespaceURI : cSSNamespaceRule:('own) cSSNamespaceRule_like ->  string = "namespaceURI" [@@bs.get] 
    external prefix : cSSNamespaceRule:('own) cSSNamespaceRule_like ->  string = "prefix" [@@bs.get] 
    
    
end
 module HashChangeEvent = struct
    include Event
    
    external oldURL : hashChangeEvent:('own) hashChangeEvent_like ->  string = "oldURL" [@@bs.get] 
    external newURL : hashChangeEvent:('own) hashChangeEvent_like ->  string = "newURL" [@@bs.get] 
    
    
end
 module CSSGroupingRule = struct
    include CSSRule
    
    external cssRules : cSSGroupingRule:('own) cSSGroupingRule_like ->  cSSRuleList = "cssRules" [@@bs.get] 
    external deleteRule : index:int ->  unit = "deleteRule" [@@bs.send.pipe: ('own) cSSGroupingRule_like] 
    external insertRule : rule:string -> index:int ->  int = "insertRule" [@@bs.send.pipe: ('own) cSSGroupingRule_like] 
    
    
end
 module BluetoothRemoteGATTService = struct
    include EventTarget
    
    external onserviceadded : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  (event -> 'a536 [@bs]) option = "onserviceadded" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceadded : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like -> onserviceadded:(event -> 'a537 [@bs]) Js.null ->  unit = "onserviceadded" [@@bs.set]
    external onservicechanged : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  (event -> 'a538 [@bs]) option = "onservicechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnservicechanged : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like -> onservicechanged:(event -> 'a539 [@bs]) Js.null ->  unit = "onservicechanged" [@@bs.set]
    external onserviceremoved : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  (event -> 'a540 [@bs]) option = "onserviceremoved" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceremoved : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like -> onserviceremoved:(event -> 'a541 [@bs]) Js.null ->  unit = "onserviceremoved" [@@bs.set]
    external device : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  bluetoothDevice = "device" [@@bs.get] 
    external uuid : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  string = "uuid" [@@bs.get] 
    external isPrimary : bluetoothRemoteGATTService:('own) bluetoothRemoteGATTService_like ->  bool = "isPrimary" [@@bs.get] 
    external getCharacteristic : characteristic:'a542 ->  bluetoothRemoteGATTCharacteristic Js.Promise.t = "getCharacteristic" [@@bs.send.pipe: ('own) bluetoothRemoteGATTService_like] 
    external getCharacteristics : ?characteristic:'a543 Js.undefined ->  bluetoothRemoteGATTCharacteristic array Js.Promise.t = "getCharacteristics" [@@bs.send.pipe: ('own) bluetoothRemoteGATTService_like] 
    external getIncludedService : service:'a544 ->  bluetoothRemoteGATTService Js.Promise.t = "getIncludedService" [@@bs.send.pipe: ('own) bluetoothRemoteGATTService_like] 
    external getIncludedServices : ?service:'a545 Js.undefined ->  bluetoothRemoteGATTService array Js.Promise.t = "getIncludedServices" [@@bs.send.pipe: ('own) bluetoothRemoteGATTService_like] 
    
    let getCharacteristic ~characteristic bluetoothRemoteGATTService =
      let conv_characteristic = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let characteristic = conv_characteristic characteristic in
      let return = getCharacteristic ~characteristic bluetoothRemoteGATTService in
      return
    
    let getCharacteristics ~characteristic bluetoothRemoteGATTService =
      let conv_characteristic = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_characteristic = access_undef conv_characteristic in
      let characteristic = conv_characteristic characteristic in
      let return = getCharacteristics ~characteristic bluetoothRemoteGATTService in
      return
    
    let getCharacteristics ?characteristic bluetoothRemoteGATTService =
      let conv_characteristic = Js_undefined.from_opt in
      let characteristic = conv_characteristic characteristic in
      getCharacteristics ~characteristic bluetoothRemoteGATTService
    
    let getIncludedService ~service bluetoothRemoteGATTService =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let service = conv_service service in
      let return = getIncludedService ~service bluetoothRemoteGATTService in
      return
    
    let getIncludedServices ~service bluetoothRemoteGATTService =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_service = access_undef conv_service in
      let service = conv_service service in
      let return = getIncludedServices ~service bluetoothRemoteGATTService in
      return
    
    let getIncludedServices ?service bluetoothRemoteGATTService =
      let conv_service = Js_undefined.from_opt in
      let service = conv_service service in
      getIncludedServices ~service bluetoothRemoteGATTService
    
end
 module WebGLTexture = struct
    include WebGLObject
    
    
    
    
end
 module FileReader = struct
    include EventTarget
    
    external readyState : fileReader:('own) fileReader_like ->  int = "readyState" [@@bs.get] 
    external result : fileReader:('own) fileReader_like ->  'a546 option = "result" [@@bs.get] [@@bs.return null_to_opt]
    external error : fileReader:('own) fileReader_like ->  'a547 option = "error" [@@bs.get] [@@bs.return null_to_opt]
    external onloadstart : fileReader:('own) fileReader_like ->  (event -> 'a548 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : fileReader:('own) fileReader_like -> onloadstart:(event -> 'a549 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onprogress : fileReader:('own) fileReader_like ->  (event -> 'a550 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : fileReader:('own) fileReader_like -> onprogress:(event -> 'a551 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onload : fileReader:('own) fileReader_like ->  (event -> 'a552 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : fileReader:('own) fileReader_like -> onload:(event -> 'a553 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onabort : fileReader:('own) fileReader_like ->  (event -> 'a554 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : fileReader:('own) fileReader_like -> onabort:(event -> 'a555 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onerror : fileReader:('own) fileReader_like ->  (event -> 'a556 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : fileReader:('own) fileReader_like -> onerror:(event -> 'a557 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onloadend : fileReader:('own) fileReader_like ->  (event -> 'a558 [@bs]) option = "onloadend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadend : fileReader:('own) fileReader_like -> onloadend:(event -> 'a559 [@bs]) Js.null ->  unit = "onloadend" [@@bs.set]
    external abort :  unit = "abort" [@@bs.send.pipe: ('own) fileReader_like] 
    external readAsArrayBuffer : blob:(_) blob_like ->  unit = "readAsArrayBuffer" [@@bs.send.pipe: ('own) fileReader_like] 
    external readAsDataURL : blob:(_) blob_like ->  unit = "readAsDataURL" [@@bs.send.pipe: ('own) fileReader_like] 
    external readAsText : blob:(_) blob_like -> ?label:string Js.undefined ->  unit = "readAsText" [@@bs.send.pipe: ('own) fileReader_like] 
    
    let empty  =
      
      0
    
    let loading  =
      
      1
    
    let done_  =
      
      2
    
    let readAsText ~blob ?label fileReader =
      let conv_label = Js_undefined.from_opt in
      let label = conv_label label in
      readAsText ~blob ~label fileReader
    
end
 module CSSStyleSheet = struct
    include StyleSheet
    
    external cssRules : cSSStyleSheet:('own) cSSStyleSheet_like ->  cSSRuleList = "cssRules" [@@bs.get] 
    external deleteRule : index:int ->  unit = "deleteRule" [@@bs.send.pipe: ('own) cSSStyleSheet_like] 
    external insertRule : rule:string -> index:int ->  int = "insertRule" [@@bs.send.pipe: ('own) cSSStyleSheet_like] 
    
    
end
 module UIEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) window_like Js.null -> ?detail:int -> unit ->  uIEventInit = "" [@@bs.obj]
    external view : uIEventInit:('own) uIEventInit_like ->  window option = "view" [@@bs.get] [@@bs.return null_to_opt]
    external setView : uIEventInit:('own) uIEventInit_like -> view:window Js.null ->  unit = "view" [@@bs.set]
    external detail : uIEventInit:('own) uIEventInit_like ->  int = "detail" [@@bs.get] 
    external setDetail : uIEventInit:('own) uIEventInit_like -> detail:int ->  unit = "detail" [@@bs.set]
    
    
end
 module GamepadEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> gamepad:(_) gamepad_like -> unit ->  gamepadEventInit = "" [@@bs.obj]
    external gamepad : gamepadEventInit:('own) gamepadEventInit_like ->  gamepad = "gamepad" [@@bs.get] 
    external setGamepad : gamepadEventInit:('own) gamepadEventInit_like -> gamepad:gamepad ->  unit = "gamepad" [@@bs.set]
    
    
end
 module BluetoothPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?deviceId:string -> ?filters:(_) bluetoothLEScanFilterInit_like array -> ?optionalServices:'a560 array -> ?acceptAllDevices:Js.boolean -> unit ->  bluetoothPermissionDescriptor = "" [@@bs.obj]
    external deviceId : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like ->  string = "deviceId" [@@bs.get] 
    external setDeviceId : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like -> deviceId:string ->  unit = "deviceId" [@@bs.set]
    external filters : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like ->  bluetoothLEScanFilterInit array = "filters" [@@bs.get] 
    external setFilters : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like -> filters:bluetoothLEScanFilterInit array ->  unit = "filters" [@@bs.set]
    external optionalServices : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like ->  'a561 array = "optionalServices" [@@bs.get] 
    external setOptionalServices : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like -> optionalServices:'a562 array ->  unit = "optionalServices" [@@bs.set]
    external acceptAllDevices : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like ->  bool = "acceptAllDevices" [@@bs.get] 
    external setAcceptAllDevices : bluetoothPermissionDescriptor:('own) bluetoothPermissionDescriptor_like -> acceptAllDevices:Js.boolean ->  unit = "acceptAllDevices" [@@bs.set]
    
    
end
 module ErrorEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?message:string -> ?filename:string -> ?lineno:int -> ?colno:int -> ?error:'a563 -> unit ->  errorEventInit = "" [@@bs.obj]
    external message : errorEventInit:('own) errorEventInit_like ->  string = "message" [@@bs.get] 
    external setMessage : errorEventInit:('own) errorEventInit_like -> message:string ->  unit = "message" [@@bs.set]
    external filename : errorEventInit:('own) errorEventInit_like ->  string = "filename" [@@bs.get] 
    external setFilename : errorEventInit:('own) errorEventInit_like -> filename:string ->  unit = "filename" [@@bs.set]
    external lineno : errorEventInit:('own) errorEventInit_like ->  int = "lineno" [@@bs.get] 
    external setLineno : errorEventInit:('own) errorEventInit_like -> lineno:int ->  unit = "lineno" [@@bs.set]
    external colno : errorEventInit:('own) errorEventInit_like ->  int = "colno" [@@bs.get] 
    external setColno : errorEventInit:('own) errorEventInit_like -> colno:int ->  unit = "colno" [@@bs.set]
    external error : errorEventInit:('own) errorEventInit_like ->  'a564 = "error" [@@bs.get] 
    external setError : errorEventInit:('own) errorEventInit_like -> error:'a565 ->  unit = "error" [@@bs.set]
    
    
end
 module PushPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?userVisibleOnly:Js.boolean -> unit ->  pushPermissionDescriptor = "" [@@bs.obj]
    external userVisibleOnly : pushPermissionDescriptor:('own) pushPermissionDescriptor_like ->  bool = "userVisibleOnly" [@@bs.get] 
    external setUserVisibleOnly : pushPermissionDescriptor:('own) pushPermissionDescriptor_like -> userVisibleOnly:Js.boolean ->  unit = "userVisibleOnly" [@@bs.set]
    
    
end
 module MidiPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?sysex:Js.boolean -> unit ->  midiPermissionDescriptor = "" [@@bs.obj]
    external sysex : midiPermissionDescriptor:('own) midiPermissionDescriptor_like ->  bool = "sysex" [@@bs.get] 
    external setSysex : midiPermissionDescriptor:('own) midiPermissionDescriptor_like -> sysex:Js.boolean ->  unit = "sysex" [@@bs.set]
    
    
end
 module DevicePermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?deviceId:string -> unit ->  devicePermissionDescriptor = "" [@@bs.obj]
    external deviceId : devicePermissionDescriptor:('own) devicePermissionDescriptor_like ->  string = "deviceId" [@@bs.get] 
    external setDeviceId : devicePermissionDescriptor:('own) devicePermissionDescriptor_like -> deviceId:string ->  unit = "deviceId" [@@bs.set]
    
    
end
 module MessageEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?data:'a566 -> ?origin:string -> ?lastEventId:string -> unit ->  messageEventInit = "" [@@bs.obj]
    external data : messageEventInit:('own) messageEventInit_like ->  'a567 = "data" [@@bs.get] 
    external setData : messageEventInit:('own) messageEventInit_like -> data:'a568 ->  unit = "data" [@@bs.set]
    external origin : messageEventInit:('own) messageEventInit_like ->  string = "origin" [@@bs.get] 
    external setOrigin : messageEventInit:('own) messageEventInit_like -> origin:string ->  unit = "origin" [@@bs.set]
    external lastEventId : messageEventInit:('own) messageEventInit_like ->  string = "lastEventId" [@@bs.get] 
    external setLastEventId : messageEventInit:('own) messageEventInit_like -> lastEventId:string ->  unit = "lastEventId" [@@bs.set]
    
    
end
 module FilePropertyBag = struct
    include BlobPropertyBag
    
    external make : ?type_:string -> ?lastModified:int -> unit ->  filePropertyBag = "" [@@bs.obj]
    external lastModified : filePropertyBag:('own) filePropertyBag_like ->  int = "lastModified" [@@bs.get] 
    external setLastModified : filePropertyBag:('own) filePropertyBag_like -> lastModified:int ->  unit = "lastModified" [@@bs.set]
    
    
end
 module StorageEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?key:string Js.null -> ?oldValue:string Js.null -> ?newValue:string Js.null -> ?url:string -> ?storageArea:(_) storage_like Js.null -> unit ->  storageEventInit = "" [@@bs.obj]
    external key : storageEventInit:('own) storageEventInit_like ->  string option = "key" [@@bs.get] [@@bs.return null_to_opt]
    external setKey : storageEventInit:('own) storageEventInit_like -> key:string Js.null ->  unit = "key" [@@bs.set]
    external oldValue : storageEventInit:('own) storageEventInit_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    external setOldValue : storageEventInit:('own) storageEventInit_like -> oldValue:string Js.null ->  unit = "oldValue" [@@bs.set]
    external newValue : storageEventInit:('own) storageEventInit_like ->  string option = "newValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNewValue : storageEventInit:('own) storageEventInit_like -> newValue:string Js.null ->  unit = "newValue" [@@bs.set]
    external url : storageEventInit:('own) storageEventInit_like ->  string = "url" [@@bs.get] 
    external setUrl : storageEventInit:('own) storageEventInit_like -> url:string ->  unit = "url" [@@bs.set]
    external storageArea : storageEventInit:('own) storageEventInit_like ->  storage option = "storageArea" [@@bs.get] [@@bs.return null_to_opt]
    external setStorageArea : storageEventInit:('own) storageEventInit_like -> storageArea:storage Js.null ->  unit = "storageArea" [@@bs.set]
    
    
end
 module VRDisplayEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> display:(_) vRDisplay_like -> ?reason:string -> unit ->  vRDisplayEventInit = "" [@@bs.obj]
    external display : vRDisplayEventInit:('own) vRDisplayEventInit_like ->  vRDisplay = "display" [@@bs.get] 
    external setDisplay : vRDisplayEventInit:('own) vRDisplayEventInit_like -> display:vRDisplay ->  unit = "display" [@@bs.set]
    external reason : vRDisplayEventInit:('own) vRDisplayEventInit_like ->  string = "reason" [@@bs.get] 
    external setReason : vRDisplayEventInit:('own) vRDisplayEventInit_like -> reason:string ->  unit = "reason" [@@bs.set]
    
    
end
 module PopStateEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?state:'a569 -> unit ->  popStateEventInit = "" [@@bs.obj]
    external state : popStateEventInit:('own) popStateEventInit_like ->  'a570 = "state" [@@bs.get] 
    external setState : popStateEventInit:('own) popStateEventInit_like -> state:'a571 ->  unit = "state" [@@bs.set]
    
    
end
 module WebGLContextEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?statusMessage:string -> unit ->  webGLContextEventInit = "" [@@bs.obj]
    external statusMessage : webGLContextEventInit:('own) webGLContextEventInit_like ->  string = "statusMessage" [@@bs.get] 
    external setStatusMessage : webGLContextEventInit:('own) webGLContextEventInit_like -> statusMessage:string ->  unit = "statusMessage" [@@bs.set]
    
    
end
 module CustomEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?detail:'a572 -> unit ->  customEventInit = "" [@@bs.obj]
    external detail : customEventInit:('own) customEventInit_like ->  'a573 = "detail" [@@bs.get] 
    external setDetail : customEventInit:('own) customEventInit_like -> detail:'a574 ->  unit = "detail" [@@bs.set]
    
    
end
 module PageTransitionEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?persisted:Js.boolean -> unit ->  pageTransitionEventInit = "" [@@bs.obj]
    external persisted : pageTransitionEventInit:('own) pageTransitionEventInit_like ->  bool = "persisted" [@@bs.get] 
    external setPersisted : pageTransitionEventInit:('own) pageTransitionEventInit_like -> persisted:Js.boolean ->  unit = "persisted" [@@bs.set]
    
    
end
 module CloseEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?wasClean:Js.boolean -> ?code:int -> ?reason:string -> unit ->  closeEventInit = "" [@@bs.obj]
    external wasClean : closeEventInit:('own) closeEventInit_like ->  bool = "wasClean" [@@bs.get] 
    external setWasClean : closeEventInit:('own) closeEventInit_like -> wasClean:Js.boolean ->  unit = "wasClean" [@@bs.set]
    external code : closeEventInit:('own) closeEventInit_like ->  int = "code" [@@bs.get] 
    external setCode : closeEventInit:('own) closeEventInit_like -> code:int ->  unit = "code" [@@bs.set]
    external reason : closeEventInit:('own) closeEventInit_like ->  string = "reason" [@@bs.get] 
    external setReason : closeEventInit:('own) closeEventInit_like -> reason:string ->  unit = "reason" [@@bs.set]
    
    
end
 module MediaQueryListEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?media:string -> ?matches:Js.boolean -> unit ->  mediaQueryListEventInit = "" [@@bs.obj]
    external media : mediaQueryListEventInit:('own) mediaQueryListEventInit_like ->  string = "media" [@@bs.get] 
    external setMedia : mediaQueryListEventInit:('own) mediaQueryListEventInit_like -> media:string ->  unit = "media" [@@bs.set]
    external matches : mediaQueryListEventInit:('own) mediaQueryListEventInit_like ->  bool = "matches" [@@bs.get] 
    external setMatches : mediaQueryListEventInit:('own) mediaQueryListEventInit_like -> matches:Js.boolean ->  unit = "matches" [@@bs.set]
    
    
end
 module ExtendableEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> unit ->  extendableEventInit = "" [@@bs.obj]
    
    
end
 module ProgressEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?lengthComputable:Js.boolean -> ?loaded:int -> ?total:int -> unit ->  progressEventInit = "" [@@bs.obj]
    external lengthComputable : progressEventInit:('own) progressEventInit_like ->  bool = "lengthComputable" [@@bs.get] 
    external setLengthComputable : progressEventInit:('own) progressEventInit_like -> lengthComputable:Js.boolean ->  unit = "lengthComputable" [@@bs.set]
    external loaded : progressEventInit:('own) progressEventInit_like ->  int = "loaded" [@@bs.get] 
    external setLoaded : progressEventInit:('own) progressEventInit_like -> loaded:int ->  unit = "loaded" [@@bs.set]
    external total : progressEventInit:('own) progressEventInit_like ->  int = "total" [@@bs.get] 
    external setTotal : progressEventInit:('own) progressEventInit_like -> total:int ->  unit = "total" [@@bs.set]
    
    
end
 module TransitionEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?propertyName:string -> ?elapsedTime:float -> ?pseudoElement:string -> unit ->  transitionEventInit = "" [@@bs.obj]
    external propertyName : transitionEventInit:('own) transitionEventInit_like ->  string = "propertyName" [@@bs.get] 
    external setPropertyName : transitionEventInit:('own) transitionEventInit_like -> propertyName:string ->  unit = "propertyName" [@@bs.set]
    external elapsedTime : transitionEventInit:('own) transitionEventInit_like ->  float = "elapsedTime" [@@bs.get] 
    external setElapsedTime : transitionEventInit:('own) transitionEventInit_like -> elapsedTime:float ->  unit = "elapsedTime" [@@bs.set]
    external pseudoElement : transitionEventInit:('own) transitionEventInit_like ->  string = "pseudoElement" [@@bs.get] 
    external setPseudoElement : transitionEventInit:('own) transitionEventInit_like -> pseudoElement:string ->  unit = "pseudoElement" [@@bs.set]
    
    
end
 module BluetoothAdvertisingEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> device:(_) bluetoothDevice_like -> ?name:string -> ?appearance:int -> ?txPower:int -> ?rssi:int -> unit ->  bluetoothAdvertisingEventInit = "" [@@bs.obj]
    external device : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like ->  bluetoothDevice = "device" [@@bs.get] 
    external setDevice : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like -> device:bluetoothDevice ->  unit = "device" [@@bs.set]
    external name : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like ->  string = "name" [@@bs.get] 
    external setName : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like -> name:string ->  unit = "name" [@@bs.set]
    external appearance : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like ->  int = "appearance" [@@bs.get] 
    external setAppearance : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like -> appearance:int ->  unit = "appearance" [@@bs.set]
    external txPower : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like ->  int = "txPower" [@@bs.get] 
    external setTxPower : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like -> txPower:int ->  unit = "txPower" [@@bs.set]
    external rssi : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like ->  int = "rssi" [@@bs.get] 
    external setRssi : bluetoothAdvertisingEventInit:('own) bluetoothAdvertisingEventInit_like -> rssi:int ->  unit = "rssi" [@@bs.set]
    
    
end
 module HashChangeEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?oldURL:string -> ?newURL:string -> unit ->  hashChangeEventInit = "" [@@bs.obj]
    external oldURL : hashChangeEventInit:('own) hashChangeEventInit_like ->  string = "oldURL" [@@bs.get] 
    external setOldURL : hashChangeEventInit:('own) hashChangeEventInit_like -> oldURL:string ->  unit = "oldURL" [@@bs.set]
    external newURL : hashChangeEventInit:('own) hashChangeEventInit_like ->  string = "newURL" [@@bs.get] 
    external setNewURL : hashChangeEventInit:('own) hashChangeEventInit_like -> newURL:string ->  unit = "newURL" [@@bs.set]
    
    
end
 module ScrollToOptions = struct
    include ScrollOptions
    
    external make : ?behavior:string -> ?left:float -> ?top:float -> unit ->  scrollToOptions = "" [@@bs.obj]
    external left : scrollToOptions:('own) scrollToOptions_like ->  float = "left" [@@bs.get] 
    external setLeft : scrollToOptions:('own) scrollToOptions_like -> left:float ->  unit = "left" [@@bs.set]
    external top : scrollToOptions:('own) scrollToOptions_like ->  float = "top" [@@bs.get] 
    external setTop : scrollToOptions:('own) scrollToOptions_like -> top:float ->  unit = "top" [@@bs.set]
    
    
end
 module XMLHttpRequestUpload = struct
    include XMLHttpRequestEventTarget
    
    
    
    
end
 module XMLHttpRequest = struct
    include XMLHttpRequestEventTarget
    
    external onreadystatechange : xMLHttpRequest:('own) xMLHttpRequest_like ->  (event -> 'a575 [@bs]) option = "onreadystatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreadystatechange : xMLHttpRequest:('own) xMLHttpRequest_like -> onreadystatechange:(event -> 'a576 [@bs]) Js.null ->  unit = "onreadystatechange" [@@bs.set]
    external readyState : xMLHttpRequest:('own) xMLHttpRequest_like ->  int = "readyState" [@@bs.get] 
    external timeout : xMLHttpRequest:('own) xMLHttpRequest_like ->  int = "timeout" [@@bs.get] 
    external setTimeout : xMLHttpRequest:('own) xMLHttpRequest_like -> timeout:int ->  unit = "timeout" [@@bs.set]
    external withCredentials : xMLHttpRequest:('own) xMLHttpRequest_like ->  bool = "withCredentials" [@@bs.get] 
    external setWithCredentials : xMLHttpRequest:('own) xMLHttpRequest_like -> withCredentials:Js.boolean ->  unit = "withCredentials" [@@bs.set]
    external upload : xMLHttpRequest:('own) xMLHttpRequest_like ->  xMLHttpRequestUpload = "upload" [@@bs.get] 
    external responseURL : xMLHttpRequest:('own) xMLHttpRequest_like ->  string = "responseURL" [@@bs.get] 
    external status : xMLHttpRequest:('own) xMLHttpRequest_like ->  int = "status" [@@bs.get] 
    external statusText : xMLHttpRequest:('own) xMLHttpRequest_like ->  string = "statusText" [@@bs.get] 
    external responseType : xMLHttpRequest:('own) xMLHttpRequest_like ->  string = "responseType" [@@bs.get] 
    external setResponseType : xMLHttpRequest:('own) xMLHttpRequest_like -> responseType:string ->  unit = "responseType" [@@bs.set]
    external response : xMLHttpRequest:('own) xMLHttpRequest_like ->  'a577 = "response" [@@bs.get] 
    external responseText : xMLHttpRequest:('own) xMLHttpRequest_like ->  string = "responseText" [@@bs.get] 
    external responseXML : xMLHttpRequest:('own) xMLHttpRequest_like ->  document option = "responseXML" [@@bs.get] [@@bs.return null_to_opt]
    external abort :  unit = "abort" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    external getAllResponseHeaders :  string = "getAllResponseHeaders" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    external getResponseHeader : name:string ->  string option = "getResponseHeader" [@@bs.send.pipe: ('own) xMLHttpRequest_like] [@@bs.return null_to_opt]
    external open_ : method_:string -> url:string ->  unit = "open" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    external overrideMimeType : mime:string ->  unit = "overrideMimeType" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    external send : ?data:'a578 Js.undefined ->  unit = "send" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    external setRequestHeader : name:string -> value:string ->  unit = "setRequestHeader" [@@bs.send.pipe: ('own) xMLHttpRequest_like] 
    
    let unsent  =
      
      0
    
    let opened  =
      
      1
    
    let headers_received  =
      
      2
    
    let loading  =
      
      3
    
    let done_  =
      
      4
    
    let send ~data xMLHttpRequest =
      let conv_data = function
        | `Document_Null (x: (_) document_like Js.null) -> Obj.magic x
        | `Any_Null (x: 'a579 Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = send ~data xMLHttpRequest in
      return
    
    let send ?data xMLHttpRequest =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      send ~data xMLHttpRequest
    
end
 module BluetoothPermissionResult = struct
    include PermissionStatus
    
    external devices :  bluetoothDevice array = "devices" [@@bs.send.pipe: ('own) bluetoothPermissionResult_like] 
    
    
end
 module ForceTouchEvent = struct
    include UIEvent
    
    external sERVO_FORCE_AT_MOUSE_DOWN : forceTouchEvent:('own) forceTouchEvent_like ->  float = "SERVO_FORCE_AT_MOUSE_DOWN" [@@bs.get] 
    external sERVO_FORCE_AT_FORCE_MOUSE_DOWN : forceTouchEvent:('own) forceTouchEvent_like ->  float = "SERVO_FORCE_AT_FORCE_MOUSE_DOWN" [@@bs.get] 
    external servoForce : forceTouchEvent:('own) forceTouchEvent_like ->  float = "servoForce" [@@bs.get] 
    
    
end
 module DissimilarOriginWindow = struct
    include GlobalScope
    
    external window : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  windowProxy = "window" [@@bs.get] 
    external self : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  windowProxy = "self" [@@bs.get] 
    external parent : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  windowProxy option = "parent" [@@bs.get] [@@bs.return null_to_opt]
    external top : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  windowProxy option = "top" [@@bs.get] [@@bs.return null_to_opt]
    external frames : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  windowProxy = "frames" [@@bs.get] 
    external length : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  int = "length" [@@bs.get] 
    external location : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  dissimilarOriginLocation = "location" [@@bs.get] 
    external closed_ : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  bool = "closed" [@@bs.get] 
    external opener : dissimilarOriginWindow:('own) dissimilarOriginWindow_like ->  'a580 = "opener" [@@bs.get] 
    external setOpener : dissimilarOriginWindow:('own) dissimilarOriginWindow_like -> opener:'a581 ->  unit = "opener" [@@bs.set]
    external blur :  unit = "blur" [@@bs.send.pipe: ('own) dissimilarOriginWindow_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) dissimilarOriginWindow_like] 
    external focus :  unit = "focus" [@@bs.send.pipe: ('own) dissimilarOriginWindow_like] 
    external postMessage : message:'a582 -> targetOrigin:string ->  unit = "postMessage" [@@bs.send.pipe: ('own) dissimilarOriginWindow_like] 
    
    
end
 module KeyboardEvent = struct
    include UIEvent
    
    external key : keyboardEvent:('own) keyboardEvent_like ->  string = "key" [@@bs.get] 
    external code : keyboardEvent:('own) keyboardEvent_like ->  string = "code" [@@bs.get] 
    external location : keyboardEvent:('own) keyboardEvent_like ->  int = "location" [@@bs.get] 
    external ctrlKey : keyboardEvent:('own) keyboardEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : keyboardEvent:('own) keyboardEvent_like ->  bool = "shiftKey" [@@bs.get] 
    external altKey : keyboardEvent:('own) keyboardEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : keyboardEvent:('own) keyboardEvent_like ->  bool = "metaKey" [@@bs.get] 
    external repeat : keyboardEvent:('own) keyboardEvent_like ->  bool = "repeat" [@@bs.get] 
    external isComposing : keyboardEvent:('own) keyboardEvent_like ->  bool = "isComposing" [@@bs.get] 
    external charCode : keyboardEvent:('own) keyboardEvent_like ->  int = "charCode" [@@bs.get] 
    external keyCode : keyboardEvent:('own) keyboardEvent_like ->  int = "keyCode" [@@bs.get] 
    external which : keyboardEvent:('own) keyboardEvent_like ->  int = "which" [@@bs.get] 
    external getModifierState : keyArg:string ->  bool = "getModifierState" [@@bs.send.pipe: ('own) keyboardEvent_like] 
    external initKeyboardEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) window_like Js.null -> keyArg:string -> locationArg:int -> modifiersListArg:string -> repeat:Js.boolean -> locale:string ->  unit = "initKeyboardEvent" [@@bs.send.pipe: ('own) keyboardEvent_like] 
    
    let dom_key_location_standard  =
      
      0
    
    let dom_key_location_left  =
      
      1
    
    let dom_key_location_right  =
      
      2
    
    let dom_key_location_numpad  =
      
      3
    
end
 module TouchEvent = struct
    include UIEvent
    
    external touches : touchEvent:('own) touchEvent_like ->  touchList = "touches" [@@bs.get] 
    external targetTouches : touchEvent:('own) touchEvent_like ->  touchList = "targetTouches" [@@bs.get] 
    external changedTouches : touchEvent:('own) touchEvent_like ->  touchList = "changedTouches" [@@bs.get] 
    external altKey : touchEvent:('own) touchEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : touchEvent:('own) touchEvent_like ->  bool = "metaKey" [@@bs.get] 
    external ctrlKey : touchEvent:('own) touchEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : touchEvent:('own) touchEvent_like ->  bool = "shiftKey" [@@bs.get] 
    
    
end
 module DocumentFragment = struct
    include Node
    
    external children : documentFragment:('own) documentFragment_like ->  hTMLCollection = "children" [@@bs.get] 
    external firstElementChild : documentFragment:('own) documentFragment_like ->  element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : documentFragment:('own) documentFragment_like ->  element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : documentFragment:('own) documentFragment_like ->  int = "childElementCount" [@@bs.get] 
    external append : documentFragment:('own) documentFragment_like ->  (('own) documentFragment_like, unit, ('a583)) variadic_func = "append" [@@bs.get]
    external getElementById : elementId:string ->  element option = "getElementById" [@@bs.send.pipe: ('own) documentFragment_like] [@@bs.return null_to_opt]
    external prepend : documentFragment:('own) documentFragment_like ->  (('own) documentFragment_like, unit, ('a584)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  element option = "querySelector" [@@bs.send.pipe: ('own) documentFragment_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  nodeList = "querySelectorAll" [@@bs.send.pipe: ('own) documentFragment_like] 
    
    let append ~nodes documentFragment =
      let func = append documentFragment in
      let args = to_arg nodes in
      apply func documentFragment args
    
    let append ~nodes documentFragment =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes documentFragment in
      return
    
    let prepend ~nodes documentFragment =
      let func = prepend documentFragment in
      let args = to_arg nodes in
      apply func documentFragment args
    
    let prepend ~nodes documentFragment =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes documentFragment in
      return
    
end
 module ExtendableMessageEvent = struct
    include ExtendableEvent
    
    external data : extendableMessageEvent:('own) extendableMessageEvent_like ->  'a585 = "data" [@@bs.get] 
    external origin : extendableMessageEvent:('own) extendableMessageEvent_like ->  string = "origin" [@@bs.get] 
    external lastEventId : extendableMessageEvent:('own) extendableMessageEvent_like ->  string = "lastEventId" [@@bs.get] 
    
    
end
 module CSSConditionRule = struct
    include CSSGroupingRule
    
    external conditionText : cSSConditionRule:('own) cSSConditionRule_like ->  string = "conditionText" [@@bs.get] 
    external setConditionText : cSSConditionRule:('own) cSSConditionRule_like -> conditionText:string ->  unit = "conditionText" [@@bs.set]
    
    
end
 module DocumentType = struct
    include Node
    
    external name : documentType:('own) documentType_like ->  string = "name" [@@bs.get] 
    external publicId : documentType:('own) documentType_like ->  string = "publicId" [@@bs.get] 
    external systemId : documentType:('own) documentType_like ->  string = "systemId" [@@bs.get] 
    external after : documentType:('own) documentType_like ->  (('own) documentType_like, unit, ('a586)) variadic_func = "after" [@@bs.get]
    external before : documentType:('own) documentType_like ->  (('own) documentType_like, unit, ('a587)) variadic_func = "before" [@@bs.get]
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) documentType_like] 
    external replaceWith : documentType:('own) documentType_like ->  (('own) documentType_like, unit, ('a588)) variadic_func = "replaceWith" [@@bs.get]
    
    let after ~nodes documentType =
      let func = after documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let after ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes documentType in
      return
    
    let before ~nodes documentType =
      let func = before documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let before ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes documentType in
      return
    
    let replaceWith ~nodes documentType =
      let func = replaceWith documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let replaceWith ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes documentType in
      return
    
end
 module Document = struct
    include Node
    
    external oncopy : document:('own) document_like ->  (event -> 'a589 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : document:('own) document_like -> oncopy:(event -> 'a590 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : document:('own) document_like ->  (event -> 'a591 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : document:('own) document_like -> oncut:(event -> 'a592 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : document:('own) document_like ->  (event -> 'a593 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : document:('own) document_like -> onpaste:(event -> 'a594 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    external onabort : document:('own) document_like ->  (event -> 'a595 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : document:('own) document_like -> onabort:(event -> 'a596 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : document:('own) document_like ->  (event -> 'a597 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : document:('own) document_like -> onblur:(event -> 'a598 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : document:('own) document_like ->  (event -> 'a599 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : document:('own) document_like -> oncancel:(event -> 'a600 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : document:('own) document_like ->  (event -> 'a601 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : document:('own) document_like -> oncanplay:(event -> 'a602 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : document:('own) document_like ->  (event -> 'a603 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : document:('own) document_like -> oncanplaythrough:(event -> 'a604 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : document:('own) document_like ->  (event -> 'a605 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : document:('own) document_like -> onchange:(event -> 'a606 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : document:('own) document_like ->  (event -> 'a607 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : document:('own) document_like -> onclick:(event -> 'a608 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : document:('own) document_like ->  (event -> 'a609 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : document:('own) document_like -> onclose:(event -> 'a610 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : document:('own) document_like ->  (event -> 'a611 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : document:('own) document_like -> oncontextmenu:(event -> 'a612 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : document:('own) document_like ->  (event -> 'a613 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : document:('own) document_like -> oncuechange:(event -> 'a614 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : document:('own) document_like ->  (event -> 'a615 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : document:('own) document_like -> ondblclick:(event -> 'a616 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : document:('own) document_like ->  (event -> 'a617 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : document:('own) document_like -> ondrag:(event -> 'a618 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : document:('own) document_like ->  (event -> 'a619 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : document:('own) document_like -> ondragend:(event -> 'a620 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : document:('own) document_like ->  (event -> 'a621 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : document:('own) document_like -> ondragenter:(event -> 'a622 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : document:('own) document_like ->  (event -> 'a623 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : document:('own) document_like -> ondragexit:(event -> 'a624 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : document:('own) document_like ->  (event -> 'a625 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : document:('own) document_like -> ondragleave:(event -> 'a626 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : document:('own) document_like ->  (event -> 'a627 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : document:('own) document_like -> ondragover:(event -> 'a628 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : document:('own) document_like ->  (event -> 'a629 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : document:('own) document_like -> ondragstart:(event -> 'a630 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : document:('own) document_like ->  (event -> 'a631 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : document:('own) document_like -> ondrop:(event -> 'a632 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : document:('own) document_like ->  (event -> 'a633 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : document:('own) document_like -> ondurationchange:(event -> 'a634 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : document:('own) document_like ->  (event -> 'a635 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : document:('own) document_like -> onemptied:(event -> 'a636 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : document:('own) document_like ->  (event -> 'a637 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : document:('own) document_like -> onended:(event -> 'a638 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : document:('own) document_like ->  ('a639 -> string -> int -> int -> 'a640 -> 'a641 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : document:('own) document_like -> onerror:('a642 -> string -> int -> int -> 'a643 -> 'a644 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : document:('own) document_like ->  (event -> 'a645 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : document:('own) document_like -> onfocus:(event -> 'a646 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : document:('own) document_like ->  (event -> 'a647 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : document:('own) document_like -> oninput:(event -> 'a648 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : document:('own) document_like ->  (event -> 'a649 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : document:('own) document_like -> oninvalid:(event -> 'a650 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : document:('own) document_like ->  (event -> 'a651 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : document:('own) document_like -> onkeydown:(event -> 'a652 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : document:('own) document_like ->  (event -> 'a653 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : document:('own) document_like -> onkeypress:(event -> 'a654 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : document:('own) document_like ->  (event -> 'a655 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : document:('own) document_like -> onkeyup:(event -> 'a656 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : document:('own) document_like ->  (event -> 'a657 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : document:('own) document_like -> onload:(event -> 'a658 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : document:('own) document_like ->  (event -> 'a659 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : document:('own) document_like -> onloadeddata:(event -> 'a660 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : document:('own) document_like ->  (event -> 'a661 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : document:('own) document_like -> onloadedmetadata:(event -> 'a662 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : document:('own) document_like ->  (event -> 'a663 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : document:('own) document_like -> onloadstart:(event -> 'a664 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : document:('own) document_like ->  (event -> 'a665 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : document:('own) document_like -> onmousedown:(event -> 'a666 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : document:('own) document_like ->  (event -> 'a667 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : document:('own) document_like -> onmouseenter:(event -> 'a668 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : document:('own) document_like ->  (event -> 'a669 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : document:('own) document_like -> onmouseleave:(event -> 'a670 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : document:('own) document_like ->  (event -> 'a671 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : document:('own) document_like -> onmousemove:(event -> 'a672 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : document:('own) document_like ->  (event -> 'a673 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : document:('own) document_like -> onmouseout:(event -> 'a674 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : document:('own) document_like ->  (event -> 'a675 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : document:('own) document_like -> onmouseover:(event -> 'a676 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : document:('own) document_like ->  (event -> 'a677 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : document:('own) document_like -> onmouseup:(event -> 'a678 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : document:('own) document_like ->  (event -> 'a679 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : document:('own) document_like -> onwheel:(event -> 'a680 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : document:('own) document_like ->  (event -> 'a681 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : document:('own) document_like -> onpause:(event -> 'a682 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : document:('own) document_like ->  (event -> 'a683 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : document:('own) document_like -> onplay:(event -> 'a684 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : document:('own) document_like ->  (event -> 'a685 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : document:('own) document_like -> onplaying:(event -> 'a686 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : document:('own) document_like ->  (event -> 'a687 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : document:('own) document_like -> onprogress:(event -> 'a688 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : document:('own) document_like ->  (event -> 'a689 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : document:('own) document_like -> onratechange:(event -> 'a690 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : document:('own) document_like ->  (event -> 'a691 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : document:('own) document_like -> onreset:(event -> 'a692 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : document:('own) document_like ->  (event -> 'a693 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : document:('own) document_like -> onresize:(event -> 'a694 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : document:('own) document_like ->  (event -> 'a695 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : document:('own) document_like -> onscroll:(event -> 'a696 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : document:('own) document_like ->  (event -> 'a697 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : document:('own) document_like -> onseeked:(event -> 'a698 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : document:('own) document_like ->  (event -> 'a699 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : document:('own) document_like -> onseeking:(event -> 'a700 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : document:('own) document_like ->  (event -> 'a701 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : document:('own) document_like -> onselect:(event -> 'a702 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : document:('own) document_like ->  (event -> 'a703 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : document:('own) document_like -> onshow:(event -> 'a704 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : document:('own) document_like ->  (event -> 'a705 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : document:('own) document_like -> onstalled:(event -> 'a706 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : document:('own) document_like ->  (event -> 'a707 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : document:('own) document_like -> onsubmit:(event -> 'a708 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : document:('own) document_like ->  (event -> 'a709 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : document:('own) document_like -> onsuspend:(event -> 'a710 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : document:('own) document_like ->  (event -> 'a711 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : document:('own) document_like -> ontimeupdate:(event -> 'a712 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : document:('own) document_like ->  (event -> 'a713 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : document:('own) document_like -> ontoggle:(event -> 'a714 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : document:('own) document_like ->  (event -> 'a715 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : document:('own) document_like -> onvolumechange:(event -> 'a716 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : document:('own) document_like ->  (event -> 'a717 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : document:('own) document_like -> onwaiting:(event -> 'a718 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : document:('own) document_like ->  (event -> 'a719 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : document:('own) document_like -> ontransitionend:(event -> 'a720 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external children : document:('own) document_like ->  hTMLCollection = "children" [@@bs.get] 
    external firstElementChild : document:('own) document_like ->  element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : document:('own) document_like ->  element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : document:('own) document_like ->  int = "childElementCount" [@@bs.get] 
    external implementation : document:('own) document_like ->  dOMImplementation = "implementation" [@@bs.get] 
    external uRL : document:('own) document_like ->  string = "URL" [@@bs.get] 
    external documentURI : document:('own) document_like ->  string = "documentURI" [@@bs.get] 
    external compatMode : document:('own) document_like ->  string = "compatMode" [@@bs.get] 
    external characterSet : document:('own) document_like ->  string = "characterSet" [@@bs.get] 
    external charset : document:('own) document_like ->  string = "charset" [@@bs.get] 
    external inputEncoding : document:('own) document_like ->  string = "inputEncoding" [@@bs.get] 
    external contentType : document:('own) document_like ->  string = "contentType" [@@bs.get] 
    external doctype : document:('own) document_like ->  documentType option = "doctype" [@@bs.get] [@@bs.return null_to_opt]
    external documentElement : document:('own) document_like ->  element option = "documentElement" [@@bs.get] [@@bs.return null_to_opt]
    external location : document:('own) document_like ->  location option = "location" [@@bs.get] [@@bs.return null_to_opt]
    external domain : document:('own) document_like ->  string = "domain" [@@bs.get] 
    external setDomain : document:('own) document_like -> domain:string ->  unit = "domain" [@@bs.set]
    external referrer : document:('own) document_like ->  string = "referrer" [@@bs.get] 
    external cookie : document:('own) document_like ->  string = "cookie" [@@bs.get] 
    external setCookie : document:('own) document_like -> cookie:string ->  unit = "cookie" [@@bs.set]
    external lastModified : document:('own) document_like ->  string = "lastModified" [@@bs.get] 
    external readyState : document:('own) document_like ->  string = "readyState" [@@bs.get] 
    external title : document:('own) document_like ->  string = "title" [@@bs.get] 
    external setTitle : document:('own) document_like -> title:string ->  unit = "title" [@@bs.set]
    external body : document:('own) document_like ->  hTMLElement option = "body" [@@bs.get] [@@bs.return null_to_opt]
    external setBody : document:('own) document_like -> body:hTMLElement Js.null ->  unit = "body" [@@bs.set]
    external head : document:('own) document_like ->  hTMLHeadElement option = "head" [@@bs.get] [@@bs.return null_to_opt]
    external images : document:('own) document_like ->  hTMLCollection = "images" [@@bs.get] 
    external embeds : document:('own) document_like ->  hTMLCollection = "embeds" [@@bs.get] 
    external plugins : document:('own) document_like ->  hTMLCollection = "plugins" [@@bs.get] 
    external links : document:('own) document_like ->  hTMLCollection = "links" [@@bs.get] 
    external forms : document:('own) document_like ->  hTMLCollection = "forms" [@@bs.get] 
    external scripts : document:('own) document_like ->  hTMLCollection = "scripts" [@@bs.get] 
    external currentScript : document:('own) document_like ->  hTMLScriptElement option = "currentScript" [@@bs.get] [@@bs.return null_to_opt]
    external defaultView : document:('own) document_like ->  window option = "defaultView" [@@bs.get] [@@bs.return null_to_opt]
    external activeElement : document:('own) document_like ->  element option = "activeElement" [@@bs.get] [@@bs.return null_to_opt]
    external onreadystatechange : document:('own) document_like ->  (event -> 'a721 [@bs]) option = "onreadystatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreadystatechange : document:('own) document_like -> onreadystatechange:(event -> 'a722 [@bs]) Js.null ->  unit = "onreadystatechange" [@@bs.set]
    external fgColor : document:('own) document_like ->  string = "fgColor" [@@bs.get] 
    external setFgColor : document:('own) document_like -> fgColor:string ->  unit = "fgColor" [@@bs.set]
    external bgColor : document:('own) document_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : document:('own) document_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external anchors : document:('own) document_like ->  hTMLCollection = "anchors" [@@bs.get] 
    external applets : document:('own) document_like ->  hTMLCollection = "applets" [@@bs.get] 
    external styleSheets : document:('own) document_like ->  styleSheetList = "styleSheets" [@@bs.get] 
    external fullscreenEnabled : document:('own) document_like ->  bool = "fullscreenEnabled" [@@bs.get] 
    external fullscreenElement : document:('own) document_like ->  element option = "fullscreenElement" [@@bs.get] [@@bs.return null_to_opt]
    external fullscreen : document:('own) document_like ->  bool = "fullscreen" [@@bs.get] 
    external onfullscreenchange : document:('own) document_like ->  (event -> 'a723 [@bs]) option = "onfullscreenchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfullscreenchange : document:('own) document_like -> onfullscreenchange:(event -> 'a724 [@bs]) Js.null ->  unit = "onfullscreenchange" [@@bs.set]
    external onfullscreenerror : document:('own) document_like ->  (event -> 'a725 [@bs]) option = "onfullscreenerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfullscreenerror : document:('own) document_like -> onfullscreenerror:(event -> 'a726 [@bs]) Js.null ->  unit = "onfullscreenerror" [@@bs.set]
    external none : document:('own) document_like -> name:string ->  'a727 = "" [@@bs.get_index] 
    external adoptNode : node:(_) node_like ->  node = "adoptNode" [@@bs.send.pipe: ('own) document_like] 
    external append : document:('own) document_like ->  (('own) document_like, unit, ('a728)) variadic_func = "append" [@@bs.get]
    external captureEvents :  unit = "captureEvents" [@@bs.send.pipe: ('own) document_like] 
    external clear :  unit = "clear" [@@bs.send.pipe: ('own) document_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) document_like] 
    external createAttribute : localName:string ->  attr = "createAttribute" [@@bs.send.pipe: ('own) document_like] 
    external createAttributeNS : namespace:string Js.null -> qualifiedName:string ->  attr = "createAttributeNS" [@@bs.send.pipe: ('own) document_like] 
    external createComment : data:string ->  comment = "createComment" [@@bs.send.pipe: ('own) document_like] 
    external createDocumentFragment :  documentFragment = "createDocumentFragment" [@@bs.send.pipe: ('own) document_like] 
    external createElement : localName:string -> ?options:(_) elementCreationOptions_like Js.undefined ->  element = "createElement" [@@bs.send.pipe: ('own) document_like] 
    external createElementNS : namespace:string Js.null -> qualifiedName:string -> ?options:(_) elementCreationOptions_like Js.undefined ->  element = "createElementNS" [@@bs.send.pipe: ('own) document_like] 
    external createEvent : interface_:string ->  event = "createEvent" [@@bs.send.pipe: ('own) document_like] 
    external createNodeIterator : root:(_) node_like -> ?whatToShow:int Js.undefined -> ?filter:(_) nodeFilter_like Js.null Js.undefined ->  nodeIterator = "createNodeIterator" [@@bs.send.pipe: ('own) document_like] 
    external createProcessingInstruction : target:string -> data:string ->  processingInstruction = "createProcessingInstruction" [@@bs.send.pipe: ('own) document_like] 
    external createRange :  range = "createRange" [@@bs.send.pipe: ('own) document_like] 
    external createTextNode : data:string ->  text = "createTextNode" [@@bs.send.pipe: ('own) document_like] 
    external createTouch : view:(_) window_like -> target:(_) eventTarget_like -> identifier:int -> pageX:float -> pageY:float -> screenX:float -> screenY:float ->  touch = "createTouch" [@@bs.send.pipe: ('own) document_like] 
    external createTouchList : document:('own) document_like ->  (('own) document_like, touchList, ((_) touch_like)) variadic_func = "createTouchList" [@@bs.get]
    external createTreeWalker : root:(_) node_like -> ?whatToShow:int Js.undefined -> ?filter:(_) nodeFilter_like Js.null Js.undefined ->  treeWalker = "createTreeWalker" [@@bs.send.pipe: ('own) document_like] 
    external elementFromPoint : x:float -> y:float ->  element option = "elementFromPoint" [@@bs.send.pipe: ('own) document_like] [@@bs.return null_to_opt]
    external elementsFromPoint : x:float -> y:float ->  element array = "elementsFromPoint" [@@bs.send.pipe: ('own) document_like] 
    external exitFullscreen :  unit Js.Promise.t = "exitFullscreen" [@@bs.send.pipe: ('own) document_like] 
    external getElementById : elementId:string ->  element option = "getElementById" [@@bs.send.pipe: ('own) document_like] [@@bs.return null_to_opt]
    external getElementsByClassName : classNames:string ->  hTMLCollection = "getElementsByClassName" [@@bs.send.pipe: ('own) document_like] 
    external getElementsByName : elementName:string ->  nodeList = "getElementsByName" [@@bs.send.pipe: ('own) document_like] 
    external getElementsByTagName : qualifiedName:string ->  hTMLCollection = "getElementsByTagName" [@@bs.send.pipe: ('own) document_like] 
    external getElementsByTagNameNS : namespace:string Js.null -> qualifiedName:string ->  hTMLCollection = "getElementsByTagNameNS" [@@bs.send.pipe: ('own) document_like] 
    external hasFocus :  bool = "hasFocus" [@@bs.send.pipe: ('own) document_like] 
    external importNode : node:(_) node_like -> ?deep:Js.boolean Js.undefined ->  node = "importNode" [@@bs.send.pipe: ('own) document_like] 
    external open_ : ?type_:string Js.undefined -> ?replace:string Js.undefined ->  document = "open" [@@bs.send.pipe: ('own) document_like] 
    external prepend : document:('own) document_like ->  (('own) document_like, unit, ('a729)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  element option = "querySelector" [@@bs.send.pipe: ('own) document_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  nodeList = "querySelectorAll" [@@bs.send.pipe: ('own) document_like] 
    external releaseEvents :  unit = "releaseEvents" [@@bs.send.pipe: ('own) document_like] 
    external write : document:('own) document_like ->  (('own) document_like, unit, (string)) variadic_func = "write" [@@bs.get]
    external writeln : document:('own) document_like ->  (('own) document_like, unit, (string)) variadic_func = "writeln" [@@bs.get]
    
    let append ~nodes document =
      let func = append document in
      let args = to_arg nodes in
      apply func document args
    
    let append ~nodes document =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes document in
      return
    
    let createElement ~localName ?options document =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      createElement ~localName ~options document
    
    let createElementNS ~namespace ~qualifiedName ?options document =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      createElementNS ~namespace ~qualifiedName ~options document
    
    let createNodeIterator ~root ?whatToShow ?filter document =
      let conv_whatToShow = Js_undefined.from_opt in
      let whatToShow = conv_whatToShow whatToShow in
      let conv_filter = Js_undefined.from_opt in
      let filter = conv_filter filter in
      createNodeIterator ~root ~whatToShow ~filter document
    
    let createTouchList ~touches document =
      let func = createTouchList document in
      let args = to_arg touches in
      apply func document args
    
    let createTreeWalker ~root ?whatToShow ?filter document =
      let conv_whatToShow = Js_undefined.from_opt in
      let whatToShow = conv_whatToShow whatToShow in
      let conv_filter = Js_undefined.from_opt in
      let filter = conv_filter filter in
      createTreeWalker ~root ~whatToShow ~filter document
    
    let importNode ~node ?deep document =
      let conv_deep = Js_undefined.from_opt in
      let deep = conv_deep deep in
      importNode ~node ~deep document
    
    let open_ ?type_ ?replace document =
      let conv_type = Js_undefined.from_opt in
      let type_ = conv_type type_ in
      let conv_replace = Js_undefined.from_opt in
      let replace = conv_replace replace in
      open_ ~type_ ~replace document
    
    let prepend ~nodes document =
      let func = prepend document in
      let args = to_arg nodes in
      apply func document args
    
    let prepend ~nodes document =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes document in
      return
    
    let write ~text document =
      let func = write document in
      let args = to_arg text in
      apply func document args
    
    let writeln ~text document =
      let func = writeln document in
      let args = to_arg text in
      apply func document args
    
end
 module CharacterData = struct
    include Node
    
    external previousElementSibling : characterData:('own) characterData_like ->  element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : characterData:('own) characterData_like ->  element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external data : characterData:('own) characterData_like ->  string = "data" [@@bs.get] 
    external setData : characterData:('own) characterData_like -> data:string ->  unit = "data" [@@bs.set]
    external length : characterData:('own) characterData_like ->  int = "length" [@@bs.get] 
    external after : characterData:('own) characterData_like ->  (('own) characterData_like, unit, ('a730)) variadic_func = "after" [@@bs.get]
    external appendData : data:string ->  unit = "appendData" [@@bs.send.pipe: ('own) characterData_like] 
    external before : characterData:('own) characterData_like ->  (('own) characterData_like, unit, ('a731)) variadic_func = "before" [@@bs.get]
    external deleteData : offset:int -> count:int ->  unit = "deleteData" [@@bs.send.pipe: ('own) characterData_like] 
    external insertData : offset:int -> data:string ->  unit = "insertData" [@@bs.send.pipe: ('own) characterData_like] 
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) characterData_like] 
    external replaceData : offset:int -> count:int -> data:string ->  unit = "replaceData" [@@bs.send.pipe: ('own) characterData_like] 
    external replaceWith : characterData:('own) characterData_like ->  (('own) characterData_like, unit, ('a732)) variadic_func = "replaceWith" [@@bs.get]
    external substringData : offset:int -> count:int ->  string = "substringData" [@@bs.send.pipe: ('own) characterData_like] 
    
    let after ~nodes characterData =
      let func = after characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let after ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes characterData in
      return
    
    let before ~nodes characterData =
      let func = before characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let before ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes characterData in
      return
    
    let replaceWith ~nodes characterData =
      let func = replaceWith characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let replaceWith ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes characterData in
      return
    
end
 module MouseEvent = struct
    include UIEvent
    
    external screenX : mouseEvent:('own) mouseEvent_like ->  int = "screenX" [@@bs.get] 
    external screenY : mouseEvent:('own) mouseEvent_like ->  int = "screenY" [@@bs.get] 
    external clientX : mouseEvent:('own) mouseEvent_like ->  int = "clientX" [@@bs.get] 
    external clientY : mouseEvent:('own) mouseEvent_like ->  int = "clientY" [@@bs.get] 
    external ctrlKey : mouseEvent:('own) mouseEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : mouseEvent:('own) mouseEvent_like ->  bool = "shiftKey" [@@bs.get] 
    external altKey : mouseEvent:('own) mouseEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : mouseEvent:('own) mouseEvent_like ->  bool = "metaKey" [@@bs.get] 
    external button : mouseEvent:('own) mouseEvent_like ->  int = "button" [@@bs.get] 
    external relatedTarget : mouseEvent:('own) mouseEvent_like ->  eventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external which : mouseEvent:('own) mouseEvent_like ->  int = "which" [@@bs.get] 
    external initMouseEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) window_like Js.null -> detailArg:int -> screenXArg:int -> screenYArg:int -> clientXArg:int -> clientYArg:int -> ctrlKeyArg:Js.boolean -> altKeyArg:Js.boolean -> shiftKeyArg:Js.boolean -> metaKeyArg:Js.boolean -> buttonArg:int -> relatedTargetArg:(_) eventTarget_like Js.null ->  unit = "initMouseEvent" [@@bs.send.pipe: ('own) mouseEvent_like] 
    
    
end
 module Element = struct
    include Node
    
    external children : element:('own) element_like ->  hTMLCollection = "children" [@@bs.get] 
    external firstElementChild : element:('own) element_like ->  element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : element:('own) element_like ->  element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : element:('own) element_like ->  int = "childElementCount" [@@bs.get] 
    external previousElementSibling : element:('own) element_like ->  element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : element:('own) element_like ->  element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external namespaceURI : element:('own) element_like ->  string option = "namespaceURI" [@@bs.get] [@@bs.return null_to_opt]
    external prefix : element:('own) element_like ->  string option = "prefix" [@@bs.get] [@@bs.return null_to_opt]
    external localName : element:('own) element_like ->  string = "localName" [@@bs.get] 
    external tagName : element:('own) element_like ->  string = "tagName" [@@bs.get] 
    external id : element:('own) element_like ->  string = "id" [@@bs.get] 
    external setId : element:('own) element_like -> id:string ->  unit = "id" [@@bs.set]
    external className : element:('own) element_like ->  string = "className" [@@bs.get] 
    external setClassName : element:('own) element_like -> className:string ->  unit = "className" [@@bs.set]
    external classList : element:('own) element_like ->  dOMTokenList = "classList" [@@bs.get] 
    external attributes : element:('own) element_like ->  namedNodeMap = "attributes" [@@bs.get] 
    external scrollTop : element:('own) element_like ->  float = "scrollTop" [@@bs.get] 
    external setScrollTop : element:('own) element_like -> scrollTop:float ->  unit = "scrollTop" [@@bs.set]
    external scrollLeft : element:('own) element_like ->  float = "scrollLeft" [@@bs.get] 
    external setScrollLeft : element:('own) element_like -> scrollLeft:float ->  unit = "scrollLeft" [@@bs.set]
    external scrollWidth : element:('own) element_like ->  int = "scrollWidth" [@@bs.get] 
    external scrollHeight : element:('own) element_like ->  int = "scrollHeight" [@@bs.get] 
    external clientTop : element:('own) element_like ->  int = "clientTop" [@@bs.get] 
    external clientLeft : element:('own) element_like ->  int = "clientLeft" [@@bs.get] 
    external clientWidth : element:('own) element_like ->  int = "clientWidth" [@@bs.get] 
    external clientHeight : element:('own) element_like ->  int = "clientHeight" [@@bs.get] 
    external innerHTML : element:('own) element_like ->  string = "innerHTML" [@@bs.get] 
    external setInnerHTML : element:('own) element_like -> innerHTML:string ->  unit = "innerHTML" [@@bs.set]
    external outerHTML : element:('own) element_like ->  string = "outerHTML" [@@bs.get] 
    external setOuterHTML : element:('own) element_like -> outerHTML:string ->  unit = "outerHTML" [@@bs.set]
    external after : element:('own) element_like ->  (('own) element_like, unit, ('a733)) variadic_func = "after" [@@bs.get]
    external append : element:('own) element_like ->  (('own) element_like, unit, ('a734)) variadic_func = "append" [@@bs.get]
    external before : element:('own) element_like ->  (('own) element_like, unit, ('a735)) variadic_func = "before" [@@bs.get]
    external closest : selectors:string ->  element option = "closest" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external enterFormalActivationState :  unit = "enterFormalActivationState" [@@bs.send.pipe: ('own) element_like] 
    external exitFormalActivationState :  unit = "exitFormalActivationState" [@@bs.send.pipe: ('own) element_like] 
    external getAttribute : name:string ->  string option = "getAttribute" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external getAttributeNS : namespace:string Js.null -> localName:string ->  string option = "getAttributeNS" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external getAttributeNames :  string array = "getAttributeNames" [@@bs.send.pipe: ('own) element_like] 
    external getAttributeNode : name:string ->  attr option = "getAttributeNode" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external getAttributeNodeNS : namespace:string Js.null -> localName:string ->  attr option = "getAttributeNodeNS" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external getBoundingClientRect :  dOMRect = "getBoundingClientRect" [@@bs.send.pipe: ('own) element_like] 
    external getClientRects :  dOMRect array = "getClientRects" [@@bs.send.pipe: ('own) element_like] 
    external getElementsByClassName : classNames:string ->  hTMLCollection = "getElementsByClassName" [@@bs.send.pipe: ('own) element_like] 
    external getElementsByTagName : localName:string ->  hTMLCollection = "getElementsByTagName" [@@bs.send.pipe: ('own) element_like] 
    external getElementsByTagNameNS : namespace:string Js.null -> localName:string ->  hTMLCollection = "getElementsByTagNameNS" [@@bs.send.pipe: ('own) element_like] 
    external hasAttribute : name:string ->  bool = "hasAttribute" [@@bs.send.pipe: ('own) element_like] 
    external hasAttributeNS : namespace:string Js.null -> localName:string ->  bool = "hasAttributeNS" [@@bs.send.pipe: ('own) element_like] 
    external hasAttributes :  bool = "hasAttributes" [@@bs.send.pipe: ('own) element_like] 
    external insertAdjacentElement : where_:string -> element:(_) element_like ->  element option = "insertAdjacentElement" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external insertAdjacentHTML : position:string -> html:string ->  unit = "insertAdjacentHTML" [@@bs.send.pipe: ('own) element_like] 
    external insertAdjacentText : where_:string -> data:string ->  unit = "insertAdjacentText" [@@bs.send.pipe: ('own) element_like] 
    external matches : selectors:string ->  bool = "matches" [@@bs.send.pipe: ('own) element_like] 
    external prepend : element:('own) element_like ->  (('own) element_like, unit, ('a736)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  element option = "querySelector" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  nodeList = "querySelectorAll" [@@bs.send.pipe: ('own) element_like] 
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) element_like] 
    external removeAttribute : name:string ->  unit = "removeAttribute" [@@bs.send.pipe: ('own) element_like] 
    external removeAttributeNS : namespace:string Js.null -> localName:string ->  unit = "removeAttributeNS" [@@bs.send.pipe: ('own) element_like] 
    external removeAttributeNode : oldAttr:(_) attr_like ->  attr = "removeAttributeNode" [@@bs.send.pipe: ('own) element_like] 
    external replaceWith : element:('own) element_like ->  (('own) element_like, unit, ('a737)) variadic_func = "replaceWith" [@@bs.get]
    external requestFullscreen :  unit Js.Promise.t = "requestFullscreen" [@@bs.send.pipe: ('own) element_like] 
    external scroll : x:float -> y:float ->  unit = "scroll" [@@bs.send.pipe: ('own) element_like] 
    external scrollBy : x:float -> y:float ->  unit = "scrollBy" [@@bs.send.pipe: ('own) element_like] 
    external scrollTo : x:float -> y:float ->  unit = "scrollTo" [@@bs.send.pipe: ('own) element_like] 
    external setAttribute : name:string -> value:string ->  unit = "setAttribute" [@@bs.send.pipe: ('own) element_like] 
    external setAttributeNS : namespace:string Js.null -> name:string -> value:string ->  unit = "setAttributeNS" [@@bs.send.pipe: ('own) element_like] 
    external setAttributeNode : attr:(_) attr_like ->  attr option = "setAttributeNode" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external setAttributeNodeNS : attr:(_) attr_like ->  attr option = "setAttributeNodeNS" [@@bs.send.pipe: ('own) element_like] [@@bs.return null_to_opt]
    external webkitMatchesSelector : selectors:string ->  bool = "webkitMatchesSelector" [@@bs.send.pipe: ('own) element_like] 
    
    let after ~nodes element =
      let func = after element in
      let args = to_arg nodes in
      apply func element args
    
    let after ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes element in
      return
    
    let append ~nodes element =
      let func = append element in
      let args = to_arg nodes in
      apply func element args
    
    let append ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes element in
      return
    
    let before ~nodes element =
      let func = before element in
      let args = to_arg nodes in
      apply func element args
    
    let before ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes element in
      return
    
    let prepend ~nodes element =
      let func = prepend element in
      let args = to_arg nodes in
      apply func element args
    
    let prepend ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes element in
      return
    
    let replaceWith ~nodes element =
      let func = replaceWith element in
      let args = to_arg nodes in
      apply func element args
    
    let replaceWith ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes element in
      return
    
end
 module FocusEvent = struct
    include UIEvent
    
    external relatedTarget : focusEvent:('own) focusEvent_like ->  eventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module Window = struct
    include GlobalScope
    
    external localStorage : window:('own) window_like ->  storage = "localStorage" [@@bs.get] 
    external sessionStorage : window:('own) window_like ->  storage = "sessionStorage" [@@bs.get] 
    external onafterprint : window:('own) window_like ->  (event -> 'a738 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : window:('own) window_like -> onafterprint:(event -> 'a739 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : window:('own) window_like ->  (event -> 'a740 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : window:('own) window_like -> onbeforeprint:(event -> 'a741 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : window:('own) window_like ->  (event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : window:('own) window_like -> onbeforeunload:(event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : window:('own) window_like ->  (event -> 'a742 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : window:('own) window_like -> onhashchange:(event -> 'a743 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : window:('own) window_like ->  (event -> 'a744 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : window:('own) window_like -> onlanguagechange:(event -> 'a745 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : window:('own) window_like ->  (event -> 'a746 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : window:('own) window_like -> onmessage:(event -> 'a747 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : window:('own) window_like ->  (event -> 'a748 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : window:('own) window_like -> onoffline:(event -> 'a749 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : window:('own) window_like ->  (event -> 'a750 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : window:('own) window_like -> ononline:(event -> 'a751 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : window:('own) window_like ->  (event -> 'a752 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : window:('own) window_like -> onpagehide:(event -> 'a753 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : window:('own) window_like ->  (event -> 'a754 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : window:('own) window_like -> onpageshow:(event -> 'a755 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : window:('own) window_like ->  (event -> 'a756 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : window:('own) window_like -> onpopstate:(event -> 'a757 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : window:('own) window_like ->  (event -> 'a758 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : window:('own) window_like -> onrejectionhandled:(event -> 'a759 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : window:('own) window_like ->  (event -> 'a760 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : window:('own) window_like -> onstorage:(event -> 'a761 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : window:('own) window_like ->  (event -> 'a762 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : window:('own) window_like -> onunhandledrejection:(event -> 'a763 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : window:('own) window_like ->  (event -> 'a764 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : window:('own) window_like -> onunload:(event -> 'a765 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    external onabort : window:('own) window_like ->  (event -> 'a766 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : window:('own) window_like -> onabort:(event -> 'a767 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : window:('own) window_like ->  (event -> 'a768 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : window:('own) window_like -> onblur:(event -> 'a769 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : window:('own) window_like ->  (event -> 'a770 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : window:('own) window_like -> oncancel:(event -> 'a771 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : window:('own) window_like ->  (event -> 'a772 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : window:('own) window_like -> oncanplay:(event -> 'a773 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : window:('own) window_like ->  (event -> 'a774 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : window:('own) window_like -> oncanplaythrough:(event -> 'a775 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : window:('own) window_like ->  (event -> 'a776 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : window:('own) window_like -> onchange:(event -> 'a777 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : window:('own) window_like ->  (event -> 'a778 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : window:('own) window_like -> onclick:(event -> 'a779 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : window:('own) window_like ->  (event -> 'a780 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : window:('own) window_like -> onclose:(event -> 'a781 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : window:('own) window_like ->  (event -> 'a782 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : window:('own) window_like -> oncontextmenu:(event -> 'a783 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : window:('own) window_like ->  (event -> 'a784 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : window:('own) window_like -> oncuechange:(event -> 'a785 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : window:('own) window_like ->  (event -> 'a786 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : window:('own) window_like -> ondblclick:(event -> 'a787 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : window:('own) window_like ->  (event -> 'a788 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : window:('own) window_like -> ondrag:(event -> 'a789 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : window:('own) window_like ->  (event -> 'a790 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : window:('own) window_like -> ondragend:(event -> 'a791 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : window:('own) window_like ->  (event -> 'a792 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : window:('own) window_like -> ondragenter:(event -> 'a793 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : window:('own) window_like ->  (event -> 'a794 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : window:('own) window_like -> ondragexit:(event -> 'a795 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : window:('own) window_like ->  (event -> 'a796 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : window:('own) window_like -> ondragleave:(event -> 'a797 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : window:('own) window_like ->  (event -> 'a798 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : window:('own) window_like -> ondragover:(event -> 'a799 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : window:('own) window_like ->  (event -> 'a800 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : window:('own) window_like -> ondragstart:(event -> 'a801 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : window:('own) window_like ->  (event -> 'a802 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : window:('own) window_like -> ondrop:(event -> 'a803 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : window:('own) window_like ->  (event -> 'a804 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : window:('own) window_like -> ondurationchange:(event -> 'a805 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : window:('own) window_like ->  (event -> 'a806 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : window:('own) window_like -> onemptied:(event -> 'a807 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : window:('own) window_like ->  (event -> 'a808 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : window:('own) window_like -> onended:(event -> 'a809 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : window:('own) window_like ->  ('a810 -> string -> int -> int -> 'a811 -> 'a812 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : window:('own) window_like -> onerror:('a813 -> string -> int -> int -> 'a814 -> 'a815 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : window:('own) window_like ->  (event -> 'a816 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : window:('own) window_like -> onfocus:(event -> 'a817 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : window:('own) window_like ->  (event -> 'a818 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : window:('own) window_like -> oninput:(event -> 'a819 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : window:('own) window_like ->  (event -> 'a820 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : window:('own) window_like -> oninvalid:(event -> 'a821 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : window:('own) window_like ->  (event -> 'a822 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : window:('own) window_like -> onkeydown:(event -> 'a823 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : window:('own) window_like ->  (event -> 'a824 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : window:('own) window_like -> onkeypress:(event -> 'a825 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : window:('own) window_like ->  (event -> 'a826 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : window:('own) window_like -> onkeyup:(event -> 'a827 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : window:('own) window_like ->  (event -> 'a828 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : window:('own) window_like -> onload:(event -> 'a829 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : window:('own) window_like ->  (event -> 'a830 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : window:('own) window_like -> onloadeddata:(event -> 'a831 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : window:('own) window_like ->  (event -> 'a832 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : window:('own) window_like -> onloadedmetadata:(event -> 'a833 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : window:('own) window_like ->  (event -> 'a834 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : window:('own) window_like -> onloadstart:(event -> 'a835 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : window:('own) window_like ->  (event -> 'a836 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : window:('own) window_like -> onmousedown:(event -> 'a837 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : window:('own) window_like ->  (event -> 'a838 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : window:('own) window_like -> onmouseenter:(event -> 'a839 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : window:('own) window_like ->  (event -> 'a840 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : window:('own) window_like -> onmouseleave:(event -> 'a841 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : window:('own) window_like ->  (event -> 'a842 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : window:('own) window_like -> onmousemove:(event -> 'a843 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : window:('own) window_like ->  (event -> 'a844 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : window:('own) window_like -> onmouseout:(event -> 'a845 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : window:('own) window_like ->  (event -> 'a846 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : window:('own) window_like -> onmouseover:(event -> 'a847 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : window:('own) window_like ->  (event -> 'a848 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : window:('own) window_like -> onmouseup:(event -> 'a849 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : window:('own) window_like ->  (event -> 'a850 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : window:('own) window_like -> onwheel:(event -> 'a851 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : window:('own) window_like ->  (event -> 'a852 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : window:('own) window_like -> onpause:(event -> 'a853 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : window:('own) window_like ->  (event -> 'a854 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : window:('own) window_like -> onplay:(event -> 'a855 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : window:('own) window_like ->  (event -> 'a856 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : window:('own) window_like -> onplaying:(event -> 'a857 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : window:('own) window_like ->  (event -> 'a858 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : window:('own) window_like -> onprogress:(event -> 'a859 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : window:('own) window_like ->  (event -> 'a860 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : window:('own) window_like -> onratechange:(event -> 'a861 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : window:('own) window_like ->  (event -> 'a862 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : window:('own) window_like -> onreset:(event -> 'a863 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : window:('own) window_like ->  (event -> 'a864 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : window:('own) window_like -> onresize:(event -> 'a865 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : window:('own) window_like ->  (event -> 'a866 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : window:('own) window_like -> onscroll:(event -> 'a867 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : window:('own) window_like ->  (event -> 'a868 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : window:('own) window_like -> onseeked:(event -> 'a869 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : window:('own) window_like ->  (event -> 'a870 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : window:('own) window_like -> onseeking:(event -> 'a871 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : window:('own) window_like ->  (event -> 'a872 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : window:('own) window_like -> onselect:(event -> 'a873 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : window:('own) window_like ->  (event -> 'a874 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : window:('own) window_like -> onshow:(event -> 'a875 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : window:('own) window_like ->  (event -> 'a876 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : window:('own) window_like -> onstalled:(event -> 'a877 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : window:('own) window_like ->  (event -> 'a878 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : window:('own) window_like -> onsubmit:(event -> 'a879 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : window:('own) window_like ->  (event -> 'a880 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : window:('own) window_like -> onsuspend:(event -> 'a881 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : window:('own) window_like ->  (event -> 'a882 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : window:('own) window_like -> ontimeupdate:(event -> 'a883 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : window:('own) window_like ->  (event -> 'a884 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : window:('own) window_like -> ontoggle:(event -> 'a885 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : window:('own) window_like ->  (event -> 'a886 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : window:('own) window_like -> onvolumechange:(event -> 'a887 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : window:('own) window_like ->  (event -> 'a888 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : window:('own) window_like -> onwaiting:(event -> 'a889 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : window:('own) window_like ->  (event -> 'a890 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : window:('own) window_like -> ontransitionend:(event -> 'a891 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external crypto : window:('own) window_like ->  crypto = "crypto" [@@bs.get] 
    external window : window:('own) window_like ->  windowProxy = "window" [@@bs.get] 
    external self : window:('own) window_like ->  windowProxy = "self" [@@bs.get] 
    external document : window:('own) window_like ->  document = "document" [@@bs.get] 
    external location : window:('own) window_like ->  location = "location" [@@bs.get] 
    external history : window:('own) window_like ->  history = "history" [@@bs.get] 
    external customElements : window:('own) window_like ->  customElementRegistry = "customElements" [@@bs.get] 
    external status : window:('own) window_like ->  string = "status" [@@bs.get] 
    external setStatus : window:('own) window_like -> status:string ->  unit = "status" [@@bs.set]
    external closed_ : window:('own) window_like ->  bool = "closed" [@@bs.get] 
    external frames : window:('own) window_like ->  windowProxy = "frames" [@@bs.get] 
    external top : window:('own) window_like ->  windowProxy option = "top" [@@bs.get] [@@bs.return null_to_opt]
    external parent : window:('own) window_like ->  windowProxy option = "parent" [@@bs.get] [@@bs.return null_to_opt]
    external frameElement : window:('own) window_like ->  element option = "frameElement" [@@bs.get] [@@bs.return null_to_opt]
    external navigator : window:('own) window_like ->  navigator = "navigator" [@@bs.get] 
    external performance : window:('own) window_like ->  performance = "performance" [@@bs.get] 
    external screen : window:('own) window_like ->  screen = "screen" [@@bs.get] 
    external innerWidth : window:('own) window_like ->  int = "innerWidth" [@@bs.get] 
    external innerHeight : window:('own) window_like ->  int = "innerHeight" [@@bs.get] 
    external scrollX : window:('own) window_like ->  int = "scrollX" [@@bs.get] 
    external pageXOffset : window:('own) window_like ->  int = "pageXOffset" [@@bs.get] 
    external scrollY : window:('own) window_like ->  int = "scrollY" [@@bs.get] 
    external pageYOffset : window:('own) window_like ->  int = "pageYOffset" [@@bs.get] 
    external screenX : window:('own) window_like ->  int = "screenX" [@@bs.get] 
    external screenY : window:('own) window_like ->  int = "screenY" [@@bs.get] 
    external outerWidth : window:('own) window_like ->  int = "outerWidth" [@@bs.get] 
    external outerHeight : window:('own) window_like ->  int = "outerHeight" [@@bs.get] 
    external devicePixelRatio : window:('own) window_like ->  float = "devicePixelRatio" [@@bs.get] 
    external testRunner : window:('own) window_like ->  testRunner = "testRunner" [@@bs.get] 
    external paintWorklet : window:('own) window_like ->  worklet = "paintWorklet" [@@bs.get] 
    external alert : message:string ->  unit = "alert" [@@bs.send.pipe: ('own) window_like] 
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) window_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) window_like] 
    external cancelAnimationFrame : handle:int ->  unit = "cancelAnimationFrame" [@@bs.send.pipe: ('own) window_like] 
    external captureEvents :  unit = "captureEvents" [@@bs.send.pipe: ('own) window_like] 
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) window_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) window_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) window_like] 
    external debug : arg:string ->  unit = "debug" [@@bs.send.pipe: ('own) window_like] 
    external fetch : input:'a892 -> ?init:(_) requestInit_like Js.undefined ->  response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) window_like] 
    external gc :  unit = "gc" [@@bs.send.pipe: ('own) window_like] 
    external getComputedStyle : elt:(_) element_like -> ?pseudoElt:string Js.undefined ->  cSSStyleDeclaration = "getComputedStyle" [@@bs.send.pipe: ('own) window_like] 
    external matchMedia : query:string ->  mediaQueryList = "matchMedia" [@@bs.send.pipe: ('own) window_like] 
    external moveBy : x:int -> y:int ->  unit = "moveBy" [@@bs.send.pipe: ('own) window_like] 
    external moveTo : x:int -> y:int ->  unit = "moveTo" [@@bs.send.pipe: ('own) window_like] 
    external openURLInDefaultBrowser : href:string ->  unit = "openURLInDefaultBrowser" [@@bs.send.pipe: ('own) window_like] 
    external postMessage : message:'a893 -> targetOrigin:string ->  unit = "postMessage" [@@bs.send.pipe: ('own) window_like] 
    external releaseEvents :  unit = "releaseEvents" [@@bs.send.pipe: ('own) window_like] 
    external requestAnimationFrame : callback:(float -> unit [@bs]) ->  int = "requestAnimationFrame" [@@bs.send.pipe: ('own) window_like] 
    external resizeBy : x:int -> y:int ->  unit = "resizeBy" [@@bs.send.pipe: ('own) window_like] 
    external resizeTo : x:int -> y:int ->  unit = "resizeTo" [@@bs.send.pipe: ('own) window_like] 
    external scroll : x:float -> y:float ->  unit = "scroll" [@@bs.send.pipe: ('own) window_like] 
    external scrollBy : x:float -> y:float ->  unit = "scrollBy" [@@bs.send.pipe: ('own) window_like] 
    external scrollTo : x:float -> y:float ->  unit = "scrollTo" [@@bs.send.pipe: ('own) window_like] 
    external setInterval : window:('own) window_like ->  (('own) window_like, int, ('a894*(int Js.undefined*('a895)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : window:('own) window_like ->  (('own) window_like, int, ('a896*(int Js.undefined*('a897)))) variadic_func = "setTimeout" [@@bs.get]
    external trap :  unit = "trap" [@@bs.send.pipe: ('own) window_like] 
    external webdriverCallback : ?result:'a898 Js.undefined ->  unit = "webdriverCallback" [@@bs.send.pipe: ('own) window_like] 
    external webdriverTimeout :  unit = "webdriverTimeout" [@@bs.send.pipe: ('own) window_like] 
    
    let clearInterval ?handle window =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle window
    
    let clearTimeout ?handle window =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle window
    
    let fetch ~input ~init window =
      let conv_input = function
        | `Request (x: (_) request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init window in
      return
    
    let fetch ~input ?init window =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init window
    
    let getComputedStyle ~elt ?pseudoElt window =
      let conv_pseudoElt = Js_undefined.from_opt in
      let pseudoElt = conv_pseudoElt pseudoElt in
      getComputedStyle ~elt ~pseudoElt window
    
    let setInterval ~handler ~timeout ~arguments window =
      let func = setInterval window in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func window args
    
    let setInterval ~handler ~timeout ~arguments window =
      let conv_handler = function
        | `Callback (x: ('a899 -> 'a900 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments window in
      return
    
    let setInterval ~handler ?timeout ~arguments window =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments window
    
    let setTimeout ~handler ~timeout ~arguments window =
      let func = setTimeout window in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func window args
    
    let setTimeout ~handler ~timeout ~arguments window =
      let conv_handler = function
        | `Callback (x: ('a901 -> 'a902 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments window in
      return
    
    let setTimeout ~handler ?timeout ~arguments window =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments window
    
    let webdriverCallback ?result window =
      let conv_result = Js_undefined.from_opt in
      let result = conv_result result in
      webdriverCallback ~result window
    
end
 module WorkerGlobalScope = struct
    include GlobalScope
    
    external crypto : workerGlobalScope:('own) workerGlobalScope_like ->  crypto = "crypto" [@@bs.get] 
    external self : workerGlobalScope:('own) workerGlobalScope_like ->  workerGlobalScope = "self" [@@bs.get] 
    external location : workerGlobalScope:('own) workerGlobalScope_like ->  workerLocation = "location" [@@bs.get] 
    external onerror : workerGlobalScope:('own) workerGlobalScope_like ->  ('a903 -> string -> int -> int -> 'a904 -> 'a905 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : workerGlobalScope:('own) workerGlobalScope_like -> onerror:('a906 -> string -> int -> int -> 'a907 -> 'a908 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external navigator : workerGlobalScope:('own) workerGlobalScope_like ->  workerNavigator = "navigator" [@@bs.get] 
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) workerGlobalScope_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) workerGlobalScope_like] 
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) workerGlobalScope_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) workerGlobalScope_like] 
    external fetch : input:'a909 -> ?init:(_) requestInit_like Js.undefined ->  response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) workerGlobalScope_like] 
    external importScripts : workerGlobalScope:('own) workerGlobalScope_like ->  (('own) workerGlobalScope_like, unit, (string)) variadic_func = "importScripts" [@@bs.get]
    external setInterval : workerGlobalScope:('own) workerGlobalScope_like ->  (('own) workerGlobalScope_like, int, ('a910*(int Js.undefined*('a911)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : workerGlobalScope:('own) workerGlobalScope_like ->  (('own) workerGlobalScope_like, int, ('a912*(int Js.undefined*('a913)))) variadic_func = "setTimeout" [@@bs.get]
    
    let clearInterval ?handle workerGlobalScope =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle workerGlobalScope
    
    let clearTimeout ?handle workerGlobalScope =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle workerGlobalScope
    
    let fetch ~input ~init workerGlobalScope =
      let conv_input = function
        | `Request (x: (_) request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init workerGlobalScope in
      return
    
    let fetch ~input ?init workerGlobalScope =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init workerGlobalScope
    
    let importScripts ~urls workerGlobalScope =
      let func = importScripts workerGlobalScope in
      let args = to_arg urls in
      apply func workerGlobalScope args
    
    let setInterval ~handler ~timeout ~arguments workerGlobalScope =
      let func = setInterval workerGlobalScope in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func workerGlobalScope args
    
    let setInterval ~handler ~timeout ~arguments workerGlobalScope =
      let conv_handler = function
        | `Callback (x: ('a914 -> 'a915 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments workerGlobalScope in
      return
    
    let setInterval ~handler ?timeout ~arguments workerGlobalScope =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments workerGlobalScope
    
    let setTimeout ~handler ~timeout ~arguments workerGlobalScope =
      let func = setTimeout workerGlobalScope in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func workerGlobalScope args
    
    let setTimeout ~handler ~timeout ~arguments workerGlobalScope =
      let conv_handler = function
        | `Callback (x: ('a916 -> 'a917 [@bs])) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments workerGlobalScope in
      return
    
    let setTimeout ~handler ?timeout ~arguments workerGlobalScope =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments workerGlobalScope
    
end
 module WorkletGlobalScope = struct
    include GlobalScope
    
    
    
    
end
 module ExtendableMessageEventInit = struct
    include ExtendableEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?data:'a918 -> ?origin:string -> ?lastEventId:string -> unit ->  extendableMessageEventInit = "" [@@bs.obj]
    external data : extendableMessageEventInit:('own) extendableMessageEventInit_like ->  'a919 = "data" [@@bs.get] 
    external setData : extendableMessageEventInit:('own) extendableMessageEventInit_like -> data:'a920 ->  unit = "data" [@@bs.set]
    external origin : extendableMessageEventInit:('own) extendableMessageEventInit_like ->  string = "origin" [@@bs.get] 
    external setOrigin : extendableMessageEventInit:('own) extendableMessageEventInit_like -> origin:string ->  unit = "origin" [@@bs.set]
    external lastEventId : extendableMessageEventInit:('own) extendableMessageEventInit_like ->  string = "lastEventId" [@@bs.get] 
    external setLastEventId : extendableMessageEventInit:('own) extendableMessageEventInit_like -> lastEventId:string ->  unit = "lastEventId" [@@bs.set]
    
    
end
 module EventModifierInit = struct
    include UIEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> unit ->  eventModifierInit = "" [@@bs.obj]
    external ctrlKey : eventModifierInit:('own) eventModifierInit_like ->  bool = "ctrlKey" [@@bs.get] 
    external setCtrlKey : eventModifierInit:('own) eventModifierInit_like -> ctrlKey:Js.boolean ->  unit = "ctrlKey" [@@bs.set]
    external shiftKey : eventModifierInit:('own) eventModifierInit_like ->  bool = "shiftKey" [@@bs.get] 
    external setShiftKey : eventModifierInit:('own) eventModifierInit_like -> shiftKey:Js.boolean ->  unit = "shiftKey" [@@bs.set]
    external altKey : eventModifierInit:('own) eventModifierInit_like ->  bool = "altKey" [@@bs.get] 
    external setAltKey : eventModifierInit:('own) eventModifierInit_like -> altKey:Js.boolean ->  unit = "altKey" [@@bs.set]
    external metaKey : eventModifierInit:('own) eventModifierInit_like ->  bool = "metaKey" [@@bs.get] 
    external setMetaKey : eventModifierInit:('own) eventModifierInit_like -> metaKey:Js.boolean ->  unit = "metaKey" [@@bs.set]
    external keyModifierStateAltGraph : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateAltGraph" [@@bs.get] 
    external setKeyModifierStateAltGraph : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateAltGraph:Js.boolean ->  unit = "keyModifierStateAltGraph" [@@bs.set]
    external keyModifierStateCapsLock : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateCapsLock" [@@bs.get] 
    external setKeyModifierStateCapsLock : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateCapsLock:Js.boolean ->  unit = "keyModifierStateCapsLock" [@@bs.set]
    external keyModifierStateFn : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateFn" [@@bs.get] 
    external setKeyModifierStateFn : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateFn:Js.boolean ->  unit = "keyModifierStateFn" [@@bs.set]
    external keyModifierStateFnLock : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateFnLock" [@@bs.get] 
    external setKeyModifierStateFnLock : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateFnLock:Js.boolean ->  unit = "keyModifierStateFnLock" [@@bs.set]
    external keyModifierStateHyper : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateHyper" [@@bs.get] 
    external setKeyModifierStateHyper : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateHyper:Js.boolean ->  unit = "keyModifierStateHyper" [@@bs.set]
    external keyModifierStateNumLock : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateNumLock" [@@bs.get] 
    external setKeyModifierStateNumLock : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateNumLock:Js.boolean ->  unit = "keyModifierStateNumLock" [@@bs.set]
    external keyModifierStateOS : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateOS" [@@bs.get] 
    external setKeyModifierStateOS : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateOS:Js.boolean ->  unit = "keyModifierStateOS" [@@bs.set]
    external keyModifierStateScrollLock : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateScrollLock" [@@bs.get] 
    external setKeyModifierStateScrollLock : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateScrollLock:Js.boolean ->  unit = "keyModifierStateScrollLock" [@@bs.set]
    external keyModifierStateSuper : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateSuper" [@@bs.get] 
    external setKeyModifierStateSuper : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateSuper:Js.boolean ->  unit = "keyModifierStateSuper" [@@bs.set]
    external keyModifierStateSymbol : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateSymbol" [@@bs.get] 
    external setKeyModifierStateSymbol : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateSymbol:Js.boolean ->  unit = "keyModifierStateSymbol" [@@bs.set]
    external keyModifierStateSymbolLock : eventModifierInit:('own) eventModifierInit_like ->  bool = "keyModifierStateSymbolLock" [@@bs.get] 
    external setKeyModifierStateSymbolLock : eventModifierInit:('own) eventModifierInit_like -> keyModifierStateSymbolLock:Js.boolean ->  unit = "keyModifierStateSymbolLock" [@@bs.set]
    
    
end
 module FocusEventInit = struct
    include UIEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) window_like Js.null -> ?detail:int -> ?relatedTarget:(_) eventTarget_like Js.null -> unit ->  focusEventInit = "" [@@bs.obj]
    external relatedTarget : focusEventInit:('own) focusEventInit_like ->  eventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external setRelatedTarget : focusEventInit:('own) focusEventInit_like -> relatedTarget:eventTarget Js.null ->  unit = "relatedTarget" [@@bs.set]
    
    
end
 module Comment = struct
    include CharacterData
    
    
    
    
end
 module HTMLElement = struct
    include Element
    
    external style : hTMLElement:('own) hTMLElement_like ->  cSSStyleDeclaration = "style" [@@bs.get] 
    external oncopy : hTMLElement:('own) hTMLElement_like ->  (event -> 'a921 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : hTMLElement:('own) hTMLElement_like -> oncopy:(event -> 'a922 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : hTMLElement:('own) hTMLElement_like ->  (event -> 'a923 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : hTMLElement:('own) hTMLElement_like -> oncut:(event -> 'a924 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : hTMLElement:('own) hTMLElement_like ->  (event -> 'a925 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : hTMLElement:('own) hTMLElement_like -> onpaste:(event -> 'a926 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    external onabort : hTMLElement:('own) hTMLElement_like ->  (event -> 'a927 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : hTMLElement:('own) hTMLElement_like -> onabort:(event -> 'a928 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : hTMLElement:('own) hTMLElement_like ->  (event -> 'a929 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : hTMLElement:('own) hTMLElement_like -> onblur:(event -> 'a930 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : hTMLElement:('own) hTMLElement_like ->  (event -> 'a931 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : hTMLElement:('own) hTMLElement_like -> oncancel:(event -> 'a932 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : hTMLElement:('own) hTMLElement_like ->  (event -> 'a933 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : hTMLElement:('own) hTMLElement_like -> oncanplay:(event -> 'a934 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : hTMLElement:('own) hTMLElement_like ->  (event -> 'a935 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : hTMLElement:('own) hTMLElement_like -> oncanplaythrough:(event -> 'a936 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : hTMLElement:('own) hTMLElement_like ->  (event -> 'a937 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : hTMLElement:('own) hTMLElement_like -> onchange:(event -> 'a938 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : hTMLElement:('own) hTMLElement_like ->  (event -> 'a939 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : hTMLElement:('own) hTMLElement_like -> onclick:(event -> 'a940 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : hTMLElement:('own) hTMLElement_like ->  (event -> 'a941 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : hTMLElement:('own) hTMLElement_like -> onclose:(event -> 'a942 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : hTMLElement:('own) hTMLElement_like ->  (event -> 'a943 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : hTMLElement:('own) hTMLElement_like -> oncontextmenu:(event -> 'a944 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : hTMLElement:('own) hTMLElement_like ->  (event -> 'a945 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : hTMLElement:('own) hTMLElement_like -> oncuechange:(event -> 'a946 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : hTMLElement:('own) hTMLElement_like ->  (event -> 'a947 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : hTMLElement:('own) hTMLElement_like -> ondblclick:(event -> 'a948 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : hTMLElement:('own) hTMLElement_like ->  (event -> 'a949 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : hTMLElement:('own) hTMLElement_like -> ondrag:(event -> 'a950 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : hTMLElement:('own) hTMLElement_like ->  (event -> 'a951 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : hTMLElement:('own) hTMLElement_like -> ondragend:(event -> 'a952 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : hTMLElement:('own) hTMLElement_like ->  (event -> 'a953 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : hTMLElement:('own) hTMLElement_like -> ondragenter:(event -> 'a954 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : hTMLElement:('own) hTMLElement_like ->  (event -> 'a955 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : hTMLElement:('own) hTMLElement_like -> ondragexit:(event -> 'a956 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : hTMLElement:('own) hTMLElement_like ->  (event -> 'a957 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : hTMLElement:('own) hTMLElement_like -> ondragleave:(event -> 'a958 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : hTMLElement:('own) hTMLElement_like ->  (event -> 'a959 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : hTMLElement:('own) hTMLElement_like -> ondragover:(event -> 'a960 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : hTMLElement:('own) hTMLElement_like ->  (event -> 'a961 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : hTMLElement:('own) hTMLElement_like -> ondragstart:(event -> 'a962 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : hTMLElement:('own) hTMLElement_like ->  (event -> 'a963 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : hTMLElement:('own) hTMLElement_like -> ondrop:(event -> 'a964 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : hTMLElement:('own) hTMLElement_like ->  (event -> 'a965 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : hTMLElement:('own) hTMLElement_like -> ondurationchange:(event -> 'a966 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : hTMLElement:('own) hTMLElement_like ->  (event -> 'a967 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : hTMLElement:('own) hTMLElement_like -> onemptied:(event -> 'a968 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : hTMLElement:('own) hTMLElement_like ->  (event -> 'a969 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : hTMLElement:('own) hTMLElement_like -> onended:(event -> 'a970 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : hTMLElement:('own) hTMLElement_like ->  ('a971 -> string -> int -> int -> 'a972 -> 'a973 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : hTMLElement:('own) hTMLElement_like -> onerror:('a974 -> string -> int -> int -> 'a975 -> 'a976 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : hTMLElement:('own) hTMLElement_like ->  (event -> 'a977 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : hTMLElement:('own) hTMLElement_like -> onfocus:(event -> 'a978 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : hTMLElement:('own) hTMLElement_like ->  (event -> 'a979 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : hTMLElement:('own) hTMLElement_like -> oninput:(event -> 'a980 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : hTMLElement:('own) hTMLElement_like ->  (event -> 'a981 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : hTMLElement:('own) hTMLElement_like -> oninvalid:(event -> 'a982 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : hTMLElement:('own) hTMLElement_like ->  (event -> 'a983 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : hTMLElement:('own) hTMLElement_like -> onkeydown:(event -> 'a984 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : hTMLElement:('own) hTMLElement_like ->  (event -> 'a985 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : hTMLElement:('own) hTMLElement_like -> onkeypress:(event -> 'a986 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : hTMLElement:('own) hTMLElement_like ->  (event -> 'a987 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : hTMLElement:('own) hTMLElement_like -> onkeyup:(event -> 'a988 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : hTMLElement:('own) hTMLElement_like ->  (event -> 'a989 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : hTMLElement:('own) hTMLElement_like -> onload:(event -> 'a990 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : hTMLElement:('own) hTMLElement_like ->  (event -> 'a991 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : hTMLElement:('own) hTMLElement_like -> onloadeddata:(event -> 'a992 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : hTMLElement:('own) hTMLElement_like ->  (event -> 'a993 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : hTMLElement:('own) hTMLElement_like -> onloadedmetadata:(event -> 'a994 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : hTMLElement:('own) hTMLElement_like ->  (event -> 'a995 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : hTMLElement:('own) hTMLElement_like -> onloadstart:(event -> 'a996 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : hTMLElement:('own) hTMLElement_like ->  (event -> 'a997 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : hTMLElement:('own) hTMLElement_like -> onmousedown:(event -> 'a998 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : hTMLElement:('own) hTMLElement_like ->  (event -> 'a999 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : hTMLElement:('own) hTMLElement_like -> onmouseenter:(event -> 'a1000 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1001 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : hTMLElement:('own) hTMLElement_like -> onmouseleave:(event -> 'a1002 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1003 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : hTMLElement:('own) hTMLElement_like -> onmousemove:(event -> 'a1004 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1005 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : hTMLElement:('own) hTMLElement_like -> onmouseout:(event -> 'a1006 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1007 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : hTMLElement:('own) hTMLElement_like -> onmouseover:(event -> 'a1008 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1009 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : hTMLElement:('own) hTMLElement_like -> onmouseup:(event -> 'a1010 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1011 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : hTMLElement:('own) hTMLElement_like -> onwheel:(event -> 'a1012 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1013 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : hTMLElement:('own) hTMLElement_like -> onpause:(event -> 'a1014 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1015 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : hTMLElement:('own) hTMLElement_like -> onplay:(event -> 'a1016 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1017 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : hTMLElement:('own) hTMLElement_like -> onplaying:(event -> 'a1018 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1019 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : hTMLElement:('own) hTMLElement_like -> onprogress:(event -> 'a1020 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1021 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : hTMLElement:('own) hTMLElement_like -> onratechange:(event -> 'a1022 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1023 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : hTMLElement:('own) hTMLElement_like -> onreset:(event -> 'a1024 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1025 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : hTMLElement:('own) hTMLElement_like -> onresize:(event -> 'a1026 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1027 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : hTMLElement:('own) hTMLElement_like -> onscroll:(event -> 'a1028 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1029 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : hTMLElement:('own) hTMLElement_like -> onseeked:(event -> 'a1030 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1031 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : hTMLElement:('own) hTMLElement_like -> onseeking:(event -> 'a1032 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1033 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : hTMLElement:('own) hTMLElement_like -> onselect:(event -> 'a1034 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1035 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : hTMLElement:('own) hTMLElement_like -> onshow:(event -> 'a1036 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1037 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : hTMLElement:('own) hTMLElement_like -> onstalled:(event -> 'a1038 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1039 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : hTMLElement:('own) hTMLElement_like -> onsubmit:(event -> 'a1040 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1041 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : hTMLElement:('own) hTMLElement_like -> onsuspend:(event -> 'a1042 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1043 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : hTMLElement:('own) hTMLElement_like -> ontimeupdate:(event -> 'a1044 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1045 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : hTMLElement:('own) hTMLElement_like -> ontoggle:(event -> 'a1046 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1047 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : hTMLElement:('own) hTMLElement_like -> onvolumechange:(event -> 'a1048 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1049 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : hTMLElement:('own) hTMLElement_like -> onwaiting:(event -> 'a1050 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : hTMLElement:('own) hTMLElement_like ->  (event -> 'a1051 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : hTMLElement:('own) hTMLElement_like -> ontransitionend:(event -> 'a1052 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external title : hTMLElement:('own) hTMLElement_like ->  string = "title" [@@bs.get] 
    external setTitle : hTMLElement:('own) hTMLElement_like -> title:string ->  unit = "title" [@@bs.set]
    external lang : hTMLElement:('own) hTMLElement_like ->  string = "lang" [@@bs.get] 
    external setLang : hTMLElement:('own) hTMLElement_like -> lang:string ->  unit = "lang" [@@bs.set]
    external dataset : hTMLElement:('own) hTMLElement_like ->  dOMStringMap = "dataset" [@@bs.get] 
    external hidden : hTMLElement:('own) hTMLElement_like ->  bool = "hidden" [@@bs.get] 
    external setHidden : hTMLElement:('own) hTMLElement_like -> hidden:Js.boolean ->  unit = "hidden" [@@bs.set]
    external offsetParent : hTMLElement:('own) hTMLElement_like ->  element option = "offsetParent" [@@bs.get] [@@bs.return null_to_opt]
    external offsetTop : hTMLElement:('own) hTMLElement_like ->  int = "offsetTop" [@@bs.get] 
    external offsetLeft : hTMLElement:('own) hTMLElement_like ->  int = "offsetLeft" [@@bs.get] 
    external offsetWidth : hTMLElement:('own) hTMLElement_like ->  int = "offsetWidth" [@@bs.get] 
    external offsetHeight : hTMLElement:('own) hTMLElement_like ->  int = "offsetHeight" [@@bs.get] 
    external blur :  unit = "blur" [@@bs.send.pipe: ('own) hTMLElement_like] 
    external click :  unit = "click" [@@bs.send.pipe: ('own) hTMLElement_like] 
    external focus :  unit = "focus" [@@bs.send.pipe: ('own) hTMLElement_like] 
    
    
end
 module CSSSupportsRule = struct
    include CSSConditionRule
    
    
    
    
end
 module PaintWorkletGlobalScope = struct
    include WorkletGlobalScope
    
    external registerPaint : name:string -> paintCtor:(unit -> unit [@bs]) ->  unit = "registerPaint" [@@bs.send.pipe: ('own) paintWorkletGlobalScope_like] 
    
    
end
 module ServiceWorkerGlobalScope = struct
    include WorkerGlobalScope
    
    external onmessage : serviceWorkerGlobalScope:('own) serviceWorkerGlobalScope_like ->  (event -> 'a1053 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : serviceWorkerGlobalScope:('own) serviceWorkerGlobalScope_like -> onmessage:(event -> 'a1054 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    
    
end
 module DedicatedWorkerGlobalScope = struct
    include WorkerGlobalScope
    
    external onmessage : dedicatedWorkerGlobalScope:('own) dedicatedWorkerGlobalScope_like ->  (event -> 'a1055 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : dedicatedWorkerGlobalScope:('own) dedicatedWorkerGlobalScope_like -> onmessage:(event -> 'a1056 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external close :  unit = "close" [@@bs.send.pipe: ('own) dedicatedWorkerGlobalScope_like] 
    external postMessage : message:'a1057 ->  unit = "postMessage" [@@bs.send.pipe: ('own) dedicatedWorkerGlobalScope_like] 
    
    
end
 module CSSMediaRule = struct
    include CSSConditionRule
    
    external media : cSSMediaRule:('own) cSSMediaRule_like ->  mediaList = "media" [@@bs.get] 
    
    
end
 module ProcessingInstruction = struct
    include CharacterData
    
    external target : processingInstruction:('own) processingInstruction_like ->  string = "target" [@@bs.get] 
    
    
end
 module XMLDocument = struct
    include Document
    
    
    
    
end
 module TestWorkletGlobalScope = struct
    include WorkletGlobalScope
    
    external registerKeyValue : key:string -> value:string ->  unit = "registerKeyValue" [@@bs.send.pipe: ('own) testWorkletGlobalScope_like] 
    
    
end
 module SVGElement = struct
    include Element
    
    
    
    
end
 module Text = struct
    include CharacterData
    
    external wholeText : text:('own) text_like ->  string = "wholeText" [@@bs.get] 
    external splitText : offset:int ->  text = "splitText" [@@bs.send.pipe: ('own) text_like] 
    
    
end
 module KeyboardEventInit = struct
    include EventModifierInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> ?key:string -> ?code:string -> ?location:int -> ?repeat:Js.boolean -> ?isComposing:Js.boolean -> unit ->  keyboardEventInit = "" [@@bs.obj]
    external key : keyboardEventInit:('own) keyboardEventInit_like ->  string = "key" [@@bs.get] 
    external setKey : keyboardEventInit:('own) keyboardEventInit_like -> key:string ->  unit = "key" [@@bs.set]
    external code : keyboardEventInit:('own) keyboardEventInit_like ->  string = "code" [@@bs.get] 
    external setCode : keyboardEventInit:('own) keyboardEventInit_like -> code:string ->  unit = "code" [@@bs.set]
    external location : keyboardEventInit:('own) keyboardEventInit_like ->  int = "location" [@@bs.get] 
    external setLocation : keyboardEventInit:('own) keyboardEventInit_like -> location:int ->  unit = "location" [@@bs.set]
    external repeat : keyboardEventInit:('own) keyboardEventInit_like ->  bool = "repeat" [@@bs.get] 
    external setRepeat : keyboardEventInit:('own) keyboardEventInit_like -> repeat:Js.boolean ->  unit = "repeat" [@@bs.set]
    external isComposing : keyboardEventInit:('own) keyboardEventInit_like ->  bool = "isComposing" [@@bs.get] 
    external setIsComposing : keyboardEventInit:('own) keyboardEventInit_like -> isComposing:Js.boolean ->  unit = "isComposing" [@@bs.set]
    
    
end
 module MouseEventInit = struct
    include EventModifierInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> ?screenX:int -> ?screenY:int -> ?clientX:int -> ?clientY:int -> ?button:int -> ?relatedTarget:(_) eventTarget_like Js.null -> unit ->  mouseEventInit = "" [@@bs.obj]
    external screenX : mouseEventInit:('own) mouseEventInit_like ->  int = "screenX" [@@bs.get] 
    external setScreenX : mouseEventInit:('own) mouseEventInit_like -> screenX:int ->  unit = "screenX" [@@bs.set]
    external screenY : mouseEventInit:('own) mouseEventInit_like ->  int = "screenY" [@@bs.get] 
    external setScreenY : mouseEventInit:('own) mouseEventInit_like -> screenY:int ->  unit = "screenY" [@@bs.set]
    external clientX : mouseEventInit:('own) mouseEventInit_like ->  int = "clientX" [@@bs.get] 
    external setClientX : mouseEventInit:('own) mouseEventInit_like -> clientX:int ->  unit = "clientX" [@@bs.set]
    external clientY : mouseEventInit:('own) mouseEventInit_like ->  int = "clientY" [@@bs.get] 
    external setClientY : mouseEventInit:('own) mouseEventInit_like -> clientY:int ->  unit = "clientY" [@@bs.set]
    external button : mouseEventInit:('own) mouseEventInit_like ->  int = "button" [@@bs.get] 
    external setButton : mouseEventInit:('own) mouseEventInit_like -> button:int ->  unit = "button" [@@bs.set]
    external relatedTarget : mouseEventInit:('own) mouseEventInit_like ->  eventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external setRelatedTarget : mouseEventInit:('own) mouseEventInit_like -> relatedTarget:eventTarget Js.null ->  unit = "relatedTarget" [@@bs.set]
    
    
end
 module HTMLIFrameElement = struct
    include HTMLElement
    
    external src : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLIFrameElement:('own) hTMLIFrameElement_like -> src:string ->  unit = "src" [@@bs.set]
    external sandbox : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  dOMTokenList = "sandbox" [@@bs.get] 
    external allowFullscreen : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  bool = "allowFullscreen" [@@bs.get] 
    external setAllowFullscreen : hTMLIFrameElement:('own) hTMLIFrameElement_like -> allowFullscreen:Js.boolean ->  unit = "allowFullscreen" [@@bs.set]
    external width : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLIFrameElement:('own) hTMLIFrameElement_like -> width:string ->  unit = "width" [@@bs.set]
    external height : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  string = "height" [@@bs.get] 
    external setHeight : hTMLIFrameElement:('own) hTMLIFrameElement_like -> height:string ->  unit = "height" [@@bs.set]
    external contentDocument : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  document option = "contentDocument" [@@bs.get] [@@bs.return null_to_opt]
    external contentWindow : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  windowProxy option = "contentWindow" [@@bs.get] [@@bs.return null_to_opt]
    external frameBorder : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  string = "frameBorder" [@@bs.get] 
    external setFrameBorder : hTMLIFrameElement:('own) hTMLIFrameElement_like -> frameBorder:string ->  unit = "frameBorder" [@@bs.set]
    external mozbrowser : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  bool = "mozbrowser" [@@bs.get] 
    external setMozbrowser : hTMLIFrameElement:('own) hTMLIFrameElement_like -> mozbrowser:Js.boolean ->  unit = "mozbrowser" [@@bs.set]
    external mozprivatebrowsing : hTMLIFrameElement:('own) hTMLIFrameElement_like ->  bool = "mozprivatebrowsing" [@@bs.get] 
    external setMozprivatebrowsing : hTMLIFrameElement:('own) hTMLIFrameElement_like -> mozprivatebrowsing:Js.boolean ->  unit = "mozprivatebrowsing" [@@bs.set]
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) hTMLIFrameElement_like] 
    
    let reload ?hardReload hTMLIFrameElement =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload hTMLIFrameElement
    
end
 module SVGGraphicsElement = struct
    include SVGElement
    
    
    
    
end
 module HTMLScriptElement = struct
    include HTMLElement
    
    external src : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLScriptElement:('own) hTMLScriptElement_like -> src:string ->  unit = "src" [@@bs.set]
    external type_ : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLScriptElement:('own) hTMLScriptElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external charset : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "charset" [@@bs.get] 
    external setCharset : hTMLScriptElement:('own) hTMLScriptElement_like -> charset:string ->  unit = "charset" [@@bs.set]
    external async : hTMLScriptElement:('own) hTMLScriptElement_like ->  bool = "async" [@@bs.get] 
    external setAsync : hTMLScriptElement:('own) hTMLScriptElement_like -> async:Js.boolean ->  unit = "async" [@@bs.set]
    external defer : hTMLScriptElement:('own) hTMLScriptElement_like ->  bool = "defer" [@@bs.get] 
    external setDefer : hTMLScriptElement:('own) hTMLScriptElement_like -> defer:Js.boolean ->  unit = "defer" [@@bs.set]
    external crossOrigin : hTMLScriptElement:('own) hTMLScriptElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLScriptElement:('own) hTMLScriptElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external text : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLScriptElement:('own) hTMLScriptElement_like -> text:string ->  unit = "text" [@@bs.set]
    external integrity : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : hTMLScriptElement:('own) hTMLScriptElement_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external event : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "event" [@@bs.get] 
    external setEvent : hTMLScriptElement:('own) hTMLScriptElement_like -> event:string ->  unit = "event" [@@bs.set]
    external htmlFor : hTMLScriptElement:('own) hTMLScriptElement_like ->  string = "htmlFor" [@@bs.get] 
    external setHtmlFor : hTMLScriptElement:('own) hTMLScriptElement_like -> htmlFor:string ->  unit = "htmlFor" [@@bs.set]
    
    
end
 module HTMLObjectElement = struct
    include HTMLElement
    
    external type_ : hTMLObjectElement:('own) hTMLObjectElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLObjectElement:('own) hTMLObjectElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external form : hTMLObjectElement:('own) hTMLObjectElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external validity : hTMLObjectElement:('own) hTMLObjectElement_like ->  validityState = "validity" [@@bs.get] 
    
    
end
 module HTMLMediaElement = struct
    include HTMLElement
    
    external error : hTMLMediaElement:('own) hTMLMediaElement_like ->  mediaError option = "error" [@@bs.get] [@@bs.return null_to_opt]
    external src : hTMLMediaElement:('own) hTMLMediaElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLMediaElement:('own) hTMLMediaElement_like -> src:string ->  unit = "src" [@@bs.set]
    external currentSrc : hTMLMediaElement:('own) hTMLMediaElement_like ->  string = "currentSrc" [@@bs.get] 
    external networkState : hTMLMediaElement:('own) hTMLMediaElement_like ->  int = "networkState" [@@bs.get] 
    external preload : hTMLMediaElement:('own) hTMLMediaElement_like ->  string = "preload" [@@bs.get] 
    external setPreload : hTMLMediaElement:('own) hTMLMediaElement_like -> preload:string ->  unit = "preload" [@@bs.set]
    external readyState : hTMLMediaElement:('own) hTMLMediaElement_like ->  int = "readyState" [@@bs.get] 
    external paused : hTMLMediaElement:('own) hTMLMediaElement_like ->  bool = "paused" [@@bs.get] 
    external autoplay : hTMLMediaElement:('own) hTMLMediaElement_like ->  bool = "autoplay" [@@bs.get] 
    external setAutoplay : hTMLMediaElement:('own) hTMLMediaElement_like -> autoplay:Js.boolean ->  unit = "autoplay" [@@bs.set]
    external canPlayType : type_:string ->  string = "canPlayType" [@@bs.send.pipe: ('own) hTMLMediaElement_like] 
    external load :  unit = "load" [@@bs.send.pipe: ('own) hTMLMediaElement_like] 
    external pause :  unit = "pause" [@@bs.send.pipe: ('own) hTMLMediaElement_like] 
    external play :  unit = "play" [@@bs.send.pipe: ('own) hTMLMediaElement_like] 
    
    let network_empty  =
      
      0
    
    let network_idle  =
      
      1
    
    let network_loading  =
      
      2
    
    let network_no_source  =
      
      3
    
    let have_nothing  =
      
      0
    
    let have_metadata  =
      
      1
    
    let have_current_data  =
      
      2
    
    let have_future_data  =
      
      3
    
    let have_enough_data  =
      
      4
    
end
 module HTMLImageElement = struct
    include HTMLElement
    
    external alt : hTMLImageElement:('own) hTMLImageElement_like ->  string = "alt" [@@bs.get] 
    external setAlt : hTMLImageElement:('own) hTMLImageElement_like -> alt:string ->  unit = "alt" [@@bs.set]
    external src : hTMLImageElement:('own) hTMLImageElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLImageElement:('own) hTMLImageElement_like -> src:string ->  unit = "src" [@@bs.set]
    external crossOrigin : hTMLImageElement:('own) hTMLImageElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLImageElement:('own) hTMLImageElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external useMap : hTMLImageElement:('own) hTMLImageElement_like ->  string = "useMap" [@@bs.get] 
    external setUseMap : hTMLImageElement:('own) hTMLImageElement_like -> useMap:string ->  unit = "useMap" [@@bs.set]
    external isMap : hTMLImageElement:('own) hTMLImageElement_like ->  bool = "isMap" [@@bs.get] 
    external setIsMap : hTMLImageElement:('own) hTMLImageElement_like -> isMap:Js.boolean ->  unit = "isMap" [@@bs.set]
    external width : hTMLImageElement:('own) hTMLImageElement_like ->  int = "width" [@@bs.get] 
    external setWidth : hTMLImageElement:('own) hTMLImageElement_like -> width:int ->  unit = "width" [@@bs.set]
    external height : hTMLImageElement:('own) hTMLImageElement_like ->  int = "height" [@@bs.get] 
    external setHeight : hTMLImageElement:('own) hTMLImageElement_like -> height:int ->  unit = "height" [@@bs.set]
    external naturalWidth : hTMLImageElement:('own) hTMLImageElement_like ->  int = "naturalWidth" [@@bs.get] 
    external naturalHeight : hTMLImageElement:('own) hTMLImageElement_like ->  int = "naturalHeight" [@@bs.get] 
    external complete : hTMLImageElement:('own) hTMLImageElement_like ->  bool = "complete" [@@bs.get] 
    external currentSrc : hTMLImageElement:('own) hTMLImageElement_like ->  string = "currentSrc" [@@bs.get] 
    external name : hTMLImageElement:('own) hTMLImageElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLImageElement:('own) hTMLImageElement_like -> name:string ->  unit = "name" [@@bs.set]
    external align : hTMLImageElement:('own) hTMLImageElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLImageElement:('own) hTMLImageElement_like -> align:string ->  unit = "align" [@@bs.set]
    external hspace : hTMLImageElement:('own) hTMLImageElement_like ->  int = "hspace" [@@bs.get] 
    external setHspace : hTMLImageElement:('own) hTMLImageElement_like -> hspace:int ->  unit = "hspace" [@@bs.set]
    external vspace : hTMLImageElement:('own) hTMLImageElement_like ->  int = "vspace" [@@bs.get] 
    external setVspace : hTMLImageElement:('own) hTMLImageElement_like -> vspace:int ->  unit = "vspace" [@@bs.set]
    external longDesc : hTMLImageElement:('own) hTMLImageElement_like ->  string = "longDesc" [@@bs.get] 
    external setLongDesc : hTMLImageElement:('own) hTMLImageElement_like -> longDesc:string ->  unit = "longDesc" [@@bs.set]
    external border : hTMLImageElement:('own) hTMLImageElement_like ->  string = "border" [@@bs.get] 
    external setBorder : hTMLImageElement:('own) hTMLImageElement_like -> border:string ->  unit = "border" [@@bs.set]
    
    
end
 module HTMLTableColElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLTitleElement = struct
    include HTMLElement
    
    external text : hTMLTitleElement:('own) hTMLTitleElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLTitleElement:('own) hTMLTitleElement_like -> text:string ->  unit = "text" [@@bs.set]
    
    
end
 module HTMLDataElement = struct
    include HTMLElement
    
    external value : hTMLDataElement:('own) hTMLDataElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLDataElement:('own) hTMLDataElement_like -> value:string ->  unit = "value" [@@bs.set]
    
    
end
 module HTMLMetaElement = struct
    include HTMLElement
    
    external name : hTMLMetaElement:('own) hTMLMetaElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLMetaElement:('own) hTMLMetaElement_like -> name:string ->  unit = "name" [@@bs.set]
    external content : hTMLMetaElement:('own) hTMLMetaElement_like ->  string = "content" [@@bs.get] 
    external setContent : hTMLMetaElement:('own) hTMLMetaElement_like -> content:string ->  unit = "content" [@@bs.set]
    
    
end
 module HTMLLIElement = struct
    include HTMLElement
    
    external value : hTMLLIElement:('own) hTMLLIElement_like ->  int = "value" [@@bs.get] 
    external setValue : hTMLLIElement:('own) hTMLLIElement_like -> value:int ->  unit = "value" [@@bs.set]
    
    
end
 module HTMLOptGroupElement = struct
    include HTMLElement
    
    external disabled : hTMLOptGroupElement:('own) hTMLOptGroupElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLOptGroupElement:('own) hTMLOptGroupElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    
    
end
 module HTMLFieldSetElement = struct
    include HTMLElement
    
    external disabled : hTMLFieldSetElement:('own) hTMLFieldSetElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLFieldSetElement:('own) hTMLFieldSetElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLFieldSetElement:('own) hTMLFieldSetElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external elements : hTMLFieldSetElement:('own) hTMLFieldSetElement_like ->  hTMLCollection = "elements" [@@bs.get] 
    external validity : hTMLFieldSetElement:('own) hTMLFieldSetElement_like ->  validityState = "validity" [@@bs.get] 
    
    
end
 module HTMLDListElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLBodyElement = struct
    include HTMLElement
    
    external onafterprint : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1058 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : hTMLBodyElement:('own) hTMLBodyElement_like -> onafterprint:(event -> 'a1059 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1060 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : hTMLBodyElement:('own) hTMLBodyElement_like -> onbeforeprint:(event -> 'a1061 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : hTMLBodyElement:('own) hTMLBodyElement_like -> onbeforeunload:(event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1062 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : hTMLBodyElement:('own) hTMLBodyElement_like -> onhashchange:(event -> 'a1063 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1064 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : hTMLBodyElement:('own) hTMLBodyElement_like -> onlanguagechange:(event -> 'a1065 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1066 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : hTMLBodyElement:('own) hTMLBodyElement_like -> onmessage:(event -> 'a1067 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1068 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : hTMLBodyElement:('own) hTMLBodyElement_like -> onoffline:(event -> 'a1069 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1070 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : hTMLBodyElement:('own) hTMLBodyElement_like -> ononline:(event -> 'a1071 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1072 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : hTMLBodyElement:('own) hTMLBodyElement_like -> onpagehide:(event -> 'a1073 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1074 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : hTMLBodyElement:('own) hTMLBodyElement_like -> onpageshow:(event -> 'a1075 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1076 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : hTMLBodyElement:('own) hTMLBodyElement_like -> onpopstate:(event -> 'a1077 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1078 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : hTMLBodyElement:('own) hTMLBodyElement_like -> onrejectionhandled:(event -> 'a1079 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1080 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : hTMLBodyElement:('own) hTMLBodyElement_like -> onstorage:(event -> 'a1081 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1082 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : hTMLBodyElement:('own) hTMLBodyElement_like -> onunhandledrejection:(event -> 'a1083 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : hTMLBodyElement:('own) hTMLBodyElement_like ->  (event -> 'a1084 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : hTMLBodyElement:('own) hTMLBodyElement_like -> onunload:(event -> 'a1085 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    external text : hTMLBodyElement:('own) hTMLBodyElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLBodyElement:('own) hTMLBodyElement_like -> text:string ->  unit = "text" [@@bs.set]
    external bgColor : hTMLBodyElement:('own) hTMLBodyElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLBodyElement:('own) hTMLBodyElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external background : hTMLBodyElement:('own) hTMLBodyElement_like ->  string = "background" [@@bs.get] 
    external setBackground : hTMLBodyElement:('own) hTMLBodyElement_like -> background:string ->  unit = "background" [@@bs.set]
    
    
end
 module HTMLLegendElement = struct
    include HTMLElement
    
    external form : hTMLLegendElement:('own) hTMLLegendElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module HTMLBaseElement = struct
    include HTMLElement
    
    external href : hTMLBaseElement:('own) hTMLBaseElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLBaseElement:('own) hTMLBaseElement_like -> href:string ->  unit = "href" [@@bs.set]
    
    
end
 module HTMLUListElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLHtmlElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLTimeElement = struct
    include HTMLElement
    
    external dateTime : hTMLTimeElement:('own) hTMLTimeElement_like ->  string = "dateTime" [@@bs.get] 
    external setDateTime : hTMLTimeElement:('own) hTMLTimeElement_like -> dateTime:string ->  unit = "dateTime" [@@bs.set]
    
    
end
 module HTMLTableSectionElement = struct
    include HTMLElement
    
    external rows : hTMLTableSectionElement:('own) hTMLTableSectionElement_like ->  hTMLCollection = "rows" [@@bs.get] 
    external deleteRow : index:int ->  unit = "deleteRow" [@@bs.send.pipe: ('own) hTMLTableSectionElement_like] 
    external insertRow : ?index:int Js.undefined ->  hTMLElement = "insertRow" [@@bs.send.pipe: ('own) hTMLTableSectionElement_like] 
    
    let insertRow ?index hTMLTableSectionElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertRow ~index hTMLTableSectionElement
    
end
 module HTMLFrameElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLLinkElement = struct
    include HTMLElement
    
    external sheet : hTMLLinkElement:('own) hTMLLinkElement_like ->  styleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    external href : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLLinkElement:('own) hTMLLinkElement_like -> href:string ->  unit = "href" [@@bs.set]
    external crossOrigin : hTMLLinkElement:('own) hTMLLinkElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLLinkElement:('own) hTMLLinkElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external rel : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "rel" [@@bs.get] 
    external setRel : hTMLLinkElement:('own) hTMLLinkElement_like -> rel:string ->  unit = "rel" [@@bs.set]
    external relList : hTMLLinkElement:('own) hTMLLinkElement_like ->  dOMTokenList = "relList" [@@bs.get] 
    external media : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "media" [@@bs.get] 
    external setMedia : hTMLLinkElement:('own) hTMLLinkElement_like -> media:string ->  unit = "media" [@@bs.set]
    external hreflang : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "hreflang" [@@bs.get] 
    external setHreflang : hTMLLinkElement:('own) hTMLLinkElement_like -> hreflang:string ->  unit = "hreflang" [@@bs.set]
    external type_ : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLLinkElement:('own) hTMLLinkElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external integrity : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : hTMLLinkElement:('own) hTMLLinkElement_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external charset : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "charset" [@@bs.get] 
    external setCharset : hTMLLinkElement:('own) hTMLLinkElement_like -> charset:string ->  unit = "charset" [@@bs.set]
    external rev : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "rev" [@@bs.get] 
    external setRev : hTMLLinkElement:('own) hTMLLinkElement_like -> rev:string ->  unit = "rev" [@@bs.set]
    external target : hTMLLinkElement:('own) hTMLLinkElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLLinkElement:('own) hTMLLinkElement_like -> target:string ->  unit = "target" [@@bs.set]
    
    
end
 module HTMLEmbedElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLMeterElement = struct
    include HTMLElement
    
    external labels : hTMLMeterElement:('own) hTMLMeterElement_like ->  nodeList = "labels" [@@bs.get] 
    
    
end
 module HTMLTableCaptionElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLLabelElement = struct
    include HTMLElement
    
    external form : hTMLLabelElement:('own) hTMLLabelElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external htmlFor : hTMLLabelElement:('own) hTMLLabelElement_like ->  string = "htmlFor" [@@bs.get] 
    external setHtmlFor : hTMLLabelElement:('own) hTMLLabelElement_like -> htmlFor:string ->  unit = "htmlFor" [@@bs.set]
    external control : hTMLLabelElement:('own) hTMLLabelElement_like ->  hTMLElement option = "control" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module HTMLAnchorElement = struct
    include HTMLElement
    
    external href : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLAnchorElement:('own) hTMLAnchorElement_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "origin" [@@bs.get] 
    external protocol : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : hTMLAnchorElement:('own) hTMLAnchorElement_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "username" [@@bs.get] 
    external setUsername : hTMLAnchorElement:('own) hTMLAnchorElement_like -> username:string ->  unit = "username" [@@bs.set]
    external password : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "password" [@@bs.get] 
    external setPassword : hTMLAnchorElement:('own) hTMLAnchorElement_like -> password:string ->  unit = "password" [@@bs.set]
    external host : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "host" [@@bs.get] 
    external setHost : hTMLAnchorElement:('own) hTMLAnchorElement_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "hostname" [@@bs.get] 
    external setHostname : hTMLAnchorElement:('own) hTMLAnchorElement_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "port" [@@bs.get] 
    external setPort : hTMLAnchorElement:('own) hTMLAnchorElement_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "pathname" [@@bs.get] 
    external setPathname : hTMLAnchorElement:('own) hTMLAnchorElement_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "search" [@@bs.get] 
    external setSearch : hTMLAnchorElement:('own) hTMLAnchorElement_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "hash" [@@bs.get] 
    external setHash : hTMLAnchorElement:('own) hTMLAnchorElement_like -> hash:string ->  unit = "hash" [@@bs.set]
    external target : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLAnchorElement:('own) hTMLAnchorElement_like -> target:string ->  unit = "target" [@@bs.set]
    external rel : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "rel" [@@bs.get] 
    external setRel : hTMLAnchorElement:('own) hTMLAnchorElement_like -> rel:string ->  unit = "rel" [@@bs.set]
    external relList : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  dOMTokenList = "relList" [@@bs.get] 
    external text : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLAnchorElement:('own) hTMLAnchorElement_like -> text:string ->  unit = "text" [@@bs.set]
    external coords : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "coords" [@@bs.get] 
    external setCoords : hTMLAnchorElement:('own) hTMLAnchorElement_like -> coords:string ->  unit = "coords" [@@bs.set]
    external name : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLAnchorElement:('own) hTMLAnchorElement_like -> name:string ->  unit = "name" [@@bs.set]
    external rev : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "rev" [@@bs.get] 
    external setRev : hTMLAnchorElement:('own) hTMLAnchorElement_like -> rev:string ->  unit = "rev" [@@bs.set]
    external shape : hTMLAnchorElement:('own) hTMLAnchorElement_like ->  string = "shape" [@@bs.get] 
    external setShape : hTMLAnchorElement:('own) hTMLAnchorElement_like -> shape:string ->  unit = "shape" [@@bs.set]
    external toString :  string = "toString" [@@bs.send.pipe: ('own) hTMLAnchorElement_like] 
    
    
end
 module HTMLHeadElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLOutputElement = struct
    include HTMLElement
    
    external form : hTMLOutputElement:('own) hTMLOutputElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external validity : hTMLOutputElement:('own) hTMLOutputElement_like ->  validityState = "validity" [@@bs.get] 
    external labels : hTMLOutputElement:('own) hTMLOutputElement_like ->  nodeList = "labels" [@@bs.get] 
    
    
end
 module HTMLUnknownElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLParamElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLOptionElement = struct
    include HTMLElement
    
    external disabled : hTMLOptionElement:('own) hTMLOptionElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLOptionElement:('own) hTMLOptionElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLOptionElement:('own) hTMLOptionElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external label : hTMLOptionElement:('own) hTMLOptionElement_like ->  string = "label" [@@bs.get] 
    external setLabel : hTMLOptionElement:('own) hTMLOptionElement_like -> label:string ->  unit = "label" [@@bs.set]
    external defaultSelected : hTMLOptionElement:('own) hTMLOptionElement_like ->  bool = "defaultSelected" [@@bs.get] 
    external setDefaultSelected : hTMLOptionElement:('own) hTMLOptionElement_like -> defaultSelected:Js.boolean ->  unit = "defaultSelected" [@@bs.set]
    external selected : hTMLOptionElement:('own) hTMLOptionElement_like ->  bool = "selected" [@@bs.get] 
    external setSelected : hTMLOptionElement:('own) hTMLOptionElement_like -> selected:Js.boolean ->  unit = "selected" [@@bs.set]
    external value : hTMLOptionElement:('own) hTMLOptionElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLOptionElement:('own) hTMLOptionElement_like -> value:string ->  unit = "value" [@@bs.set]
    external text : hTMLOptionElement:('own) hTMLOptionElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLOptionElement:('own) hTMLOptionElement_like -> text:string ->  unit = "text" [@@bs.set]
    
    
end
 module HTMLOListElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLSelectElement = struct
    include HTMLElement
    
    external disabled : hTMLSelectElement:('own) hTMLSelectElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLSelectElement:('own) hTMLSelectElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLSelectElement:('own) hTMLSelectElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external multiple : hTMLSelectElement:('own) hTMLSelectElement_like ->  bool = "multiple" [@@bs.get] 
    external setMultiple : hTMLSelectElement:('own) hTMLSelectElement_like -> multiple:Js.boolean ->  unit = "multiple" [@@bs.set]
    external name : hTMLSelectElement:('own) hTMLSelectElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLSelectElement:('own) hTMLSelectElement_like -> name:string ->  unit = "name" [@@bs.set]
    external size : hTMLSelectElement:('own) hTMLSelectElement_like ->  int = "size" [@@bs.get] 
    external setSize : hTMLSelectElement:('own) hTMLSelectElement_like -> size:int ->  unit = "size" [@@bs.set]
    external type_ : hTMLSelectElement:('own) hTMLSelectElement_like ->  string = "type" [@@bs.get] 
    external options : hTMLSelectElement:('own) hTMLSelectElement_like ->  hTMLOptionsCollection = "options" [@@bs.get] 
    external length : hTMLSelectElement:('own) hTMLSelectElement_like ->  int = "length" [@@bs.get] 
    external setLength : hTMLSelectElement:('own) hTMLSelectElement_like -> length:int ->  unit = "length" [@@bs.set]
    external selectedIndex : hTMLSelectElement:('own) hTMLSelectElement_like ->  int = "selectedIndex" [@@bs.get] 
    external setSelectedIndex : hTMLSelectElement:('own) hTMLSelectElement_like -> selectedIndex:int ->  unit = "selectedIndex" [@@bs.set]
    external value : hTMLSelectElement:('own) hTMLSelectElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLSelectElement:('own) hTMLSelectElement_like -> value:string ->  unit = "value" [@@bs.set]
    external validity : hTMLSelectElement:('own) hTMLSelectElement_like ->  validityState = "validity" [@@bs.get] 
    external labels : hTMLSelectElement:('own) hTMLSelectElement_like ->  nodeList = "labels" [@@bs.get] 
    external add : element:'a1086 -> ?before:'a1087 Js.undefined ->  unit = "add" [@@bs.send.pipe: ('own) hTMLSelectElement_like] 
    external item : index:int ->  element option = "item" [@@bs.send.pipe: ('own) hTMLSelectElement_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  hTMLOptionElement option = "namedItem" [@@bs.send.pipe: ('own) hTMLSelectElement_like] [@@bs.return null_to_opt]
    external remove : index:int ->  unit = "remove" [@@bs.send.pipe: ('own) hTMLSelectElement_like] 
    
    let add ~element ~before hTMLSelectElement =
      let conv_element = function
        | `HTMLOptionElement (x: (_) hTMLOptionElement_like) -> Obj.magic x
        | `HTMLOptGroupElement (x: (_) hTMLOptGroupElement_like) -> Obj.magic x
         in
      let element = conv_element element in
      let conv_before = function
        | `HTMLElement_Null (x: (_) hTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_before = access_undef conv_before in
      let before = conv_before before in
      let return = add ~element ~before hTMLSelectElement in
      return
    
    let add ~element ?before hTMLSelectElement =
      let conv_before = Js_undefined.from_opt in
      let before = conv_before before in
      add ~element ~before hTMLSelectElement
    
end
 module HTMLStyleElement = struct
    include HTMLElement
    
    external sheet : hTMLStyleElement:('own) hTMLStyleElement_like ->  styleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    
    
end
 module HTMLQuoteElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLBRElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLButtonElement = struct
    include HTMLElement
    
    external disabled : hTMLButtonElement:('own) hTMLButtonElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLButtonElement:('own) hTMLButtonElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLButtonElement:('own) hTMLButtonElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external formAction : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "formAction" [@@bs.get] 
    external setFormAction : hTMLButtonElement:('own) hTMLButtonElement_like -> formAction:string ->  unit = "formAction" [@@bs.set]
    external formEnctype : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "formEnctype" [@@bs.get] 
    external setFormEnctype : hTMLButtonElement:('own) hTMLButtonElement_like -> formEnctype:string ->  unit = "formEnctype" [@@bs.set]
    external formMethod : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "formMethod" [@@bs.get] 
    external setFormMethod : hTMLButtonElement:('own) hTMLButtonElement_like -> formMethod:string ->  unit = "formMethod" [@@bs.set]
    external formNoValidate : hTMLButtonElement:('own) hTMLButtonElement_like ->  bool = "formNoValidate" [@@bs.get] 
    external setFormNoValidate : hTMLButtonElement:('own) hTMLButtonElement_like -> formNoValidate:Js.boolean ->  unit = "formNoValidate" [@@bs.set]
    external formTarget : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "formTarget" [@@bs.get] 
    external setFormTarget : hTMLButtonElement:('own) hTMLButtonElement_like -> formTarget:string ->  unit = "formTarget" [@@bs.set]
    external name : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLButtonElement:('own) hTMLButtonElement_like -> name:string ->  unit = "name" [@@bs.set]
    external type_ : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLButtonElement:('own) hTMLButtonElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external value : hTMLButtonElement:('own) hTMLButtonElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLButtonElement:('own) hTMLButtonElement_like -> value:string ->  unit = "value" [@@bs.set]
    external validity : hTMLButtonElement:('own) hTMLButtonElement_like ->  validityState = "validity" [@@bs.get] 
    external labels : hTMLButtonElement:('own) hTMLButtonElement_like ->  nodeList = "labels" [@@bs.get] 
    
    
end
 module HTMLHRElement = struct
    include HTMLElement
    
    external align : hTMLHRElement:('own) hTMLHRElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLHRElement:('own) hTMLHRElement_like -> align:string ->  unit = "align" [@@bs.set]
    external color : hTMLHRElement:('own) hTMLHRElement_like ->  string = "color" [@@bs.get] 
    external setColor : hTMLHRElement:('own) hTMLHRElement_like -> color:string ->  unit = "color" [@@bs.set]
    external width : hTMLHRElement:('own) hTMLHRElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLHRElement:('own) hTMLHRElement_like -> width:string ->  unit = "width" [@@bs.set]
    
    
end
 module HTMLTextAreaElement = struct
    include HTMLElement
    
    external cols : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  int = "cols" [@@bs.get] 
    external setCols : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> cols:int ->  unit = "cols" [@@bs.set]
    external disabled : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external name : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> name:string ->  unit = "name" [@@bs.set]
    external placeholder : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "placeholder" [@@bs.get] 
    external setPlaceholder : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> placeholder:string ->  unit = "placeholder" [@@bs.set]
    external readOnly : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  bool = "readOnly" [@@bs.get] 
    external setReadOnly : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> readOnly:Js.boolean ->  unit = "readOnly" [@@bs.set]
    external required : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  bool = "required" [@@bs.get] 
    external setRequired : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> required:Js.boolean ->  unit = "required" [@@bs.set]
    external rows : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  int = "rows" [@@bs.get] 
    external setRows : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> rows:int ->  unit = "rows" [@@bs.set]
    external wrap : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "wrap" [@@bs.get] 
    external setWrap : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> wrap:string ->  unit = "wrap" [@@bs.set]
    external type_ : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "type" [@@bs.get] 
    external defaultValue : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "defaultValue" [@@bs.get] 
    external setDefaultValue : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> defaultValue:string ->  unit = "defaultValue" [@@bs.set]
    external value : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> value:string ->  unit = "value" [@@bs.set]
    external labels : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  nodeList = "labels" [@@bs.get] 
    external selectionStart : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  int = "selectionStart" [@@bs.get] 
    external setSelectionStart : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> selectionStart:int ->  unit = "selectionStart" [@@bs.set]
    external selectionEnd : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  int = "selectionEnd" [@@bs.get] 
    external setSelectionEnd : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> selectionEnd:int ->  unit = "selectionEnd" [@@bs.set]
    external selectionDirection : hTMLTextAreaElement:('own) hTMLTextAreaElement_like ->  string = "selectionDirection" [@@bs.get] 
    external setSelectionDirection : hTMLTextAreaElement:('own) hTMLTextAreaElement_like -> selectionDirection:string ->  unit = "selectionDirection" [@@bs.set]
    external setSelectionRange : start:int -> end_:int -> ?direction:string Js.undefined ->  unit = "setSelectionRange" [@@bs.send.pipe: ('own) hTMLTextAreaElement_like] 
    
    let setSelectionRange ~start ~end_ ?direction hTMLTextAreaElement =
      let conv_direction = Js_undefined.from_opt in
      let direction = conv_direction direction in
      setSelectionRange ~start ~end_ ~direction hTMLTextAreaElement
    
end
 module HTMLSourceElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLPreElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLModElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLMapElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLTemplateElement = struct
    include HTMLElement
    
    external content : hTMLTemplateElement:('own) hTMLTemplateElement_like ->  documentFragment = "content" [@@bs.get] 
    
    
end
 module HTMLDirectoryElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLInputElement = struct
    include HTMLElement
    
    external accept : hTMLInputElement:('own) hTMLInputElement_like ->  string = "accept" [@@bs.get] 
    external setAccept : hTMLInputElement:('own) hTMLInputElement_like -> accept:string ->  unit = "accept" [@@bs.set]
    external alt : hTMLInputElement:('own) hTMLInputElement_like ->  string = "alt" [@@bs.get] 
    external setAlt : hTMLInputElement:('own) hTMLInputElement_like -> alt:string ->  unit = "alt" [@@bs.set]
    external defaultChecked : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "defaultChecked" [@@bs.get] 
    external setDefaultChecked : hTMLInputElement:('own) hTMLInputElement_like -> defaultChecked:Js.boolean ->  unit = "defaultChecked" [@@bs.set]
    external checked : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "checked" [@@bs.get] 
    external setChecked : hTMLInputElement:('own) hTMLInputElement_like -> checked:Js.boolean ->  unit = "checked" [@@bs.set]
    external dirName : hTMLInputElement:('own) hTMLInputElement_like ->  string = "dirName" [@@bs.get] 
    external setDirName : hTMLInputElement:('own) hTMLInputElement_like -> dirName:string ->  unit = "dirName" [@@bs.set]
    external disabled : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLInputElement:('own) hTMLInputElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLInputElement:('own) hTMLInputElement_like ->  hTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external files : hTMLInputElement:('own) hTMLInputElement_like ->  fileList option = "files" [@@bs.get] [@@bs.return null_to_opt]
    external formAction : hTMLInputElement:('own) hTMLInputElement_like ->  string = "formAction" [@@bs.get] 
    external setFormAction : hTMLInputElement:('own) hTMLInputElement_like -> formAction:string ->  unit = "formAction" [@@bs.set]
    external formEnctype : hTMLInputElement:('own) hTMLInputElement_like ->  string = "formEnctype" [@@bs.get] 
    external setFormEnctype : hTMLInputElement:('own) hTMLInputElement_like -> formEnctype:string ->  unit = "formEnctype" [@@bs.set]
    external formMethod : hTMLInputElement:('own) hTMLInputElement_like ->  string = "formMethod" [@@bs.get] 
    external setFormMethod : hTMLInputElement:('own) hTMLInputElement_like -> formMethod:string ->  unit = "formMethod" [@@bs.set]
    external formNoValidate : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "formNoValidate" [@@bs.get] 
    external setFormNoValidate : hTMLInputElement:('own) hTMLInputElement_like -> formNoValidate:Js.boolean ->  unit = "formNoValidate" [@@bs.set]
    external formTarget : hTMLInputElement:('own) hTMLInputElement_like ->  string = "formTarget" [@@bs.get] 
    external setFormTarget : hTMLInputElement:('own) hTMLInputElement_like -> formTarget:string ->  unit = "formTarget" [@@bs.set]
    external indeterminate : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "indeterminate" [@@bs.get] 
    external setIndeterminate : hTMLInputElement:('own) hTMLInputElement_like -> indeterminate:Js.boolean ->  unit = "indeterminate" [@@bs.set]
    external max : hTMLInputElement:('own) hTMLInputElement_like ->  string = "max" [@@bs.get] 
    external setMax : hTMLInputElement:('own) hTMLInputElement_like -> max:string ->  unit = "max" [@@bs.set]
    external maxLength : hTMLInputElement:('own) hTMLInputElement_like ->  int = "maxLength" [@@bs.get] 
    external setMaxLength : hTMLInputElement:('own) hTMLInputElement_like -> maxLength:int ->  unit = "maxLength" [@@bs.set]
    external min : hTMLInputElement:('own) hTMLInputElement_like ->  string = "min" [@@bs.get] 
    external setMin : hTMLInputElement:('own) hTMLInputElement_like -> min:string ->  unit = "min" [@@bs.set]
    external minLength : hTMLInputElement:('own) hTMLInputElement_like ->  int = "minLength" [@@bs.get] 
    external setMinLength : hTMLInputElement:('own) hTMLInputElement_like -> minLength:int ->  unit = "minLength" [@@bs.set]
    external multiple : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "multiple" [@@bs.get] 
    external setMultiple : hTMLInputElement:('own) hTMLInputElement_like -> multiple:Js.boolean ->  unit = "multiple" [@@bs.set]
    external name : hTMLInputElement:('own) hTMLInputElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLInputElement:('own) hTMLInputElement_like -> name:string ->  unit = "name" [@@bs.set]
    external pattern : hTMLInputElement:('own) hTMLInputElement_like ->  string = "pattern" [@@bs.get] 
    external setPattern : hTMLInputElement:('own) hTMLInputElement_like -> pattern:string ->  unit = "pattern" [@@bs.set]
    external placeholder : hTMLInputElement:('own) hTMLInputElement_like ->  string = "placeholder" [@@bs.get] 
    external setPlaceholder : hTMLInputElement:('own) hTMLInputElement_like -> placeholder:string ->  unit = "placeholder" [@@bs.set]
    external readOnly : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "readOnly" [@@bs.get] 
    external setReadOnly : hTMLInputElement:('own) hTMLInputElement_like -> readOnly:Js.boolean ->  unit = "readOnly" [@@bs.set]
    external required : hTMLInputElement:('own) hTMLInputElement_like ->  bool = "required" [@@bs.get] 
    external setRequired : hTMLInputElement:('own) hTMLInputElement_like -> required:Js.boolean ->  unit = "required" [@@bs.set]
    external size : hTMLInputElement:('own) hTMLInputElement_like ->  int = "size" [@@bs.get] 
    external setSize : hTMLInputElement:('own) hTMLInputElement_like -> size:int ->  unit = "size" [@@bs.set]
    external src : hTMLInputElement:('own) hTMLInputElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLInputElement:('own) hTMLInputElement_like -> src:string ->  unit = "src" [@@bs.set]
    external step : hTMLInputElement:('own) hTMLInputElement_like ->  string = "step" [@@bs.get] 
    external setStep : hTMLInputElement:('own) hTMLInputElement_like -> step:string ->  unit = "step" [@@bs.set]
    external type_ : hTMLInputElement:('own) hTMLInputElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLInputElement:('own) hTMLInputElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external defaultValue : hTMLInputElement:('own) hTMLInputElement_like ->  string = "defaultValue" [@@bs.get] 
    external setDefaultValue : hTMLInputElement:('own) hTMLInputElement_like -> defaultValue:string ->  unit = "defaultValue" [@@bs.set]
    external value : hTMLInputElement:('own) hTMLInputElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLInputElement:('own) hTMLInputElement_like -> value:string ->  unit = "value" [@@bs.set]
    external labels : hTMLInputElement:('own) hTMLInputElement_like ->  nodeList = "labels" [@@bs.get] 
    external selectionStart : hTMLInputElement:('own) hTMLInputElement_like ->  int = "selectionStart" [@@bs.get] 
    external setSelectionStart : hTMLInputElement:('own) hTMLInputElement_like -> selectionStart:int ->  unit = "selectionStart" [@@bs.set]
    external selectionEnd : hTMLInputElement:('own) hTMLInputElement_like ->  int = "selectionEnd" [@@bs.get] 
    external setSelectionEnd : hTMLInputElement:('own) hTMLInputElement_like -> selectionEnd:int ->  unit = "selectionEnd" [@@bs.set]
    external selectionDirection : hTMLInputElement:('own) hTMLInputElement_like ->  string = "selectionDirection" [@@bs.get] 
    external setSelectionDirection : hTMLInputElement:('own) hTMLInputElement_like -> selectionDirection:string ->  unit = "selectionDirection" [@@bs.set]
    external selectFiles : path:string array ->  unit = "selectFiles" [@@bs.send.pipe: ('own) hTMLInputElement_like] 
    external setSelectionRange : start:int -> end_:int -> ?direction:string Js.undefined ->  unit = "setSelectionRange" [@@bs.send.pipe: ('own) hTMLInputElement_like] 
    
    let setSelectionRange ~start ~end_ ?direction hTMLInputElement =
      let conv_direction = Js_undefined.from_opt in
      let direction = conv_direction direction in
      setSelectionRange ~start ~end_ ~direction hTMLInputElement
    
end
 module HTMLParagraphElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLAreaElement = struct
    include HTMLElement
    
    external relList : hTMLAreaElement:('own) hTMLAreaElement_like ->  dOMTokenList = "relList" [@@bs.get] 
    
    
end
 module HTMLSpanElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLFormElement = struct
    include HTMLElement
    
    external acceptCharset : hTMLFormElement:('own) hTMLFormElement_like ->  string = "acceptCharset" [@@bs.get] 
    external setAcceptCharset : hTMLFormElement:('own) hTMLFormElement_like -> acceptCharset:string ->  unit = "acceptCharset" [@@bs.set]
    external action : hTMLFormElement:('own) hTMLFormElement_like ->  string = "action" [@@bs.get] 
    external setAction : hTMLFormElement:('own) hTMLFormElement_like -> action:string ->  unit = "action" [@@bs.set]
    external autocomplete : hTMLFormElement:('own) hTMLFormElement_like ->  string = "autocomplete" [@@bs.get] 
    external setAutocomplete : hTMLFormElement:('own) hTMLFormElement_like -> autocomplete:string ->  unit = "autocomplete" [@@bs.set]
    external enctype : hTMLFormElement:('own) hTMLFormElement_like ->  string = "enctype" [@@bs.get] 
    external setEnctype : hTMLFormElement:('own) hTMLFormElement_like -> enctype:string ->  unit = "enctype" [@@bs.set]
    external encoding : hTMLFormElement:('own) hTMLFormElement_like ->  string = "encoding" [@@bs.get] 
    external setEncoding : hTMLFormElement:('own) hTMLFormElement_like -> encoding:string ->  unit = "encoding" [@@bs.set]
    external method_ : hTMLFormElement:('own) hTMLFormElement_like ->  string = "method" [@@bs.get] 
    external setMethod : hTMLFormElement:('own) hTMLFormElement_like -> method_:string ->  unit = "method" [@@bs.set]
    external name : hTMLFormElement:('own) hTMLFormElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLFormElement:('own) hTMLFormElement_like -> name:string ->  unit = "name" [@@bs.set]
    external noValidate : hTMLFormElement:('own) hTMLFormElement_like ->  bool = "noValidate" [@@bs.get] 
    external setNoValidate : hTMLFormElement:('own) hTMLFormElement_like -> noValidate:Js.boolean ->  unit = "noValidate" [@@bs.set]
    external target : hTMLFormElement:('own) hTMLFormElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLFormElement:('own) hTMLFormElement_like -> target:string ->  unit = "target" [@@bs.set]
    external elements : hTMLFormElement:('own) hTMLFormElement_like ->  hTMLFormControlsCollection = "elements" [@@bs.get] 
    external length : hTMLFormElement:('own) hTMLFormElement_like ->  int = "length" [@@bs.get] 
    external none : hTMLFormElement:('own) hTMLFormElement_like -> index:int ->  element option = "" [@@bs.get_index] [@@bs.return null_to_opt]
    external reset :  unit = "reset" [@@bs.send.pipe: ('own) hTMLFormElement_like] 
    external submit :  unit = "submit" [@@bs.send.pipe: ('own) hTMLFormElement_like] 
    
    
end
 module HTMLDataListElement = struct
    include HTMLElement
    
    external options : hTMLDataListElement:('own) hTMLDataListElement_like ->  hTMLCollection = "options" [@@bs.get] 
    
    
end
 module HTMLCanvasElement = struct
    include HTMLElement
    
    external width : hTMLCanvasElement:('own) hTMLCanvasElement_like ->  int = "width" [@@bs.get] 
    external setWidth : hTMLCanvasElement:('own) hTMLCanvasElement_like -> width:int ->  unit = "width" [@@bs.set]
    external height : hTMLCanvasElement:('own) hTMLCanvasElement_like ->  int = "height" [@@bs.get] 
    external setHeight : hTMLCanvasElement:('own) hTMLCanvasElement_like -> height:int ->  unit = "height" [@@bs.set]
    external getContext : hTMLCanvasElement:('own) hTMLCanvasElement_like ->  (('own) hTMLCanvasElement_like, 'a1088 Js.null, (string*('a1089))) variadic_func = "getContext" [@@bs.get]
    external toDataURL : hTMLCanvasElement:('own) hTMLCanvasElement_like ->  (('own) hTMLCanvasElement_like, string, (string Js.undefined*('a1090))) variadic_func = "toDataURL" [@@bs.get]
    
    let getContext ~contextId ~arguments hTMLCanvasElement =
      let func = getContext hTMLCanvasElement in
      let args = to_arg arguments in
      let args = unsafe_add args contextId in
      apply func hTMLCanvasElement args
    
    let getContext ~contextId ~arguments hTMLCanvasElement =
      let conv_return = identity in
      let return = getContext ~contextId ~arguments hTMLCanvasElement in
      let conv_return = null_to_opt conv_return in
      let return = conv_return return in
      return
    
    let toDataURL ~type_ ~arguments hTMLCanvasElement =
      let func = toDataURL hTMLCanvasElement in
      let args = to_arg arguments in
      let args = unsafe_add args type_ in
      apply func hTMLCanvasElement args
    
    let toDataURL ?type_ ~arguments hTMLCanvasElement =
      let conv_type = Js_undefined.from_opt in
      let type_ = conv_type type_ in
      toDataURL ~type_ ~arguments hTMLCanvasElement
    
end
 module HTMLTrackElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLTableRowElement = struct
    include HTMLElement
    
    external rowIndex : hTMLTableRowElement:('own) hTMLTableRowElement_like ->  int = "rowIndex" [@@bs.get] 
    external sectionRowIndex : hTMLTableRowElement:('own) hTMLTableRowElement_like ->  int = "sectionRowIndex" [@@bs.get] 
    external cells : hTMLTableRowElement:('own) hTMLTableRowElement_like ->  hTMLCollection = "cells" [@@bs.get] 
    external bgColor : hTMLTableRowElement:('own) hTMLTableRowElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableRowElement:('own) hTMLTableRowElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external deleteCell : index:int ->  unit = "deleteCell" [@@bs.send.pipe: ('own) hTMLTableRowElement_like] 
    external insertCell : ?index:int Js.undefined ->  hTMLElement = "insertCell" [@@bs.send.pipe: ('own) hTMLTableRowElement_like] 
    
    let insertCell ?index hTMLTableRowElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertCell ~index hTMLTableRowElement
    
end
 module HTMLDivElement = struct
    include HTMLElement
    
    external align : hTMLDivElement:('own) hTMLDivElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLDivElement:('own) hTMLDivElement_like -> align:string ->  unit = "align" [@@bs.set]
    
    
end
 module HTMLAppletElement = struct
    include HTMLElement
    
    external name : hTMLAppletElement:('own) hTMLAppletElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLAppletElement:('own) hTMLAppletElement_like -> name:string ->  unit = "name" [@@bs.set]
    
    
end
 module HTMLDialogElement = struct
    include HTMLElement
    
    external open_ : hTMLDialogElement:('own) hTMLDialogElement_like ->  bool = "open" [@@bs.get] 
    external setOpen : hTMLDialogElement:('own) hTMLDialogElement_like -> open_:Js.boolean ->  unit = "open" [@@bs.set]
    external returnValue : hTMLDialogElement:('own) hTMLDialogElement_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : hTMLDialogElement:('own) hTMLDialogElement_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    external close : ?returnValue:string Js.undefined ->  unit = "close" [@@bs.send.pipe: ('own) hTMLDialogElement_like] 
    
    let close ?returnValue hTMLDialogElement =
      let conv_returnValue = Js_undefined.from_opt in
      let returnValue = conv_returnValue returnValue in
      close ~returnValue hTMLDialogElement
    
end
 module HTMLFrameSetElement = struct
    include HTMLElement
    
    external onafterprint : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1091 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onafterprint:(event -> 'a1092 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1093 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onbeforeprint:(event -> 'a1094 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onbeforeunload:(event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1095 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onhashchange:(event -> 'a1096 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1097 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onlanguagechange:(event -> 'a1098 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1099 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onmessage:(event -> 'a1100 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1101 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onoffline:(event -> 'a1102 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1103 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> ononline:(event -> 'a1104 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1105 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onpagehide:(event -> 'a1106 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1107 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onpageshow:(event -> 'a1108 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1109 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onpopstate:(event -> 'a1110 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1111 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onrejectionhandled:(event -> 'a1112 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1113 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onstorage:(event -> 'a1114 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1115 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onunhandledrejection:(event -> 'a1116 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : hTMLFrameSetElement:('own) hTMLFrameSetElement_like ->  (event -> 'a1117 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : hTMLFrameSetElement:('own) hTMLFrameSetElement_like -> onunload:(event -> 'a1118 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    
    
end
 module HTMLDetailsElement = struct
    include HTMLElement
    
    external open_ : hTMLDetailsElement:('own) hTMLDetailsElement_like ->  bool = "open" [@@bs.get] 
    external setOpen : hTMLDetailsElement:('own) hTMLDetailsElement_like -> open_:Js.boolean ->  unit = "open" [@@bs.set]
    
    
end
 module HTMLProgressElement = struct
    include HTMLElement
    
    external labels : hTMLProgressElement:('own) hTMLProgressElement_like ->  nodeList = "labels" [@@bs.get] 
    
    
end
 module HTMLFontElement = struct
    include HTMLElement
    
    external color : hTMLFontElement:('own) hTMLFontElement_like ->  string = "color" [@@bs.get] 
    external setColor : hTMLFontElement:('own) hTMLFontElement_like -> color:string ->  unit = "color" [@@bs.set]
    external face : hTMLFontElement:('own) hTMLFontElement_like ->  string = "face" [@@bs.get] 
    external setFace : hTMLFontElement:('own) hTMLFontElement_like -> face:string ->  unit = "face" [@@bs.set]
    external size : hTMLFontElement:('own) hTMLFontElement_like ->  string = "size" [@@bs.get] 
    external setSize : hTMLFontElement:('own) hTMLFontElement_like -> size:string ->  unit = "size" [@@bs.set]
    
    
end
 module HTMLTableCellElement = struct
    include HTMLElement
    
    external colSpan : hTMLTableCellElement:('own) hTMLTableCellElement_like ->  int = "colSpan" [@@bs.get] 
    external setColSpan : hTMLTableCellElement:('own) hTMLTableCellElement_like -> colSpan:int ->  unit = "colSpan" [@@bs.set]
    external rowSpan : hTMLTableCellElement:('own) hTMLTableCellElement_like ->  int = "rowSpan" [@@bs.get] 
    external setRowSpan : hTMLTableCellElement:('own) hTMLTableCellElement_like -> rowSpan:int ->  unit = "rowSpan" [@@bs.set]
    external cellIndex : hTMLTableCellElement:('own) hTMLTableCellElement_like ->  int = "cellIndex" [@@bs.get] 
    external width : hTMLTableCellElement:('own) hTMLTableCellElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLTableCellElement:('own) hTMLTableCellElement_like -> width:string ->  unit = "width" [@@bs.set]
    external bgColor : hTMLTableCellElement:('own) hTMLTableCellElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableCellElement:('own) hTMLTableCellElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    
    
end
 module HTMLTableElement = struct
    include HTMLElement
    
    external caption : hTMLTableElement:('own) hTMLTableElement_like ->  hTMLTableCaptionElement option = "caption" [@@bs.get] [@@bs.return null_to_opt]
    external setCaption : hTMLTableElement:('own) hTMLTableElement_like -> caption:hTMLTableCaptionElement Js.null ->  unit = "caption" [@@bs.set]
    external tHead : hTMLTableElement:('own) hTMLTableElement_like ->  hTMLTableSectionElement option = "tHead" [@@bs.get] [@@bs.return null_to_opt]
    external setTHead : hTMLTableElement:('own) hTMLTableElement_like -> tHead:hTMLTableSectionElement Js.null ->  unit = "tHead" [@@bs.set]
    external tFoot : hTMLTableElement:('own) hTMLTableElement_like ->  hTMLTableSectionElement option = "tFoot" [@@bs.get] [@@bs.return null_to_opt]
    external setTFoot : hTMLTableElement:('own) hTMLTableElement_like -> tFoot:hTMLTableSectionElement Js.null ->  unit = "tFoot" [@@bs.set]
    external tBodies : hTMLTableElement:('own) hTMLTableElement_like ->  hTMLCollection = "tBodies" [@@bs.get] 
    external rows : hTMLTableElement:('own) hTMLTableElement_like ->  hTMLCollection = "rows" [@@bs.get] 
    external width : hTMLTableElement:('own) hTMLTableElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLTableElement:('own) hTMLTableElement_like -> width:string ->  unit = "width" [@@bs.set]
    external bgColor : hTMLTableElement:('own) hTMLTableElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableElement:('own) hTMLTableElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external createCaption :  hTMLTableCaptionElement = "createCaption" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external createTBody :  hTMLTableSectionElement = "createTBody" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external createTFoot :  hTMLTableSectionElement = "createTFoot" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external createTHead :  hTMLTableSectionElement = "createTHead" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external deleteCaption :  unit = "deleteCaption" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external deleteRow : index:int ->  unit = "deleteRow" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external deleteTFoot :  unit = "deleteTFoot" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external deleteTHead :  unit = "deleteTHead" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    external insertRow : ?index:int Js.undefined ->  hTMLTableRowElement = "insertRow" [@@bs.send.pipe: ('own) hTMLTableElement_like] 
    
    let insertRow ?index hTMLTableElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertRow ~index hTMLTableElement
    
end
 module HTMLHeadingElement = struct
    include HTMLElement
    
    
    
    
end
 module HTMLAudioElement = struct
    include HTMLMediaElement
    
    
    
    
end
 module HTMLTableHeaderCellElement = struct
    include HTMLTableCellElement
    
    
    
    
end
 module SVGSVGElement = struct
    include SVGGraphicsElement
    
    
    
    
end
 module HTMLVideoElement = struct
    include HTMLMediaElement
    
    
    
    
end
 module HTMLTableDataCellElement = struct
    include HTMLTableCellElement
    
    
    
    
end
