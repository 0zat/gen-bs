(* generated by gen-bs 0.1.0 *)
(* internal use *)

type _baseClass
(* functions for variadic *)
type ('own, 'return, 'args) variadic_func
type 'args variadic_args

external apply : ('own, 'return, 'args) variadic_func ->
                 'own -> 'args variadic_args -> 'return = "apply" [@@bs.send]

let to_arg ary =
  let to_arg : 'a array -> 'a variadic_args [@bs] = 
    [%bs.raw "function(a){ return a}"]
  in
  Js_unsafe.fn_run1 to_arg ary

let unsafe_add ary mem = 
  let unsafe_add : 'a variadic_args -> 'b -> ('b * 'a) variadic_args [@bs] = 
    [%bs.raw "function(a, b){ return [b].concat(a)}"]
  in
  Js_unsafe.fn_run2 unsafe_add ary mem
(* functions for override *)
let access_array f x = Array.map f x
let access_null f x = Js_null.bind x (Js_unsafe.fn_mk1 f) 
let access_undef f x = Js_undefined.bind x (Js_unsafe.fn_mk1 f) 
(*let access_promise f x = Js_promise.then_ f x*)

let undef_to_opt f x = Js_undefined.to_opt (f x)
let null_to_opt f x = Js_null.to_opt (f x)
let identity x = x

(* variadic callback code *)
type ('a, 'b) variadic_arity8 = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 * 'a7 * 'a8 *  'b 
constraint 'a = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 * 'a7 * 'a8
type ('a, 'b) variadic_arity7 = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 * 'a7 *  'b *  'b
constraint 'a = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 * 'a7
type ('a, 'b) variadic_arity6 = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 *  'b *  'b *  'b
constraint 'a = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 * 'a6 
type ('a, 'b) variadic_arity5 = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 *  'b *  'b *  'b *  'b
constraint 'a = 'a1 * 'a2 * 'a3 * 'a4 * 'a5 
type ('a, 'b) variadic_arity4 = 'a1 * 'a2 * 'a3 * 'a4 *  'b *  'b *  'b *  'b *  'b
constraint 'a = 'a1 * 'a2 * 'a3 * 'a4
type ('a, 'b) variadic_arity3 = 'a1 * 'a2 * 'a3 *  'b *  'b *  'b *  'b *  'b *  'b
constraint 'a = 'a1 * 'a2 * 'a3
type ('a, 'b) variadic_arity2 = 'a1 * 'a2 *  'b *  'b *  'b *  'b *  'b *  'b *  'b
constraint 'a = 'a1 * 'a2 
type ('a, 'b) variadic_arity1 = 'a1 *  'b *  'b *  'b *  'b *  'b *  'b *  'b *  'b
constraint 'a = 'a1
type 'b variadic_arity0 = 'b  *  'b *  'b *  'b *  'b *  'b *  'b *  'b *  'b

type 'a variadic_arity = 
  [
    | `Arity_9 of 'a1 * 'a2 * 'a3 * 'a4  * 'a5  * 'a6  * 'a7  * 'a8  * 'a9   
    | `Arity_8 of 'a1 * 'a2 * 'a3 * 'a4  * 'a5  * 'a6  * 'a7  * 'a8  
    | `Arity_7 of 'a1 * 'a2 * 'a3 * 'a4  * 'a5  * 'a6  * 'a7 
    | `Arity_6 of 'a1 * 'a2 * 'a3 * 'a4  * 'a5  * 'a6   
    | `Arity_5 of 'a1 * 'a2 * 'a3 * 'a4  * 'a5 
    | `Arity_4 of 'a1 * 'a2 * 'a3 * 'a4 
    | `Arity_3 of 'a1 * 'a2 * 'a3  
    | `Arity_2 of 'a1 * 'a2 
    | `Arity_1 of 'a1 
  ]
  constraint 'a =  'a1 * 'a2 * 'a3 * 'a4  * 'a5  * 'a6  * 'a7  * 'a8  * 'a9  

type ('a, 'c, 'b) variadic_callback = ('b, 'c)  Js_internal.fn constraint 'b = [<'a variadic_arity]

type ('b, 'c, 'd) variadic_callback0 = ('b variadic_arity0, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback1 = (('a, 'b) variadic_arity1, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback2 = (('a, 'b) variadic_arity2, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback3 = (('a, 'b) variadic_arity3, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback4 = (('a, 'b) variadic_arity4, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback5 = (('a, 'b) variadic_arity5, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback6 = (('a, 'b) variadic_arity6, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback7 = (('a, 'b) variadic_arity7, 'c, 'd) variadic_callback
type ('a, 'b, 'c, 'd) variadic_callback8 = (('a, 'b) variadic_arity8, 'c, 'd) variadic_callback


(* types of javascript objects*)
type __console
and ('a) _console_like
and _console = (_baseClass) _console_like
and ('a) __EventSource
and ('a) _EventSource_like = (('a) __EventSource) _EventTarget_like
and _EventSource = (_baseClass) _EventSource_like
and ('a) __HTMLIFrameElement
and ('a) _HTMLIFrameElement_like = (('a) __HTMLIFrameElement) _HTMLElement_like
and _HTMLIFrameElement = (_baseClass) _HTMLIFrameElement_like
and ('a) __CSSStyleRule
and ('a) _CSSStyleRule_like = (('a) __CSSStyleRule) _CSSRule_like
and _CSSStyleRule = (_baseClass) _CSSStyleRule_like
and ('a) __XMLHttpRequestUpload
and ('a) _XMLHttpRequestUpload_like = (('a) __XMLHttpRequestUpload) _XMLHttpRequestEventTarget_like
and _XMLHttpRequestUpload = (_baseClass) _XMLHttpRequestUpload_like
and __Performance
and ('a) _Performance_like
and _Performance = (_baseClass) _Performance_like
and ('a) __CSSFontFaceRule
and ('a) _CSSFontFaceRule_like = (('a) __CSSFontFaceRule) _CSSRule_like
and _CSSFontFaceRule = (_baseClass) _CSSFontFaceRule_like
and ('a) __HTMLAudioElement
and ('a) _HTMLAudioElement_like = (('a) __HTMLAudioElement) _HTMLMediaElement_like
and _HTMLAudioElement = (_baseClass) _HTMLAudioElement_like
and __CustomElementRegistry
and ('a) _CustomElementRegistry_like
and _CustomElementRegistry = (_baseClass) _CustomElementRegistry_like
and ('a) __SVGGraphicsElement
and ('a) _SVGGraphicsElement_like = (('a) __SVGGraphicsElement) _SVGElement_like
and _SVGGraphicsElement = (_baseClass) _SVGGraphicsElement_like
and __GamepadList
and ('a) _GamepadList_like
and _GamepadList = (_baseClass) _GamepadList_like
and ('a) __UIEvent
and ('a) _UIEvent_like = (('a) __UIEvent) _Event_like
and _UIEvent = (_baseClass) _UIEvent_like
and ('a) __HTMLScriptElement
and ('a) _HTMLScriptElement_like = (('a) __HTMLScriptElement) _HTMLElement_like
and _HTMLScriptElement = (_baseClass) _HTMLScriptElement_like
and ('a) __HTMLObjectElement
and ('a) _HTMLObjectElement_like = (('a) __HTMLObjectElement) _HTMLElement_like
and _HTMLObjectElement = (_baseClass) _HTMLObjectElement_like
and ('a) __GamepadEvent
and ('a) _GamepadEvent_like = (('a) __GamepadEvent) _Event_like
and _GamepadEvent = (_baseClass) _GamepadEvent_like
and __URLSearchParams
and ('a) _URLSearchParams_like
and _URLSearchParams = (_baseClass) _URLSearchParams_like
and ('a) __HTMLOptionsCollection
and ('a) _HTMLOptionsCollection_like = (('a) __HTMLOptionsCollection) _HTMLCollection_like
and _HTMLOptionsCollection = (_baseClass) _HTMLOptionsCollection_like
and __GamepadButton
and ('a) _GamepadButton_like
and _GamepadButton = (_baseClass) _GamepadButton_like
and ('a) __HTMLMediaElement
and ('a) _HTMLMediaElement_like = (('a) __HTMLMediaElement) _HTMLElement_like
and _HTMLMediaElement = (_baseClass) _HTMLMediaElement_like
and __ElementContentEditable
and ('a) _ElementContentEditable_like
and _ElementContentEditable = (_baseClass) _ElementContentEditable_like
and __MimeTypeArray
and ('a) _MimeTypeArray_like
and _MimeTypeArray = (_baseClass) _MimeTypeArray_like
and __FormData
and ('a) _FormData_like
and _FormData = (_baseClass) _FormData_like
and ('a) __DOMMatrix
and ('a) _DOMMatrix_like = (('a) __DOMMatrix) _DOMMatrixReadOnly_like
and _DOMMatrix = (_baseClass) _DOMMatrix_like
and ('a) __Comment
and ('a) _Comment_like = (('a) __Comment) _CharacterData_like
and _Comment = (_baseClass) _Comment_like
and __TreeWalker
and ('a) _TreeWalker_like
and _TreeWalker = (_baseClass) _TreeWalker_like
and __DOMMatrixReadOnly
and ('a) _DOMMatrixReadOnly_like
and _DOMMatrixReadOnly = (_baseClass) _DOMMatrixReadOnly_like
and ('a) __HTMLImageElement
and ('a) _HTMLImageElement_like = (('a) __HTMLImageElement) _HTMLElement_like
and _HTMLImageElement = (_baseClass) _HTMLImageElement_like
and ('a) __HTMLTableColElement
and ('a) _HTMLTableColElement_like = (('a) __HTMLTableColElement) _HTMLElement_like
and _HTMLTableColElement = (_baseClass) _HTMLTableColElement_like
and __ParentNode
and ('a) _ParentNode_like
and _ParentNode = (_baseClass) _ParentNode_like
and ('a) __WebGLFramebuffer
and ('a) _WebGLFramebuffer_like = (('a) __WebGLFramebuffer) _WebGLObject_like
and _WebGLFramebuffer = (_baseClass) _WebGLFramebuffer_like
and __Range
and ('a) _Range_like
and _Range = (_baseClass) _Range_like
and __WindowOrWorkerGlobalScope
and ('a) _WindowOrWorkerGlobalScope_like
and _WindowOrWorkerGlobalScope = (_baseClass) _WindowOrWorkerGlobalScope_like
and ('a) __HTMLTitleElement
and ('a) _HTMLTitleElement_like = (('a) __HTMLTitleElement) _HTMLElement_like
and _HTMLTitleElement = (_baseClass) _HTMLTitleElement_like
and __VREyeParameters
and ('a) _VREyeParameters_like
and _VREyeParameters = (_baseClass) _VREyeParameters_like
and ('a) __HTMLDataElement
and ('a) _HTMLDataElement_like = (('a) __HTMLDataElement) _HTMLElement_like
and _HTMLDataElement = (_baseClass) _HTMLDataElement_like
and __WebGLUniformLocation
and ('a) _WebGLUniformLocation_like
and _WebGLUniformLocation = (_baseClass) _WebGLUniformLocation_like
and ('a) __ServiceWorkerRegistration
and ('a) _ServiceWorkerRegistration_like = (('a) __ServiceWorkerRegistration) _EventTarget_like
and _ServiceWorkerRegistration = (_baseClass) _ServiceWorkerRegistration_like
and __OESTextureHalfFloat
and ('a) _OESTextureHalfFloat_like
and _OESTextureHalfFloat = (_baseClass) _OESTextureHalfFloat_like
and ('a) __ServiceWorkerContainer
and ('a) _ServiceWorkerContainer_like = (('a) __ServiceWorkerContainer) _EventTarget_like
and _ServiceWorkerContainer = (_baseClass) _ServiceWorkerContainer_like
and __OESVertexArrayObject
and ('a) _OESVertexArrayObject_like
and _OESVertexArrayObject = (_baseClass) _OESVertexArrayObject_like
and ('a) __XMLHttpRequest
and ('a) _XMLHttpRequest_like = (('a) __XMLHttpRequest) _XMLHttpRequestEventTarget_like
and _XMLHttpRequest = (_baseClass) _XMLHttpRequest_like
and ('a) __HTMLMetaElement
and ('a) _HTMLMetaElement_like = (('a) __HTMLMetaElement) _HTMLElement_like
and _HTMLMetaElement = (_baseClass) _HTMLMetaElement_like
and __TestRunner
and ('a) _TestRunner_like
and _TestRunner = (_baseClass) _TestRunner_like
and ('a) __BluetoothPermissionResult
and ('a) _BluetoothPermissionResult_like = (('a) __BluetoothPermissionResult) _PermissionStatus_like
and _BluetoothPermissionResult = (_baseClass) _BluetoothPermissionResult_like
and ('a) __ForceTouchEvent
and ('a) _ForceTouchEvent_like = (('a) __ForceTouchEvent) _UIEvent_like
and _ForceTouchEvent = (_baseClass) _ForceTouchEvent_like
and ('a) __ErrorEvent
and ('a) _ErrorEvent_like = (('a) __ErrorEvent) _Event_like
and _ErrorEvent = (_baseClass) _ErrorEvent_like
and __EventTarget
and ('a) _EventTarget_like
and _EventTarget = (_baseClass) _EventTarget_like
and ('a) __HTMLTableHeaderCellElement
and ('a) _HTMLTableHeaderCellElement_like = (('a) __HTMLTableHeaderCellElement) _HTMLTableCellElement_like
and _HTMLTableHeaderCellElement = (_baseClass) _HTMLTableHeaderCellElement_like
and __NodeIterator
and ('a) _NodeIterator_like
and _NodeIterator = (_baseClass) _NodeIterator_like
and ('a) __HTMLLIElement
and ('a) _HTMLLIElement_like = (('a) __HTMLLIElement) _HTMLElement_like
and _HTMLLIElement = (_baseClass) _HTMLLIElement_like
and ('a) __PermissionStatus
and ('a) _PermissionStatus_like = (('a) __PermissionStatus) _EventTarget_like
and _PermissionStatus = (_baseClass) _PermissionStatus_like
and ('a) __HTMLOptGroupElement
and ('a) _HTMLOptGroupElement_like = (('a) __HTMLOptGroupElement) _HTMLElement_like
and _HTMLOptGroupElement = (_baseClass) _HTMLOptGroupElement_like
and __BluetoothRemoteGATTServer
and ('a) _BluetoothRemoteGATTServer_like
and _BluetoothRemoteGATTServer = (_baseClass) _BluetoothRemoteGATTServer_like
and ('a) __MessageEvent
and ('a) _MessageEvent_like = (('a) __MessageEvent) _Event_like
and _MessageEvent = (_baseClass) _MessageEvent_like
and ('a) __DissimilarOriginWindow
and ('a) _DissimilarOriginWindow_like = (('a) __DissimilarOriginWindow) _GlobalScope_like
and _DissimilarOriginWindow = (_baseClass) _DissimilarOriginWindow_like
and ('a) __SVGSVGElement
and ('a) _SVGSVGElement_like = (('a) __SVGSVGElement) _SVGGraphicsElement_like
and _SVGSVGElement = (_baseClass) _SVGSVGElement_like
and ('a) __BeforeUnloadEvent
and ('a) _BeforeUnloadEvent_like = (('a) __BeforeUnloadEvent) _Event_like
and _BeforeUnloadEvent = (_baseClass) _BeforeUnloadEvent_like
and ('a) __KeyboardEvent
and ('a) _KeyboardEvent_like = (('a) __KeyboardEvent) _UIEvent_like
and _KeyboardEvent = (_baseClass) _KeyboardEvent_like
and ('a) __VR
and ('a) _VR_like = (('a) __VR) _EventTarget_like
and _VR = (_baseClass) _VR_like
and ('a) __TouchEvent
and ('a) _TouchEvent_like = (('a) __TouchEvent) _UIEvent_like
and _TouchEvent = (_baseClass) _TouchEvent_like
and ('a) __HTMLElement
and ('a) _HTMLElement_like = (('a) __HTMLElement) _Element_like
and _HTMLElement = (_baseClass) _HTMLElement_like
and ('a) __HTMLFieldSetElement
and ('a) _HTMLFieldSetElement_like = (('a) __HTMLFieldSetElement) _HTMLElement_like
and _HTMLFieldSetElement = (_baseClass) _HTMLFieldSetElement_like
and ('a) __HTMLDListElement
and ('a) _HTMLDListElement_like = (('a) __HTMLDListElement) _HTMLElement_like
and _HTMLDListElement = (_baseClass) _HTMLDListElement_like
and __WebGLRenderingContextBase
and ('a) _WebGLRenderingContextBase_like
and _WebGLRenderingContextBase = (_baseClass) _WebGLRenderingContextBase_like
and __WebGLRenderingContext
and ('a) _WebGLRenderingContext_like
and _WebGLRenderingContext = (_baseClass) _WebGLRenderingContext_like
and ('a) __DocumentFragment
and ('a) _DocumentFragment_like = (('a) __DocumentFragment) _Node_like
and _DocumentFragment = (_baseClass) _DocumentFragment_like
and __Location
and ('a) _Location_like
and _Location = (_baseClass) _Location_like
and __Body
and ('a) _Body_like
and _Body = (_baseClass) _Body_like
and ('a) __DOMRect
and ('a) _DOMRect_like = (('a) __DOMRect) _DOMRectReadOnly_like
and _DOMRect = (_baseClass) _DOMRect_like
and __History
and ('a) _History_like
and _History = (_baseClass) _History_like
and __NodeList
and ('a) _NodeList_like
and _NodeList = (_baseClass) _NodeList_like
and ('a) __HTMLBodyElement
and ('a) _HTMLBodyElement_like = (('a) __HTMLBodyElement) _HTMLElement_like
and _HTMLBodyElement = (_baseClass) _HTMLBodyElement_like
and ('a) __BluetoothDevice
and ('a) _BluetoothDevice_like = (('a) __BluetoothDevice) _EventTarget_like
and _BluetoothDevice = (_baseClass) _BluetoothDevice_like
and __BluetoothDeviceEventHandlers
and ('a) _BluetoothDeviceEventHandlers_like
and _BluetoothDeviceEventHandlers = (_baseClass) _BluetoothDeviceEventHandlers_like
and ('a) __HTMLLegendElement
and ('a) _HTMLLegendElement_like = (('a) __HTMLLegendElement) _HTMLElement_like
and _HTMLLegendElement = (_baseClass) _HTMLLegendElement_like
and __Screen
and ('a) _Screen_like
and _Screen = (_baseClass) _Screen_like
and __PluginArray
and ('a) _PluginArray_like
and _PluginArray = (_baseClass) _PluginArray_like
and __BluetoothCharacteristicProperties
and ('a) _BluetoothCharacteristicProperties_like
and _BluetoothCharacteristicProperties = (_baseClass) _BluetoothCharacteristicProperties_like
and __DOMRectReadOnly
and ('a) _DOMRectReadOnly_like
and _DOMRectReadOnly = (_baseClass) _DOMRectReadOnly_like
and ('a) __CSSSupportsRule
and ('a) _CSSSupportsRule_like = (('a) __CSSSupportsRule) _CSSConditionRule_like
and _CSSSupportsRule = (_baseClass) _CSSSupportsRule_like
and ('a) __CSSImportRule
and ('a) _CSSImportRule_like = (('a) __CSSImportRule) _CSSRule_like
and _CSSImportRule = (_baseClass) _CSSImportRule_like
and __BluetoothRemoteGATTDescriptor
and ('a) _BluetoothRemoteGATTDescriptor_like
and _BluetoothRemoteGATTDescriptor = (_baseClass) _BluetoothRemoteGATTDescriptor_like
and __ChildNode
and ('a) _ChildNode_like
and _ChildNode = (_baseClass) _ChildNode_like
and __NonDocumentTypeChildNode
and ('a) _NonDocumentTypeChildNode_like
and _NonDocumentTypeChildNode = (_baseClass) _NonDocumentTypeChildNode_like
and __DOMParser
and ('a) _DOMParser_like
and _DOMParser = (_baseClass) _DOMParser_like
and __URL
and ('a) _URL_like
and _URL = (_baseClass) _URL_like
and __ElementCSSInlineStyle
and ('a) _ElementCSSInlineStyle_like
and _ElementCSSInlineStyle = (_baseClass) _ElementCSSInlineStyle_like
and __FileList
and ('a) _FileList_like
and _FileList = (_baseClass) _FileList_like
and __WebGLObject
and ('a) _WebGLObject_like
and _WebGLObject = (_baseClass) _WebGLObject_like
and ('a) __RadioNodeList
and ('a) _RadioNodeList_like = (('a) __RadioNodeList) _NodeList_like
and _RadioNodeList = (_baseClass) _RadioNodeList_like
and __BrowserElement
and ('a) _BrowserElement_like
and _BrowserElement = (_baseClass) _BrowserElement_like
and __BrowserElementCommon
and ('a) _BrowserElementCommon_like
and _BrowserElementCommon = (_baseClass) _BrowserElementCommon_like
and __BrowserElementPrivileged
and ('a) _BrowserElementPrivileged_like
and _BrowserElementPrivileged = (_baseClass) _BrowserElementPrivileged_like
and ('a) __File
and ('a) _File_like = (('a) __File) _Blob_like
and _File = (_baseClass) _File_like
and __WorkerNavigator
and ('a) _WorkerNavigator_like
and _WorkerNavigator = (_baseClass) _WorkerNavigator_like
and __StyleSheet
and ('a) _StyleSheet_like
and _StyleSheet = (_baseClass) _StyleSheet_like
and __LinkStyle
and ('a) _LinkStyle_like
and _LinkStyle = (_baseClass) _LinkStyle_like
and ('a) __HTMLBaseElement
and ('a) _HTMLBaseElement_like = (('a) __HTMLBaseElement) _HTMLElement_like
and _HTMLBaseElement = (_baseClass) _HTMLBaseElement_like
and __HTMLCollection
and ('a) _HTMLCollection_like
and _HTMLCollection = (_baseClass) _HTMLCollection_like
and ('a) __HTMLUListElement
and ('a) _HTMLUListElement_like = (('a) __HTMLUListElement) _HTMLElement_like
and _HTMLUListElement = (_baseClass) _HTMLUListElement_like
and __PerformanceTiming
and ('a) _PerformanceTiming_like
and _PerformanceTiming = (_baseClass) _PerformanceTiming_like
and ('a) __ExtendableMessageEvent
and ('a) _ExtendableMessageEvent_like = (('a) __ExtendableMessageEvent) _ExtendableEvent_like
and _ExtendableMessageEvent = (_baseClass) _ExtendableMessageEvent_like
and ('a) __HTMLHtmlElement
and ('a) _HTMLHtmlElement_like = (('a) __HTMLHtmlElement) _HTMLElement_like
and _HTMLHtmlElement = (_baseClass) _HTMLHtmlElement_like
and ('a) __HTMLTimeElement
and ('a) _HTMLTimeElement_like = (('a) __HTMLTimeElement) _HTMLElement_like
and _HTMLTimeElement = (_baseClass) _HTMLTimeElement_like
and __Touch
and ('a) _Touch_like
and _Touch = (_baseClass) _Touch_like
and ('a) __StorageEvent
and ('a) _StorageEvent_like = (('a) __StorageEvent) _Event_like
and _StorageEvent = (_baseClass) _StorageEvent_like
and __NonElementParentNode
and ('a) _NonElementParentNode_like
and _NonElementParentNode = (_baseClass) _NonElementParentNode_like
and __CSSRuleList
and ('a) _CSSRuleList_like
and _CSSRuleList = (_baseClass) _CSSRuleList_like
and ('a) __HTMLTableSectionElement
and ('a) _HTMLTableSectionElement_like = (('a) __HTMLTableSectionElement) _HTMLElement_like
and _HTMLTableSectionElement = (_baseClass) _HTMLTableSectionElement_like
and ('a) __Node
and ('a) _Node_like = (('a) __Node) _EventTarget_like
and _Node = (_baseClass) _Node_like
and ('a) __VRDisplayEvent
and ('a) _VRDisplayEvent_like = (('a) __VRDisplayEvent) _Event_like
and _VRDisplayEvent = (_baseClass) _VRDisplayEvent_like
and __DissimilarOriginLocation
and ('a) _DissimilarOriginLocation_like
and _DissimilarOriginLocation = (_baseClass) _DissimilarOriginLocation_like
and __DOMImplementation
and ('a) _DOMImplementation_like
and _DOMImplementation = (_baseClass) _DOMImplementation_like
and ('a) __PopStateEvent
and ('a) _PopStateEvent_like = (('a) __PopStateEvent) _Event_like
and _PopStateEvent = (_baseClass) _PopStateEvent_like
and ('a) __HTMLFrameElement
and ('a) _HTMLFrameElement_like = (('a) __HTMLFrameElement) _HTMLElement_like
and _HTMLFrameElement = (_baseClass) _HTMLFrameElement_like
and ('a) __VRDisplay
and ('a) _VRDisplay_like = (('a) __VRDisplay) _EventTarget_like
and _VRDisplay = (_baseClass) _VRDisplay_like
and __TestBinding
and ('a) _TestBinding_like
and _TestBinding = (_baseClass) _TestBinding_like
and __WorkerLocation
and ('a) _WorkerLocation_like
and _WorkerLocation = (_baseClass) _WorkerLocation_like
and __CSS
and ('a) _CSS_like
and _CSS = (_baseClass) _CSS_like
and ('a) __HTMLVideoElement
and ('a) _HTMLVideoElement_like = (('a) __HTMLVideoElement) _HTMLMediaElement_like
and _HTMLVideoElement = (_baseClass) _HTMLVideoElement_like
and __CanvasGradient
and ('a) _CanvasGradient_like
and _CanvasGradient = (_baseClass) _CanvasGradient_like
and __VRFieldOfView
and ('a) _VRFieldOfView_like
and _VRFieldOfView = (_baseClass) _VRFieldOfView_like
and ('a) __HTMLLinkElement
and ('a) _HTMLLinkElement_like = (('a) __HTMLLinkElement) _HTMLElement_like
and _HTMLLinkElement = (_baseClass) _HTMLLinkElement_like
and ('a) __WebGLContextEvent
and ('a) _WebGLContextEvent_like = (('a) __WebGLContextEvent) _Event_like
and _WebGLContextEvent = (_baseClass) _WebGLContextEvent_like
and ('a) __WebGLProgram
and ('a) _WebGLProgram_like = (('a) __WebGLProgram) _WebGLObject_like
and _WebGLProgram = (_baseClass) _WebGLProgram_like
and ('a) __BluetoothRemoteGATTCharacteristic
and ('a) _BluetoothRemoteGATTCharacteristic_like = (('a) __BluetoothRemoteGATTCharacteristic) _EventTarget_like
and _BluetoothRemoteGATTCharacteristic = (_baseClass) _BluetoothRemoteGATTCharacteristic_like
and __CharacteristicEventHandlers
and ('a) _CharacteristicEventHandlers_like
and _CharacteristicEventHandlers = (_baseClass) _CharacteristicEventHandlers_like
and ('a) __HTMLEmbedElement
and ('a) _HTMLEmbedElement_like = (('a) __HTMLEmbedElement) _HTMLElement_like
and _HTMLEmbedElement = (_baseClass) _HTMLEmbedElement_like
and __Gamepad
and ('a) _Gamepad_like
and _Gamepad = (_baseClass) _Gamepad_like
and ('a) __CSSConditionRule
and ('a) _CSSConditionRule_like = (('a) __CSSConditionRule) _CSSGroupingRule_like
and _CSSConditionRule = (_baseClass) _CSSConditionRule_like
and __TextDecoder
and ('a) _TextDecoder_like
and _TextDecoder = (_baseClass) _TextDecoder_like
and __TestBindingPairIterable
and ('a) _TestBindingPairIterable_like
and _TestBindingPairIterable = (_baseClass) _TestBindingPairIterable_like
and ('a) __HTMLMeterElement
and ('a) _HTMLMeterElement_like = (('a) __HTMLMeterElement) _HTMLElement_like
and _HTMLMeterElement = (_baseClass) _HTMLMeterElement_like
and __HTMLHyperlinkElementUtils
and ('a) _HTMLHyperlinkElementUtils_like
and _HTMLHyperlinkElementUtils = (_baseClass) _HTMLHyperlinkElementUtils_like
and __NamedNodeMap
and ('a) _NamedNodeMap_like
and _NamedNodeMap = (_baseClass) _NamedNodeMap_like
and ('a) __HTMLTableCaptionElement
and ('a) _HTMLTableCaptionElement_like = (('a) __HTMLTableCaptionElement) _HTMLElement_like
and _HTMLTableCaptionElement = (_baseClass) _HTMLTableCaptionElement_like
and ('a) __CSSKeyframeRule
and ('a) _CSSKeyframeRule_like = (('a) __CSSKeyframeRule) _CSSRule_like
and _CSSKeyframeRule = (_baseClass) _CSSKeyframeRule_like
and ('a) __WebGLVertexArrayObjectOES
and ('a) _WebGLVertexArrayObjectOES_like = (('a) __WebGLVertexArrayObjectOES) _WebGLObject_like
and _WebGLVertexArrayObjectOES = (_baseClass) _WebGLVertexArrayObjectOES_like
and ('a) __HTMLLabelElement
and ('a) _HTMLLabelElement_like = (('a) __HTMLLabelElement) _HTMLElement_like
and _HTMLLabelElement = (_baseClass) _HTMLLabelElement_like
and ('a) __PaintWorkletGlobalScope
and ('a) _PaintWorkletGlobalScope_like = (('a) __PaintWorkletGlobalScope) _WorkletGlobalScope_like
and _PaintWorkletGlobalScope = (_baseClass) _PaintWorkletGlobalScope_like
and ('a) __HTMLAnchorElement
and ('a) _HTMLAnchorElement_like = (('a) __HTMLAnchorElement) _HTMLElement_like
and _HTMLAnchorElement = (_baseClass) _HTMLAnchorElement_like
and ('a) __HTMLHeadElement
and ('a) _HTMLHeadElement_like = (('a) __HTMLHeadElement) _HTMLElement_like
and _HTMLHeadElement = (_baseClass) _HTMLHeadElement_like
and ('a) __HTMLOutputElement
and ('a) _HTMLOutputElement_like = (('a) __HTMLOutputElement) _HTMLElement_like
and _HTMLOutputElement = (_baseClass) _HTMLOutputElement_like
and ('a) __ServiceWorkerGlobalScope
and ('a) _ServiceWorkerGlobalScope_like = (('a) __ServiceWorkerGlobalScope) _WorkerGlobalScope_like
and _ServiceWorkerGlobalScope = (_baseClass) _ServiceWorkerGlobalScope_like
and ('a) __WebGLShader
and ('a) _WebGLShader_like = (('a) __WebGLShader) _WebGLObject_like
and _WebGLShader = (_baseClass) _WebGLShader_like
and __TouchList
and ('a) _TouchList_like
and _TouchList = (_baseClass) _TouchList_like
and __WebGLActiveInfo
and ('a) _WebGLActiveInfo_like
and _WebGLActiveInfo = (_baseClass) _WebGLActiveInfo_like
and __Plugin
and ('a) _Plugin_like
and _Plugin = (_baseClass) _Plugin_like
and ('a) __DedicatedWorkerGlobalScope
and ('a) _DedicatedWorkerGlobalScope_like = (('a) __DedicatedWorkerGlobalScope) _WorkerGlobalScope_like
and _DedicatedWorkerGlobalScope = (_baseClass) _DedicatedWorkerGlobalScope_like
and ('a) __GlobalScope
and ('a) _GlobalScope_like = (('a) __GlobalScope) _EventTarget_like
and _GlobalScope = (_baseClass) _GlobalScope_like
and __VRDisplayCapabilities
and ('a) _VRDisplayCapabilities_like
and _VRDisplayCapabilities = (_baseClass) _VRDisplayCapabilities_like
and ('a) __HTMLUnknownElement
and ('a) _HTMLUnknownElement_like = (('a) __HTMLUnknownElement) _HTMLElement_like
and _HTMLUnknownElement = (_baseClass) _HTMLUnknownElement_like
and __Headers
and ('a) _Headers_like
and _Headers = (_baseClass) _Headers_like
and ('a) __CSSMediaRule
and ('a) _CSSMediaRule_like = (('a) __CSSMediaRule) _CSSConditionRule_like
and _CSSMediaRule = (_baseClass) _CSSMediaRule_like
and __OESTextureHalfFloatLinear
and ('a) _OESTextureHalfFloatLinear_like
and _OESTextureHalfFloatLinear = (_baseClass) _OESTextureHalfFloatLinear_like
and ('a) __HTMLParamElement
and ('a) _HTMLParamElement_like = (('a) __HTMLParamElement) _HTMLElement_like
and _HTMLParamElement = (_baseClass) _HTMLParamElement_like
and ('a) __DocumentType
and ('a) _DocumentType_like = (('a) __DocumentType) _Node_like
and _DocumentType = (_baseClass) _DocumentType_like
and ('a) __TestBindingProxy
and ('a) _TestBindingProxy_like = (('a) __TestBindingProxy) _TestBinding_like
and _TestBindingProxy = (_baseClass) _TestBindingProxy_like
and ('a) __HTMLOptionElement
and ('a) _HTMLOptionElement_like = (('a) __HTMLOptionElement) _HTMLElement_like
and _HTMLOptionElement = (_baseClass) _HTMLOptionElement_like
and ('a) __HTMLFormControlsCollection
and ('a) _HTMLFormControlsCollection_like = (('a) __HTMLFormControlsCollection) _HTMLCollection_like
and _HTMLFormControlsCollection = (_baseClass) _HTMLFormControlsCollection_like
and __Worklet
and ('a) _Worklet_like
and _Worklet = (_baseClass) _Worklet_like
and __Navigator
and ('a) _Navigator_like
and _Navigator = (_baseClass) _Navigator_like
and __NavigatorID
and ('a) _NavigatorID_like
and _NavigatorID = (_baseClass) _NavigatorID_like
and __NavigatorLanguage
and ('a) _NavigatorLanguage_like
and _NavigatorLanguage = (_baseClass) _NavigatorLanguage_like
and __NavigatorPlugins
and ('a) _NavigatorPlugins_like
and _NavigatorPlugins = (_baseClass) _NavigatorPlugins_like
and __NavigatorCookies
and ('a) _NavigatorCookies_like
and _NavigatorCookies = (_baseClass) _NavigatorCookies_like
and __PromiseNativeHandler
and ('a) _PromiseNativeHandler_like
and _PromiseNativeHandler = (_baseClass) _PromiseNativeHandler_like
and ('a) __HTMLOListElement
and ('a) _HTMLOListElement_like = (('a) __HTMLOListElement) _HTMLElement_like
and _HTMLOListElement = (_baseClass) _HTMLOListElement_like
and ('a) __CustomEvent
and ('a) _CustomEvent_like = (('a) __CustomEvent) _Event_like
and _CustomEvent = (_baseClass) _CustomEvent_like
and ('a) __HTMLSelectElement
and ('a) _HTMLSelectElement_like = (('a) __HTMLSelectElement) _HTMLElement_like
and _HTMLSelectElement = (_baseClass) _HTMLSelectElement_like
and ('a) __HTMLStyleElement
and ('a) _HTMLStyleElement_like = (('a) __HTMLStyleElement) _HTMLElement_like
and _HTMLStyleElement = (_baseClass) _HTMLStyleElement_like
and ('a) __HTMLQuoteElement
and ('a) _HTMLQuoteElement_like = (('a) __HTMLQuoteElement) _HTMLElement_like
and _HTMLQuoteElement = (_baseClass) _HTMLQuoteElement_like
and ('a) __DOMPoint
and ('a) _DOMPoint_like = (('a) __DOMPoint) _DOMPointReadOnly_like
and _DOMPoint = (_baseClass) _DOMPoint_like
and __FileReaderSync
and ('a) _FileReaderSync_like
and _FileReaderSync = (_baseClass) _FileReaderSync_like
and __ImageData
and ('a) _ImageData_like
and _ImageData = (_baseClass) _ImageData_like
and ('a) __HTMLBRElement
and ('a) _HTMLBRElement_like = (('a) __HTMLBRElement) _HTMLElement_like
and _HTMLBRElement = (_baseClass) _HTMLBRElement_like
and __MimeType
and ('a) _MimeType_like
and _MimeType = (_baseClass) _MimeType_like
and ('a) __PageTransitionEvent
and ('a) _PageTransitionEvent_like = (('a) __PageTransitionEvent) _Event_like
and _PageTransitionEvent = (_baseClass) _PageTransitionEvent_like
and __GlobalCrypto
and ('a) _GlobalCrypto_like
and _GlobalCrypto = (_baseClass) _GlobalCrypto_like
and __Crypto
and ('a) _Crypto_like
and _Crypto = (_baseClass) _Crypto_like
and ('a) __HTMLButtonElement
and ('a) _HTMLButtonElement_like = (('a) __HTMLButtonElement) _HTMLElement_like
and _HTMLButtonElement = (_baseClass) _HTMLButtonElement_like
and ('a) __HTMLHRElement
and ('a) _HTMLHRElement_like = (('a) __HTMLHRElement) _HTMLElement_like
and _HTMLHRElement = (_baseClass) _HTMLHRElement_like
and __CSSStyleDeclaration
and ('a) _CSSStyleDeclaration_like
and _CSSStyleDeclaration = (_baseClass) _CSSStyleDeclaration_like
and ('a) __HTMLTextAreaElement
and ('a) _HTMLTextAreaElement_like = (('a) __HTMLTextAreaElement) _HTMLElement_like
and _HTMLTextAreaElement = (_baseClass) _HTMLTextAreaElement_like
and __DOMQuad
and ('a) _DOMQuad_like
and _DOMQuad = (_baseClass) _DOMQuad_like
and __Request
and ('a) _Request_like
and _Request = (_baseClass) _Request_like
and ('a) __HTMLSourceElement
and ('a) _HTMLSourceElement_like = (('a) __HTMLSourceElement) _HTMLElement_like
and _HTMLSourceElement = (_baseClass) _HTMLSourceElement_like
and ('a) __HTMLPreElement
and ('a) _HTMLPreElement_like = (('a) __HTMLPreElement) _HTMLElement_like
and _HTMLPreElement = (_baseClass) _HTMLPreElement_like
and ('a) __HTMLModElement
and ('a) _HTMLModElement_like = (('a) __HTMLModElement) _HTMLElement_like
and _HTMLModElement = (_baseClass) _HTMLModElement_like
and ('a) __HTMLMapElement
and ('a) _HTMLMapElement_like = (('a) __HTMLMapElement) _HTMLElement_like
and _HTMLMapElement = (_baseClass) _HTMLMapElement_like
and ('a) __ServiceWorker
and ('a) _ServiceWorker_like = (('a) __ServiceWorker) _EventTarget_like
and _ServiceWorker = (_baseClass) _ServiceWorker_like
and ('a) __HTMLTemplateElement
and ('a) _HTMLTemplateElement_like = (('a) __HTMLTemplateElement) _HTMLElement_like
and _HTMLTemplateElement = (_baseClass) _HTMLTemplateElement_like
and __DOMTokenList
and ('a) _DOMTokenList_like
and _DOMTokenList = (_baseClass) _DOMTokenList_like
and ('a) __HTMLDirectoryElement
and ('a) _HTMLDirectoryElement_like = (('a) __HTMLDirectoryElement) _HTMLElement_like
and _HTMLDirectoryElement = (_baseClass) _HTMLDirectoryElement_like
and ('a) __Document
and ('a) _Document_like = (('a) __Document) _Node_like
and _Document = (_baseClass) _Document_like
and ('a) __HTMLInputElement
and ('a) _HTMLInputElement_like = (('a) __HTMLInputElement) _HTMLElement_like
and _HTMLInputElement = (_baseClass) _HTMLInputElement_like
and ('a) __HTMLParagraphElement
and ('a) _HTMLParagraphElement_like = (('a) __HTMLParagraphElement) _HTMLElement_like
and _HTMLParagraphElement = (_baseClass) _HTMLParagraphElement_like
and ___Promise
and ('a) __Promise_like
and __Promise = (_baseClass) __Promise_like
and ('a) __CharacterData
and ('a) _CharacterData_like = (('a) __CharacterData) _Node_like
and _CharacterData = (_baseClass) _CharacterData_like
and ('a) __HTMLAreaElement
and ('a) _HTMLAreaElement_like = (('a) __HTMLAreaElement) _HTMLElement_like
and _HTMLAreaElement = (_baseClass) _HTMLAreaElement_like
and __VRPose
and ('a) _VRPose_like
and _VRPose = (_baseClass) _VRPose_like
and ('a) __CloseEvent
and ('a) _CloseEvent_like = (('a) __CloseEvent) _Event_like
and _CloseEvent = (_baseClass) _CloseEvent_like
and ('a) __ProcessingInstruction
and ('a) _ProcessingInstruction_like = (('a) __ProcessingInstruction) _CharacterData_like
and _ProcessingInstruction = (_baseClass) _ProcessingInstruction_like
and ('a) __WebSocket
and ('a) _WebSocket_like = (('a) __WebSocket) _EventTarget_like
and _WebSocket = (_baseClass) _WebSocket_like
and __GamepadButtonList
and ('a) _GamepadButtonList_like
and _GamepadButtonList = (_baseClass) _GamepadButtonList_like
and __DOMPointReadOnly
and ('a) _DOMPointReadOnly_like
and _DOMPointReadOnly = (_baseClass) _DOMPointReadOnly_like
and ('a) __HTMLSpanElement
and ('a) _HTMLSpanElement_like = (('a) __HTMLSpanElement) _HTMLElement_like
and _HTMLSpanElement = (_baseClass) _HTMLSpanElement_like
and ('a) __HTMLFormElement
and ('a) _HTMLFormElement_like = (('a) __HTMLFormElement) _HTMLElement_like
and _HTMLFormElement = (_baseClass) _HTMLFormElement_like
and ('a) __MediaQueryListEvent
and ('a) _MediaQueryListEvent_like = (('a) __MediaQueryListEvent) _Event_like
and _MediaQueryListEvent = (_baseClass) _MediaQueryListEvent_like
and ('a) __WebGLBuffer
and ('a) _WebGLBuffer_like = (('a) __WebGLBuffer) _WebGLObject_like
and _WebGLBuffer = (_baseClass) _WebGLBuffer_like
and ('a) __XMLDocument
and ('a) _XMLDocument_like = (('a) __XMLDocument) _Document_like
and _XMLDocument = (_baseClass) _XMLDocument_like
and __Client
and ('a) _Client_like
and _Client = (_baseClass) _Client_like
and __OESTextureFloatLinear
and ('a) _OESTextureFloatLinear_like
and _OESTextureFloatLinear = (_baseClass) _OESTextureFloatLinear_like
and ('a) __CSSViewportRule
and ('a) _CSSViewportRule_like = (('a) __CSSViewportRule) _CSSRule_like
and _CSSViewportRule = (_baseClass) _CSSViewportRule_like
and __WebGLShaderPrecisionFormat
and ('a) _WebGLShaderPrecisionFormat_like
and _WebGLShaderPrecisionFormat = (_baseClass) _WebGLShaderPrecisionFormat_like
and __Response
and ('a) _Response_like
and _Response = (_baseClass) _Response_like
and __MediaError
and ('a) _MediaError_like
and _MediaError = (_baseClass) _MediaError_like
and ('a) __ExtendableEvent
and ('a) _ExtendableEvent_like = (('a) __ExtendableEvent) _Event_like
and _ExtendableEvent = (_baseClass) _ExtendableEvent_like
and ('a) __ProgressEvent
and ('a) _ProgressEvent_like = (('a) __ProgressEvent) _Event_like
and _ProgressEvent = (_baseClass) _ProgressEvent_like
and ('a) __HTMLDataListElement
and ('a) _HTMLDataListElement_like = (('a) __HTMLDataListElement) _HTMLElement_like
and _HTMLDataListElement = (_baseClass) _HTMLDataListElement_like
and ('a) __WebGLRenderbuffer
and ('a) _WebGLRenderbuffer_like = (('a) __WebGLRenderbuffer) _WebGLObject_like
and _WebGLRenderbuffer = (_baseClass) _WebGLRenderbuffer_like
and ('a) __HTMLCanvasElement
and ('a) _HTMLCanvasElement_like = (('a) __HTMLCanvasElement) _HTMLElement_like
and _HTMLCanvasElement = (_baseClass) _HTMLCanvasElement_like
and __VRStageParameters
and ('a) _VRStageParameters_like
and _VRStageParameters = (_baseClass) _VRStageParameters_like
and ('a) __HTMLTrackElement
and ('a) _HTMLTrackElement_like = (('a) __HTMLTrackElement) _HTMLElement_like
and _HTMLTrackElement = (_baseClass) _HTMLTrackElement_like
and ('a) __MouseEvent
and ('a) _MouseEvent_like = (('a) __MouseEvent) _UIEvent_like
and _MouseEvent = (_baseClass) _MouseEvent_like
and ('a) __HTMLTableRowElement
and ('a) _HTMLTableRowElement_like = (('a) __HTMLTableRowElement) _HTMLElement_like
and _HTMLTableRowElement = (_baseClass) _HTMLTableRowElement_like
and ('a) __Bluetooth
and ('a) _Bluetooth_like = (('a) __Bluetooth) _EventTarget_like
and _Bluetooth = (_baseClass) _Bluetooth_like
and ('a) __HTMLDivElement
and ('a) _HTMLDivElement_like = (('a) __HTMLDivElement) _HTMLElement_like
and _HTMLDivElement = (_baseClass) _HTMLDivElement_like
and __AbstractWorker
and ('a) _AbstractWorker_like
and _AbstractWorker = (_baseClass) _AbstractWorker_like
and ('a) __Worker
and ('a) _Worker_like = (('a) __Worker) _EventTarget_like
and _Worker = (_baseClass) _Worker_like
and ('a) __TransitionEvent
and ('a) _TransitionEvent_like = (('a) __TransitionEvent) _Event_like
and _TransitionEvent = (_baseClass) _TransitionEvent_like
and __TestWorklet
and ('a) _TestWorklet_like
and _TestWorklet = (_baseClass) _TestWorklet_like
and ('a) __MediaQueryList
and ('a) _MediaQueryList_like = (('a) __MediaQueryList) _EventTarget_like
and _MediaQueryList = (_baseClass) _MediaQueryList_like
and __CSSRule
and ('a) _CSSRule_like
and _CSSRule = (_baseClass) _CSSRule_like
and ('a) __XMLHttpRequestEventTarget
and ('a) _XMLHttpRequestEventTarget_like = (('a) __XMLHttpRequestEventTarget) _EventTarget_like
and _XMLHttpRequestEventTarget = (_baseClass) _XMLHttpRequestEventTarget_like
and ('a) __CSSKeyframesRule
and ('a) _CSSKeyframesRule_like = (('a) __CSSKeyframesRule) _CSSRule_like
and _CSSKeyframesRule = (_baseClass) _CSSKeyframesRule_like
and ('a) __HTMLAppletElement
and ('a) _HTMLAppletElement_like = (('a) __HTMLAppletElement) _HTMLElement_like
and _HTMLAppletElement = (_baseClass) _HTMLAppletElement_like
and ('a) __HTMLTableDataCellElement
and ('a) _HTMLTableDataCellElement_like = (('a) __HTMLTableDataCellElement) _HTMLTableCellElement_like
and _HTMLTableDataCellElement = (_baseClass) _HTMLTableDataCellElement_like
and __BluetoothUUID
and ('a) _BluetoothUUID_like
and _BluetoothUUID = (_baseClass) _BluetoothUUID_like
and ('a) __HTMLDialogElement
and ('a) _HTMLDialogElement_like = (('a) __HTMLDialogElement) _HTMLElement_like
and _HTMLDialogElement = (_baseClass) _HTMLDialogElement_like
and __CanvasRenderingContext2D
and ('a) _CanvasRenderingContext2D_like
and _CanvasRenderingContext2D = (_baseClass) _CanvasRenderingContext2D_like
and __CanvasState
and ('a) _CanvasState_like
and _CanvasState = (_baseClass) _CanvasState_like
and __CanvasTransform
and ('a) _CanvasTransform_like
and _CanvasTransform = (_baseClass) _CanvasTransform_like
and __CanvasCompositing
and ('a) _CanvasCompositing_like
and _CanvasCompositing = (_baseClass) _CanvasCompositing_like
and __CanvasImageSmoothing
and ('a) _CanvasImageSmoothing_like
and _CanvasImageSmoothing = (_baseClass) _CanvasImageSmoothing_like
and __CanvasFillStrokeStyles
and ('a) _CanvasFillStrokeStyles_like
and _CanvasFillStrokeStyles = (_baseClass) _CanvasFillStrokeStyles_like
and __CanvasShadowStyles
and ('a) _CanvasShadowStyles_like
and _CanvasShadowStyles = (_baseClass) _CanvasShadowStyles_like
and __CanvasRect
and ('a) _CanvasRect_like
and _CanvasRect = (_baseClass) _CanvasRect_like
and __CanvasDrawPath
and ('a) _CanvasDrawPath_like
and _CanvasDrawPath = (_baseClass) _CanvasDrawPath_like
and __CanvasUserInterface
and ('a) _CanvasUserInterface_like
and _CanvasUserInterface = (_baseClass) _CanvasUserInterface_like
and __CanvasText
and ('a) _CanvasText_like
and _CanvasText = (_baseClass) _CanvasText_like
and __CanvasDrawImage
and ('a) _CanvasDrawImage_like
and _CanvasDrawImage = (_baseClass) _CanvasDrawImage_like
and __CanvasHitRegion
and ('a) _CanvasHitRegion_like
and _CanvasHitRegion = (_baseClass) _CanvasHitRegion_like
and __CanvasImageData
and ('a) _CanvasImageData_like
and _CanvasImageData = (_baseClass) _CanvasImageData_like
and __CanvasPathDrawingStyles
and ('a) _CanvasPathDrawingStyles_like
and _CanvasPathDrawingStyles = (_baseClass) _CanvasPathDrawingStyles_like
and __CanvasTextDrawingStyles
and ('a) _CanvasTextDrawingStyles_like
and _CanvasTextDrawingStyles = (_baseClass) _CanvasTextDrawingStyles_like
and __CanvasPath
and ('a) _CanvasPath_like
and _CanvasPath = (_baseClass) _CanvasPath_like
and __MediaList
and ('a) _MediaList_like
and _MediaList = (_baseClass) _MediaList_like
and __OESTextureFloat
and ('a) _OESTextureFloat_like
and _OESTextureFloat = (_baseClass) _OESTextureFloat_like
and ('a) __BluetoothAdvertisingEvent
and ('a) _BluetoothAdvertisingEvent_like = (('a) __BluetoothAdvertisingEvent) _Event_like
and _BluetoothAdvertisingEvent = (_baseClass) _BluetoothAdvertisingEvent_like
and __Permissions
and ('a) _Permissions_like
and _Permissions = (_baseClass) _Permissions_like
and ('a) __HTMLFrameSetElement
and ('a) _HTMLFrameSetElement_like = (('a) __HTMLFrameSetElement) _HTMLElement_like
and _HTMLFrameSetElement = (_baseClass) _HTMLFrameSetElement_like
and ('a) __CSSNamespaceRule
and ('a) _CSSNamespaceRule_like = (('a) __CSSNamespaceRule) _CSSRule_like
and _CSSNamespaceRule = (_baseClass) _CSSNamespaceRule_like
and __CanvasPattern
and ('a) _CanvasPattern_like
and _CanvasPattern = (_baseClass) _CanvasPattern_like
and ('a) __HTMLDetailsElement
and ('a) _HTMLDetailsElement_like = (('a) __HTMLDetailsElement) _HTMLElement_like
and _HTMLDetailsElement = (_baseClass) _HTMLDetailsElement_like
and __MutationRecord
and ('a) _MutationRecord_like
and _MutationRecord = (_baseClass) _MutationRecord_like
and __Storage
and ('a) _Storage_like
and _Storage = (_baseClass) _Storage_like
and ('a) __HashChangeEvent
and ('a) _HashChangeEvent_like = (('a) __HashChangeEvent) _Event_like
and _HashChangeEvent = (_baseClass) _HashChangeEvent_like
and ('a) __Element
and ('a) _Element_like = (('a) __Element) _Node_like
and _Element = (_baseClass) _Element_like
and ('a) __TestWorkletGlobalScope
and ('a) _TestWorkletGlobalScope_like = (('a) __TestWorkletGlobalScope) _WorkletGlobalScope_like
and _TestWorkletGlobalScope = (_baseClass) _TestWorkletGlobalScope_like
and ('a) __HTMLProgressElement
and ('a) _HTMLProgressElement_like = (('a) __HTMLProgressElement) _HTMLElement_like
and _HTMLProgressElement = (_baseClass) _HTMLProgressElement_like
and ('a) __CSSGroupingRule
and ('a) _CSSGroupingRule_like = (('a) __CSSGroupingRule) _CSSRule_like
and _CSSGroupingRule = (_baseClass) _CSSGroupingRule_like
and __MutationObserver
and ('a) _MutationObserver_like
and _MutationObserver = (_baseClass) _MutationObserver_like
and __TestBindingIterable
and ('a) _TestBindingIterable_like
and _TestBindingIterable = (_baseClass) _TestBindingIterable_like
and ('a) __SVGElement
and ('a) _SVGElement_like = (('a) __SVGElement) _Element_like
and _SVGElement = (_baseClass) _SVGElement_like
and ('a) __BluetoothRemoteGATTService
and ('a) _BluetoothRemoteGATTService_like = (('a) __BluetoothRemoteGATTService) _EventTarget_like
and _BluetoothRemoteGATTService = (_baseClass) _BluetoothRemoteGATTService_like
and __ServiceEventHandlers
and ('a) _ServiceEventHandlers_like
and _ServiceEventHandlers = (_baseClass) _ServiceEventHandlers_like
and ('a) __FocusEvent
and ('a) _FocusEvent_like = (('a) __FocusEvent) _UIEvent_like
and _FocusEvent = (_baseClass) _FocusEvent_like
and __TextEncoder
and ('a) _TextEncoder_like
and _TextEncoder = (_baseClass) _TextEncoder_like
and ('a) __WebGLTexture
and ('a) _WebGLTexture_like = (('a) __WebGLTexture) _WebGLObject_like
and _WebGLTexture = (_baseClass) _WebGLTexture_like
and __Event
and ('a) _Event_like
and _Event = (_baseClass) _Event_like
and __ValidityState
and ('a) _ValidityState_like
and _ValidityState = (_baseClass) _ValidityState_like
and ('a) __HTMLFontElement
and ('a) _HTMLFontElement_like = (('a) __HTMLFontElement) _HTMLElement_like
and _HTMLFontElement = (_baseClass) _HTMLFontElement_like
and ('a) __Window
and ('a) _Window_like = (('a) __Window) _GlobalScope_like
and _Window = (_baseClass) _Window_like
and __WindowProxy
and ('a) _WindowProxy_like
and _WindowProxy = (_baseClass) _WindowProxy_like
and __WindowTimers
and ('a) _WindowTimers_like
and _WindowTimers = (_baseClass) _WindowTimers_like
and __WindowBase64
and ('a) _WindowBase64_like
and _WindowBase64 = (_baseClass) _WindowBase64_like
and __WindowSessionStorage
and ('a) _WindowSessionStorage_like
and _WindowSessionStorage = (_baseClass) _WindowSessionStorage_like
and __WindowLocalStorage
and ('a) _WindowLocalStorage_like
and _WindowLocalStorage = (_baseClass) _WindowLocalStorage_like
and __DOMStringMap
and ('a) _DOMStringMap_like
and _DOMStringMap = (_baseClass) _DOMStringMap_like
and ('a) __WorkerGlobalScope
and ('a) _WorkerGlobalScope_like = (('a) __WorkerGlobalScope) _GlobalScope_like
and _WorkerGlobalScope = (_baseClass) _WorkerGlobalScope_like
and __GlobalEventHandlers
and ('a) _GlobalEventHandlers_like
and _GlobalEventHandlers = (_baseClass) _GlobalEventHandlers_like
and __WindowEventHandlers
and ('a) _WindowEventHandlers_like
and _WindowEventHandlers = (_baseClass) _WindowEventHandlers_like
and __DocumentAndElementEventHandlers
and ('a) _DocumentAndElementEventHandlers_like
and _DocumentAndElementEventHandlers = (_baseClass) _DocumentAndElementEventHandlers_like
and __Blob
and ('a) _Blob_like
and _Blob = (_baseClass) _Blob_like
and ('a) __FileReader
and ('a) _FileReader_like = (('a) __FileReader) _EventTarget_like
and _FileReader = (_baseClass) _FileReader_like
and ('a) __CSSStyleSheet
and ('a) _CSSStyleSheet_like = (('a) __CSSStyleSheet) _StyleSheet_like
and _CSSStyleSheet = (_baseClass) _CSSStyleSheet_like
and ('a) __HTMLTableCellElement
and ('a) _HTMLTableCellElement_like = (('a) __HTMLTableCellElement) _HTMLElement_like
and _HTMLTableCellElement = (_baseClass) _HTMLTableCellElement_like
and __VRFrameData
and ('a) _VRFrameData_like
and _VRFrameData = (_baseClass) _VRFrameData_like
and ('a) __HTMLTableElement
and ('a) _HTMLTableElement_like = (('a) __HTMLTableElement) _HTMLElement_like
and _HTMLTableElement = (_baseClass) _HTMLTableElement_like
and ('a) __HTMLHeadingElement
and ('a) _HTMLHeadingElement_like = (('a) __HTMLHeadingElement) _HTMLElement_like
and _HTMLHeadingElement = (_baseClass) _HTMLHeadingElement_like
and ('a) __WorkletGlobalScope
and ('a) _WorkletGlobalScope_like = (('a) __WorkletGlobalScope) _GlobalScope_like
and _WorkletGlobalScope = (_baseClass) _WorkletGlobalScope_like
and __ServoParser
and ('a) _ServoParser_like
and _ServoParser = (_baseClass) _ServoParser_like
and __Attr
and ('a) _Attr_like
and _Attr = (_baseClass) _Attr_like
and ('a) __Text
and ('a) _Text_like = (('a) __Text) _CharacterData_like
and _Text = (_baseClass) _Text_like
and __ActivatableElement
and ('a) _ActivatableElement_like
and _ActivatableElement = (_baseClass) _ActivatableElement_like
and __StyleSheetList
and ('a) _StyleSheetList_like
and _StyleSheetList = (_baseClass) _StyleSheetList_like
and __EventSourceInit
and ('a) _EventSourceInit_like
and _EventSourceInit = (_baseClass) _EventSourceInit_like
and __ElementDefinitionOptions
and ('a) _ElementDefinitionOptions_like
and _ElementDefinitionOptions = (_baseClass) _ElementDefinitionOptions_like
and ('a) __UIEventInit
and ('a) _UIEventInit_like = (('a) __UIEventInit) _EventInit_like
and _UIEventInit = (_baseClass) _UIEventInit_like
and ('a) __GamepadEventInit
and ('a) _GamepadEventInit_like = (('a) __GamepadEventInit) _EventInit_like
and _GamepadEventInit = (_baseClass) _GamepadEventInit_like
and __DOMMatrixInit
and ('a) _DOMMatrixInit_like
and _DOMMatrixInit = (_baseClass) _DOMMatrixInit_like
and __VRLayer
and ('a) _VRLayer_like
and _VRLayer = (_baseClass) _VRLayer_like
and __IterableKeyOrValueResult
and ('a) _IterableKeyOrValueResult_like
and _IterableKeyOrValueResult = (_baseClass) _IterableKeyOrValueResult_like
and __IterableKeyAndValueResult
and ('a) _IterableKeyAndValueResult_like
and _IterableKeyAndValueResult = (_baseClass) _IterableKeyAndValueResult_like
and __RegistrationOptions
and ('a) _RegistrationOptions_like
and _RegistrationOptions = (_baseClass) _RegistrationOptions_like
and ('a) __BluetoothPermissionDescriptor
and ('a) _BluetoothPermissionDescriptor_like = (('a) __BluetoothPermissionDescriptor) _PermissionDescriptor_like
and _BluetoothPermissionDescriptor = (_baseClass) _BluetoothPermissionDescriptor_like
and ('a) __ErrorEventInit
and ('a) _ErrorEventInit_like = (('a) __ErrorEventInit) _EventInit_like
and _ErrorEventInit = (_baseClass) _ErrorEventInit_like
and __PermissionDescriptor
and ('a) _PermissionDescriptor_like
and _PermissionDescriptor = (_baseClass) _PermissionDescriptor_like
and ('a) __PushPermissionDescriptor
and ('a) _PushPermissionDescriptor_like = (('a) __PushPermissionDescriptor) _PermissionDescriptor_like
and _PushPermissionDescriptor = (_baseClass) _PushPermissionDescriptor_like
and ('a) __MidiPermissionDescriptor
and ('a) _MidiPermissionDescriptor_like = (('a) __MidiPermissionDescriptor) _PermissionDescriptor_like
and _MidiPermissionDescriptor = (_baseClass) _MidiPermissionDescriptor_like
and ('a) __DevicePermissionDescriptor
and ('a) _DevicePermissionDescriptor_like = (('a) __DevicePermissionDescriptor) _PermissionDescriptor_like
and _DevicePermissionDescriptor = (_baseClass) _DevicePermissionDescriptor_like
and ('a) __MessageEventInit
and ('a) _MessageEventInit_like = (('a) __MessageEventInit) _EventInit_like
and _MessageEventInit = (_baseClass) _MessageEventInit_like
and ('a) __KeyboardEventInit
and ('a) _KeyboardEventInit_like = (('a) __KeyboardEventInit) _EventModifierInit_like
and _KeyboardEventInit = (_baseClass) _KeyboardEventInit_like
and __WebGLContextAttributes
and ('a) _WebGLContextAttributes_like
and _WebGLContextAttributes = (_baseClass) _WebGLContextAttributes_like
and __DOMRectInit
and ('a) _DOMRectInit_like
and _DOMRectInit = (_baseClass) _DOMRectInit_like
and __BrowserElementSecurityChangeDetail
and ('a) _BrowserElementSecurityChangeDetail_like
and _BrowserElementSecurityChangeDetail = (_baseClass) _BrowserElementSecurityChangeDetail_like
and __BrowserElementErrorEventDetail
and ('a) _BrowserElementErrorEventDetail_like
and _BrowserElementErrorEventDetail = (_baseClass) _BrowserElementErrorEventDetail_like
and __BrowserElementLocationChangeEventDetail
and ('a) _BrowserElementLocationChangeEventDetail_like
and _BrowserElementLocationChangeEventDetail = (_baseClass) _BrowserElementLocationChangeEventDetail_like
and __BrowserElementIconChangeEventDetail
and ('a) _BrowserElementIconChangeEventDetail_like
and _BrowserElementIconChangeEventDetail = (_baseClass) _BrowserElementIconChangeEventDetail_like
and __BrowserShowModalPromptEventDetail
and ('a) _BrowserShowModalPromptEventDetail_like
and _BrowserShowModalPromptEventDetail = (_baseClass) _BrowserShowModalPromptEventDetail_like
and __BrowserElementOpenTabEventDetail
and ('a) _BrowserElementOpenTabEventDetail_like
and _BrowserElementOpenTabEventDetail = (_baseClass) _BrowserElementOpenTabEventDetail_like
and __BrowserElementOpenWindowEventDetail
and ('a) _BrowserElementOpenWindowEventDetail_like
and _BrowserElementOpenWindowEventDetail = (_baseClass) _BrowserElementOpenWindowEventDetail_like
and __BrowserElementVisibilityChangeEventDetail
and ('a) _BrowserElementVisibilityChangeEventDetail_like
and _BrowserElementVisibilityChangeEventDetail = (_baseClass) _BrowserElementVisibilityChangeEventDetail_like
and ('a) __FilePropertyBag
and ('a) _FilePropertyBag_like = (('a) __FilePropertyBag) _BlobPropertyBag_like
and _FilePropertyBag = (_baseClass) _FilePropertyBag_like
and ('a) __ExtendableMessageEventInit
and ('a) _ExtendableMessageEventInit_like = (('a) __ExtendableMessageEventInit) _ExtendableEventInit_like
and _ExtendableMessageEventInit = (_baseClass) _ExtendableMessageEventInit_like
and ('a) __StorageEventInit
and ('a) _StorageEventInit_like = (('a) __StorageEventInit) _EventInit_like
and _StorageEventInit = (_baseClass) _StorageEventInit_like
and ('a) __VRDisplayEventInit
and ('a) _VRDisplayEventInit_like = (('a) __VRDisplayEventInit) _EventInit_like
and _VRDisplayEventInit = (_baseClass) _VRDisplayEventInit_like
and ('a) __PopStateEventInit
and ('a) _PopStateEventInit_like = (('a) __PopStateEventInit) _EventInit_like
and _PopStateEventInit = (_baseClass) _PopStateEventInit_like
and __TestDictionary
and ('a) _TestDictionary_like
and _TestDictionary = (_baseClass) _TestDictionary_like
and __TestDictionaryDefaults
and ('a) _TestDictionaryDefaults_like
and _TestDictionaryDefaults = (_baseClass) _TestDictionaryDefaults_like
and ('a) __WebGLContextEventInit
and ('a) _WebGLContextEventInit_like = (('a) __WebGLContextEventInit) _EventInit_like
and _WebGLContextEventInit = (_baseClass) _WebGLContextEventInit_like
and __TextDecoderOptions
and ('a) _TextDecoderOptions_like
and _TextDecoderOptions = (_baseClass) _TextDecoderOptions_like
and __WorkletOptions
and ('a) _WorkletOptions_like
and _WorkletOptions = (_baseClass) _WorkletOptions_like
and ('a) __CustomEventInit
and ('a) _CustomEventInit_like = (('a) __CustomEventInit) _EventInit_like
and _CustomEventInit = (_baseClass) _CustomEventInit_like
and __DOMPointInit
and ('a) _DOMPointInit_like
and _DOMPointInit = (_baseClass) _DOMPointInit_like
and ('a) __PageTransitionEventInit
and ('a) _PageTransitionEventInit_like = (('a) __PageTransitionEventInit) _EventInit_like
and _PageTransitionEventInit = (_baseClass) _PageTransitionEventInit_like
and __DOMQuadInit
and ('a) _DOMQuadInit_like
and _DOMQuadInit = (_baseClass) _DOMQuadInit_like
and __RequestInit
and ('a) _RequestInit_like
and _RequestInit = (_baseClass) _RequestInit_like
and __ElementCreationOptions
and ('a) _ElementCreationOptions_like
and _ElementCreationOptions = (_baseClass) _ElementCreationOptions_like
and ('a) __CloseEventInit
and ('a) _CloseEventInit_like = (('a) __CloseEventInit) _EventInit_like
and _CloseEventInit = (_baseClass) _CloseEventInit_like
and ('a) __MediaQueryListEventInit
and ('a) _MediaQueryListEventInit_like = (('a) __MediaQueryListEventInit) _EventInit_like
and _MediaQueryListEventInit = (_baseClass) _MediaQueryListEventInit_like
and __ResponseInit
and ('a) _ResponseInit_like
and _ResponseInit = (_baseClass) _ResponseInit_like
and ('a) __ExtendableEventInit
and ('a) _ExtendableEventInit_like = (('a) __ExtendableEventInit) _EventInit_like
and _ExtendableEventInit = (_baseClass) _ExtendableEventInit_like
and ('a) __ProgressEventInit
and ('a) _ProgressEventInit_like = (('a) __ProgressEventInit) _EventInit_like
and _ProgressEventInit = (_baseClass) _ProgressEventInit_like
and ('a) __MouseEventInit
and ('a) _MouseEventInit_like = (('a) __MouseEventInit) _EventModifierInit_like
and _MouseEventInit = (_baseClass) _MouseEventInit_like
and __BluetoothDataFilterInit
and ('a) _BluetoothDataFilterInit_like
and _BluetoothDataFilterInit = (_baseClass) _BluetoothDataFilterInit_like
and __BluetoothLEScanFilterInit
and ('a) _BluetoothLEScanFilterInit_like
and _BluetoothLEScanFilterInit = (_baseClass) _BluetoothLEScanFilterInit_like
and __RequestDeviceOptions
and ('a) _RequestDeviceOptions_like
and _RequestDeviceOptions = (_baseClass) _RequestDeviceOptions_like
and ('a) __TransitionEventInit
and ('a) _TransitionEventInit_like = (('a) __TransitionEventInit) _EventInit_like
and _TransitionEventInit = (_baseClass) _TransitionEventInit_like
and ('a) __EventModifierInit
and ('a) _EventModifierInit_like = (('a) __EventModifierInit) _UIEventInit_like
and _EventModifierInit = (_baseClass) _EventModifierInit_like
and ('a) __BluetoothAdvertisingEventInit
and ('a) _BluetoothAdvertisingEventInit_like = (('a) __BluetoothAdvertisingEventInit) _EventInit_like
and _BluetoothAdvertisingEventInit = (_baseClass) _BluetoothAdvertisingEventInit_like
and ('a) __HashChangeEventInit
and ('a) _HashChangeEventInit_like = (('a) __HashChangeEventInit) _EventInit_like
and _HashChangeEventInit = (_baseClass) _HashChangeEventInit_like
and __MutationObserverInit
and ('a) _MutationObserverInit_like
and _MutationObserverInit = (_baseClass) _MutationObserverInit_like
and ('a) __FocusEventInit
and ('a) _FocusEventInit_like = (('a) __FocusEventInit) _UIEventInit_like
and _FocusEventInit = (_baseClass) _FocusEventInit_like
and __EventInit
and ('a) _EventInit_like
and _EventInit = (_baseClass) _EventInit_like
and __ScrollOptions
and ('a) _ScrollOptions_like
and _ScrollOptions = (_baseClass) _ScrollOptions_like
and ('a) __ScrollToOptions
and ('a) _ScrollToOptions_like = (('a) __ScrollToOptions) _ScrollOptions_like
and _ScrollToOptions = (_baseClass) _ScrollToOptions_like
and __BlobPropertyBag
and ('a) _BlobPropertyBag_like
and _BlobPropertyBag = (_baseClass) _BlobPropertyBag_like
and __NodeFilter
and ('a) _NodeFilter_like
and _NodeFilter = (_baseClass) _NodeFilter_like
and __EventListener
and ('a) _EventListener_like
and _EventListener = (_baseClass) _EventListener_like

(* modules *)
 module Console = struct
    
    
    external assert_ : condition:Js.boolean -> ?message:string Js.undefined ->  unit = "assert" [@@bs.send.pipe: ('own) _console_like] 
    external debug : console:('own) _console_like ->  (('own) _console_like, unit, (string)) variadic_func = "debug" [@@bs.get]
    external error : console:('own) _console_like ->  (('own) _console_like, unit, (string)) variadic_func = "error" [@@bs.get]
    external info : console:('own) _console_like ->  (('own) _console_like, unit, (string)) variadic_func = "info" [@@bs.get]
    external log : console:('own) _console_like ->  (('own) _console_like, unit, (string)) variadic_func = "log" [@@bs.get]
    external time : message:string ->  unit = "time" [@@bs.send.pipe: ('own) _console_like] 
    external timeEnd : message:string ->  unit = "timeEnd" [@@bs.send.pipe: ('own) _console_like] 
    external warn : console:('own) _console_like ->  (('own) _console_like, unit, (string)) variadic_func = "warn" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_console) in
      (return:(_) _console_like)
    
    let assert_ ~condition ?message console =
      let conv_message = Js_undefined.from_opt in
      let message = conv_message message in
      assert_ ~condition ~message console
    
    let debug ~messages console =
      let func = debug console in
      let args = to_arg messages in
      apply func console args
    
    let error ~messages console =
      let func = error console in
      let args = to_arg messages in
      apply func console args
    
    let info ~messages console =
      let func = info console in
      let args = to_arg messages in
      apply func console args
    
    let log ~messages console =
      let func = log console in
      let args = to_arg messages in
      apply func console args
    
    let warn ~messages console =
      let func = warn console in
      let args = to_arg messages in
      apply func console args
    
end
 module Performance = struct
    
    
    external timing : performance:('own) _Performance_like ->  _PerformanceTiming = "timing" [@@bs.get] 
    external now :  float = "now" [@@bs.send.pipe: ('own) _Performance_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Performance) in
      (return:(_) _Performance_like)
    
end
 module CustomElementRegistry = struct
    
    
    external define : name:string -> constructor_:('a1, 'a2, _) variadic_callback0 -> ?options:(_) _ElementDefinitionOptions_like Js.undefined ->  unit = "define" [@@bs.send.pipe: ('own) _CustomElementRegistry_like] 
    external get : name:string ->  'a3 = "get" [@@bs.send.pipe: ('own) _CustomElementRegistry_like] 
    external whenDefined : name:string ->  unit Js.Promise.t = "whenDefined" [@@bs.send.pipe: ('own) _CustomElementRegistry_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CustomElementRegistry) in
      (return:(_) _CustomElementRegistry_like)
    
    let define ~name ~constructor_ ?options customElementRegistry =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      define ~name ~constructor_ ~options customElementRegistry
    
end
 module GamepadList = struct
    
    
    external length : gamepadList:('own) _GamepadList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _Gamepad option = "item" [@@bs.send.pipe: ('own) _GamepadList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_GamepadList) in
      (return:(_) _GamepadList_like)
    
end
 module URLSearchParams = struct
    
    
    external append : name:string -> value:string ->  unit = "append" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    external get : name:string ->  string option = "get" [@@bs.send.pipe: ('own) _URLSearchParams_like] [@@bs.return null_to_opt]
    external getAll : name:string ->  string array = "getAll" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    external set : name:string -> value:string ->  unit = "set" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _URLSearchParams_like] 
    
    let downcast x =
      let return = Obj.magic (x:_URLSearchParams) in
      (return:(_) _URLSearchParams_like)
    
end
 module GamepadButton = struct
    
    
    external pressed : gamepadButton:('own) _GamepadButton_like ->  bool = "pressed" [@@bs.get] 
    external touched : gamepadButton:('own) _GamepadButton_like ->  bool = "touched" [@@bs.get] 
    external value : gamepadButton:('own) _GamepadButton_like ->  float = "value" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_GamepadButton) in
      (return:(_) _GamepadButton_like)
    
end
 module ElementContentEditable = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_ElementContentEditable) in
      (return:(_) _ElementContentEditable_like)
    
end
 module MimeTypeArray = struct
    
    
    external length : mimeTypeArray:('own) _MimeTypeArray_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _MimeType option = "item" [@@bs.send.pipe: ('own) _MimeTypeArray_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  _MimeType option = "namedItem" [@@bs.send.pipe: ('own) _MimeTypeArray_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_MimeTypeArray) in
      (return:(_) _MimeTypeArray_like)
    
end
 module FormData = struct
    
    
    external append : name:string -> value:(_) _Blob_like -> ?filename:string Js.undefined ->  unit = "append" [@@bs.send.pipe: ('own) _FormData_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) _FormData_like] 
    external get : name:string ->  'a4 option = "get" [@@bs.send.pipe: ('own) _FormData_like] [@@bs.return null_to_opt]
    external getAll : name:string ->  'a5 array = "getAll" [@@bs.send.pipe: ('own) _FormData_like] 
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) _FormData_like] 
    external set : name:string -> value:(_) _Blob_like -> ?filename:string Js.undefined ->  unit = "set" [@@bs.send.pipe: ('own) _FormData_like] 
    
    let downcast x =
      let return = Obj.magic (x:_FormData) in
      (return:(_) _FormData_like)
    
    let append ~name ~value ?filename formData =
      let conv_filename = Js_undefined.from_opt in
      let filename = conv_filename filename in
      append ~name ~value ~filename formData
    
    let set ~name ~value ?filename formData =
      let conv_filename = Js_undefined.from_opt in
      let filename = conv_filename filename in
      set ~name ~value ~filename formData
    
end
 module TreeWalker = struct
    
    
    external root : treeWalker:('own) _TreeWalker_like ->  _Node = "root" [@@bs.get] 
    external whatToShow : treeWalker:('own) _TreeWalker_like ->  int = "whatToShow" [@@bs.get] 
    external filter : treeWalker:('own) _TreeWalker_like ->  _NodeFilter option = "filter" [@@bs.get] [@@bs.return null_to_opt]
    external currentNode : treeWalker:('own) _TreeWalker_like ->  _Node = "currentNode" [@@bs.get] 
    external setCurrentNode : treeWalker:('own) _TreeWalker_like -> currentNode:_Node ->  unit = "currentNode" [@@bs.set]
    external firstChild :  _Node option = "firstChild" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external lastChild :  _Node option = "lastChild" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external nextNode :  _Node option = "nextNode" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external nextSibling :  _Node option = "nextSibling" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external parentNode :  _Node option = "parentNode" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external previousNode :  _Node option = "previousNode" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    external previousSibling :  _Node option = "previousSibling" [@@bs.send.pipe: ('own) _TreeWalker_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_TreeWalker) in
      (return:(_) _TreeWalker_like)
    
    let cast_to_Dom_treeWalker x =
      let return = Obj.magic (x:_TreeWalker) in
      (return:Dom.treeWalker)
    
    let cast_from_Dom_treeWalker x =
      let return = Obj.magic (x:Dom.treeWalker) in
      (return:_TreeWalker)
    
end
 module DOMMatrixReadOnly = struct
    
    
    external a : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "a" [@@bs.get] 
    external b : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "b" [@@bs.get] 
    external c : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "c" [@@bs.get] 
    external d : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "d" [@@bs.get] 
    external e : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "e" [@@bs.get] 
    external f : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "f" [@@bs.get] 
    external m11 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m11" [@@bs.get] 
    external m12 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m12" [@@bs.get] 
    external m13 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m13" [@@bs.get] 
    external m14 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m14" [@@bs.get] 
    external m21 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m21" [@@bs.get] 
    external m22 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m22" [@@bs.get] 
    external m23 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m23" [@@bs.get] 
    external m24 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m24" [@@bs.get] 
    external m31 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m31" [@@bs.get] 
    external m32 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m32" [@@bs.get] 
    external m33 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m33" [@@bs.get] 
    external m34 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m34" [@@bs.get] 
    external m41 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m41" [@@bs.get] 
    external m42 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m42" [@@bs.get] 
    external m43 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m43" [@@bs.get] 
    external m44 : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  float = "m44" [@@bs.get] 
    external is2D : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  bool = "is2D" [@@bs.get] 
    external isIdentity : dOMMatrixReadOnly:('own) _DOMMatrixReadOnly_like ->  bool = "isIdentity" [@@bs.get] 
    external flipX :  _DOMMatrix = "flipX" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external flipY :  _DOMMatrix = "flipY" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external fromMatrix : ?other:(_) _DOMMatrixInit_like Js.undefined ->  _DOMMatrixReadOnly = "fromMatrix" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external inverse :  _DOMMatrix = "inverse" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external multiply : ?other:(_) _DOMMatrixInit_like Js.undefined ->  _DOMMatrix = "multiply" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external rotate : ?rotX:float Js.undefined -> ?rotY:float Js.undefined -> ?rotZ:float Js.undefined ->  _DOMMatrix = "rotate" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external rotateAxisAngle : ?x:float Js.undefined -> ?y:float Js.undefined -> ?z:float Js.undefined -> ?angle:float Js.undefined ->  _DOMMatrix = "rotateAxisAngle" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external rotateFromVector : ?x:float Js.undefined -> ?y:float Js.undefined ->  _DOMMatrix = "rotateFromVector" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external scale : ?scaleX:float Js.undefined -> ?scaleY:float Js.undefined -> ?scaleZ:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  _DOMMatrix = "scale" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external scale3d : ?scale:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  _DOMMatrix = "scale3d" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external skewX : ?sx:float Js.undefined ->  _DOMMatrix = "skewX" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external skewY : ?sy:float Js.undefined ->  _DOMMatrix = "skewY" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external transformPoint : ?point:(_) _DOMPointInit_like Js.undefined ->  _DOMPoint = "transformPoint" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    external translate : ?tx:float Js.undefined -> ?ty:float Js.undefined -> ?tz:float Js.undefined ->  _DOMMatrix = "translate" [@@bs.send.pipe: ('own) _DOMMatrixReadOnly_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMMatrixReadOnly) in
      (return:(_) _DOMMatrixReadOnly_like)
    
    let fromMatrix ?other dOMMatrixReadOnly =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromMatrix ~other dOMMatrixReadOnly
    
    let multiply ?other dOMMatrixReadOnly =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      multiply ~other dOMMatrixReadOnly
    
    let rotate ?rotX ?rotY ?rotZ dOMMatrixReadOnly =
      let conv_rotX = Js_undefined.from_opt in
      let rotX = conv_rotX rotX in
      let conv_rotY = Js_undefined.from_opt in
      let rotY = conv_rotY rotY in
      let conv_rotZ = Js_undefined.from_opt in
      let rotZ = conv_rotZ rotZ in
      rotate ~rotX ~rotY ~rotZ dOMMatrixReadOnly
    
    let rotateAxisAngle ?x ?y ?z ?angle dOMMatrixReadOnly =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      let conv_z = Js_undefined.from_opt in
      let z = conv_z z in
      let conv_angle = Js_undefined.from_opt in
      let angle = conv_angle angle in
      rotateAxisAngle ~x ~y ~z ~angle dOMMatrixReadOnly
    
    let rotateFromVector ?x ?y dOMMatrixReadOnly =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      rotateFromVector ~x ~y dOMMatrixReadOnly
    
    let scale ?scaleX ?scaleY ?scaleZ ?originX ?originY ?originZ dOMMatrixReadOnly =
      let conv_scaleX = Js_undefined.from_opt in
      let scaleX = conv_scaleX scaleX in
      let conv_scaleY = Js_undefined.from_opt in
      let scaleY = conv_scaleY scaleY in
      let conv_scaleZ = Js_undefined.from_opt in
      let scaleZ = conv_scaleZ scaleZ in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale ~scaleX ~scaleY ~scaleZ ~originX ~originY ~originZ dOMMatrixReadOnly
    
    let scale3d ?scale ?originX ?originY ?originZ dOMMatrixReadOnly =
      let conv_scale = Js_undefined.from_opt in
      let scale = conv_scale scale in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale3d ~scale ~originX ~originY ~originZ dOMMatrixReadOnly
    
    let skewX ?sx dOMMatrixReadOnly =
      let conv_sx = Js_undefined.from_opt in
      let sx = conv_sx sx in
      skewX ~sx dOMMatrixReadOnly
    
    let skewY ?sy dOMMatrixReadOnly =
      let conv_sy = Js_undefined.from_opt in
      let sy = conv_sy sy in
      skewY ~sy dOMMatrixReadOnly
    
    let transformPoint ?point dOMMatrixReadOnly =
      let conv_point = Js_undefined.from_opt in
      let point = conv_point point in
      transformPoint ~point dOMMatrixReadOnly
    
    let translate ?tx ?ty ?tz dOMMatrixReadOnly =
      let conv_tx = Js_undefined.from_opt in
      let tx = conv_tx tx in
      let conv_ty = Js_undefined.from_opt in
      let ty = conv_ty ty in
      let conv_tz = Js_undefined.from_opt in
      let tz = conv_tz tz in
      translate ~tx ~ty ~tz dOMMatrixReadOnly
    
end
 module ParentNode = struct
    
    
    external children : parentNode:('own) _ParentNode_like ->  _HTMLCollection = "children" [@@bs.get] 
    external firstElementChild : parentNode:('own) _ParentNode_like ->  _Element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : parentNode:('own) _ParentNode_like ->  _Element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : parentNode:('own) _ParentNode_like ->  int = "childElementCount" [@@bs.get] 
    external append : parentNode:('own) _ParentNode_like ->  (('own) _ParentNode_like, unit, ('a6)) variadic_func = "append" [@@bs.get]
    external prepend : parentNode:('own) _ParentNode_like ->  (('own) _ParentNode_like, unit, ('a7)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  _Element option = "querySelector" [@@bs.send.pipe: ('own) _ParentNode_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  _NodeList = "querySelectorAll" [@@bs.send.pipe: ('own) _ParentNode_like] 
    
    let downcast x =
      let return = Obj.magic (x:_ParentNode) in
      (return:(_) _ParentNode_like)
    
    let append ~nodes parentNode =
      let func = append parentNode in
      let args = to_arg nodes in
      apply func parentNode args
    
    let append ~nodes parentNode =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes parentNode in
      return
    
    let prepend ~nodes parentNode =
      let func = prepend parentNode in
      let args = to_arg nodes in
      apply func parentNode args
    
    let prepend ~nodes parentNode =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes parentNode in
      return
    
end
 module Range = struct
    
    
    external startContainer : range:('own) _Range_like ->  _Node = "startContainer" [@@bs.get] 
    external startOffset : range:('own) _Range_like ->  int = "startOffset" [@@bs.get] 
    external endContainer : range:('own) _Range_like ->  _Node = "endContainer" [@@bs.get] 
    external endOffset : range:('own) _Range_like ->  int = "endOffset" [@@bs.get] 
    external collapsed : range:('own) _Range_like ->  bool = "collapsed" [@@bs.get] 
    external commonAncestorContainer : range:('own) _Range_like ->  _Node = "commonAncestorContainer" [@@bs.get] 
    external cloneContents :  _DocumentFragment = "cloneContents" [@@bs.send.pipe: ('own) _Range_like] 
    external cloneRange :  _Range = "cloneRange" [@@bs.send.pipe: ('own) _Range_like] 
    external collapse : ?toStart:Js.boolean Js.undefined ->  unit = "collapse" [@@bs.send.pipe: ('own) _Range_like] 
    external compareBoundaryPoints : how:int -> sourceRange:(_) _Range_like ->  int = "compareBoundaryPoints" [@@bs.send.pipe: ('own) _Range_like] 
    external comparePoint : node:(_) _Node_like -> offset:int ->  int = "comparePoint" [@@bs.send.pipe: ('own) _Range_like] 
    external createContextualFragment : fragment:string ->  _DocumentFragment = "createContextualFragment" [@@bs.send.pipe: ('own) _Range_like] 
    external deleteContents :  unit = "deleteContents" [@@bs.send.pipe: ('own) _Range_like] 
    external detach :  unit = "detach" [@@bs.send.pipe: ('own) _Range_like] 
    external extractContents :  _DocumentFragment = "extractContents" [@@bs.send.pipe: ('own) _Range_like] 
    external insertNode : node:(_) _Node_like ->  unit = "insertNode" [@@bs.send.pipe: ('own) _Range_like] 
    external intersectsNode : node:(_) _Node_like ->  bool = "intersectsNode" [@@bs.send.pipe: ('own) _Range_like] 
    external isPointInRange : node:(_) _Node_like -> offset:int ->  bool = "isPointInRange" [@@bs.send.pipe: ('own) _Range_like] 
    external selectNode : refNode:(_) _Node_like ->  unit = "selectNode" [@@bs.send.pipe: ('own) _Range_like] 
    external selectNodeContents : refNode:(_) _Node_like ->  unit = "selectNodeContents" [@@bs.send.pipe: ('own) _Range_like] 
    external setEnd : refNode:(_) _Node_like -> offset:int ->  unit = "setEnd" [@@bs.send.pipe: ('own) _Range_like] 
    external setEndAfter : refNode:(_) _Node_like ->  unit = "setEndAfter" [@@bs.send.pipe: ('own) _Range_like] 
    external setEndBefore : refNode:(_) _Node_like ->  unit = "setEndBefore" [@@bs.send.pipe: ('own) _Range_like] 
    external setStart : refNode:(_) _Node_like -> offset:int ->  unit = "setStart" [@@bs.send.pipe: ('own) _Range_like] 
    external setStartAfter : refNode:(_) _Node_like ->  unit = "setStartAfter" [@@bs.send.pipe: ('own) _Range_like] 
    external setStartBefore : refNode:(_) _Node_like ->  unit = "setStartBefore" [@@bs.send.pipe: ('own) _Range_like] 
    external surroundContents : newParent:(_) _Node_like ->  unit = "surroundContents" [@@bs.send.pipe: ('own) _Range_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _Range_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Range) in
      (return:(_) _Range_like)
    
    let cast_to_Dom_range x =
      let return = Obj.magic (x:_Range) in
      (return:Dom.range)
    
    let cast_from_Dom_range x =
      let return = Obj.magic (x:Dom.range) in
      (return:_Range)
    
    let _START_TO_START  =
      
      0
    
    let _START_TO_END  =
      
      1
    
    let _END_TO_END  =
      
      2
    
    let _END_TO_START  =
      
      3
    
    let collapse ?toStart range =
      let conv_toStart = Js_undefined.from_opt in
      let toStart = conv_toStart toStart in
      collapse ~toStart range
    
end
 module WindowOrWorkerGlobalScope = struct
    
    
    external fetch : input:'a8 -> ?init:(_) _RequestInit_like Js.undefined ->  _Response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) _WindowOrWorkerGlobalScope_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WindowOrWorkerGlobalScope) in
      (return:(_) _WindowOrWorkerGlobalScope_like)
    
    let fetch ~input ~init windowOrWorkerGlobalScope =
      let conv_input = function
        | `Request (x: (_) _Request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init windowOrWorkerGlobalScope in
      return
    
    let fetch ~input ?init windowOrWorkerGlobalScope =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init windowOrWorkerGlobalScope
    
end
 module VREyeParameters = struct
    
    
    external offset : vREyeParameters:('own) _VREyeParameters_like ->  Js_typed_array.Float32Array.t = "offset" [@@bs.get] 
    external fieldOfView : vREyeParameters:('own) _VREyeParameters_like ->  _VRFieldOfView = "fieldOfView" [@@bs.get] 
    external renderWidth : vREyeParameters:('own) _VREyeParameters_like ->  int = "renderWidth" [@@bs.get] 
    external renderHeight : vREyeParameters:('own) _VREyeParameters_like ->  int = "renderHeight" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_VREyeParameters) in
      (return:(_) _VREyeParameters_like)
    
end
 module WebGLUniformLocation = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLUniformLocation) in
      (return:(_) _WebGLUniformLocation_like)
    
end
 module OESTextureHalfFloat = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_OESTextureHalfFloat) in
      (return:(_) _OESTextureHalfFloat_like)
    
    let _HALF_FLOAT_OES  =
      
      36193
    
end
 module OESVertexArrayObject = struct
    
    
    external bindVertexArrayOES : arrayObject:(_) _WebGLVertexArrayObjectOES_like Js.null ->  unit = "bindVertexArrayOES" [@@bs.send.pipe: ('own) _OESVertexArrayObject_like] 
    external createVertexArrayOES :  _WebGLVertexArrayObjectOES option = "createVertexArrayOES" [@@bs.send.pipe: ('own) _OESVertexArrayObject_like] [@@bs.return null_to_opt]
    external deleteVertexArrayOES : arrayObject:(_) _WebGLVertexArrayObjectOES_like Js.null ->  unit = "deleteVertexArrayOES" [@@bs.send.pipe: ('own) _OESVertexArrayObject_like] 
    external isVertexArrayOES : arrayObject:(_) _WebGLVertexArrayObjectOES_like Js.null ->  bool = "isVertexArrayOES" [@@bs.send.pipe: ('own) _OESVertexArrayObject_like] 
    
    let downcast x =
      let return = Obj.magic (x:_OESVertexArrayObject) in
      (return:(_) _OESVertexArrayObject_like)
    
    let _VERTEX_ARRAY_BINDING_OES  =
      
      34229
    
end
 module TestRunner = struct
    
    
    external setBluetoothMockDataSet : dataSetName:string ->  unit = "setBluetoothMockDataSet" [@@bs.send.pipe: ('own) _TestRunner_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestRunner) in
      (return:(_) _TestRunner_like)
    
end
 module EventTarget = struct
    
    
    external addEventListener : type_:string -> listener:(_) _EventListener_like Js.null -> ?capture:Js.boolean Js.undefined ->  unit = "addEventListener" [@@bs.send.pipe: ('own) _EventTarget_like] 
    external dispatchEvent : event:(_) _Event_like ->  bool = "dispatchEvent" [@@bs.send.pipe: ('own) _EventTarget_like] 
    external removeEventListener : type_:string -> listener:(_) _EventListener_like Js.null -> ?capture:Js.boolean Js.undefined ->  unit = "removeEventListener" [@@bs.send.pipe: ('own) _EventTarget_like] 
    
    let downcast x =
      let return = Obj.magic (x:_EventTarget) in
      (return:(_) _EventTarget_like)
    
    let cast_to_Dom_eventTarget x =
      let return = Obj.magic (x:_EventTarget) in
      (return:Dom.eventTarget)
    
    let cast_from_Dom_eventTarget x =
      let return = Obj.magic (x:Dom.eventTarget) in
      (return:_EventTarget)
    
    let addEventListener ~type_ ~listener ?capture eventTarget =
      let conv_capture = Js_undefined.from_opt in
      let capture = conv_capture capture in
      addEventListener ~type_ ~listener ~capture eventTarget
    
    let removeEventListener ~type_ ~listener ?capture eventTarget =
      let conv_capture = Js_undefined.from_opt in
      let capture = conv_capture capture in
      removeEventListener ~type_ ~listener ~capture eventTarget
    
end
 module NodeIterator = struct
    
    
    external root : nodeIterator:('own) _NodeIterator_like ->  _Node = "root" [@@bs.get] 
    external referenceNode : nodeIterator:('own) _NodeIterator_like ->  _Node = "referenceNode" [@@bs.get] 
    external pointerBeforeReferenceNode : nodeIterator:('own) _NodeIterator_like ->  bool = "pointerBeforeReferenceNode" [@@bs.get] 
    external whatToShow : nodeIterator:('own) _NodeIterator_like ->  int = "whatToShow" [@@bs.get] 
    external filter : nodeIterator:('own) _NodeIterator_like ->  _NodeFilter option = "filter" [@@bs.get] [@@bs.return null_to_opt]
    external detach :  unit = "detach" [@@bs.send.pipe: ('own) _NodeIterator_like] 
    external nextNode :  _Node option = "nextNode" [@@bs.send.pipe: ('own) _NodeIterator_like] [@@bs.return null_to_opt]
    external previousNode :  _Node option = "previousNode" [@@bs.send.pipe: ('own) _NodeIterator_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_NodeIterator) in
      (return:(_) _NodeIterator_like)
    
    let cast_to_Dom_nodeIterator x =
      let return = Obj.magic (x:_NodeIterator) in
      (return:Dom.nodeIterator)
    
    let cast_from_Dom_nodeIterator x =
      let return = Obj.magic (x:Dom.nodeIterator) in
      (return:_NodeIterator)
    
end
 module BluetoothRemoteGATTServer = struct
    
    
    external device : bluetoothRemoteGATTServer:('own) _BluetoothRemoteGATTServer_like ->  _BluetoothDevice = "device" [@@bs.get] 
    external connected : bluetoothRemoteGATTServer:('own) _BluetoothRemoteGATTServer_like ->  bool = "connected" [@@bs.get] 
    external connect :  _BluetoothRemoteGATTServer Js.Promise.t = "connect" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTServer_like] 
    external disconnect :  unit = "disconnect" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTServer_like] 
    external getPrimaryService : service:'a9 ->  _BluetoothRemoteGATTService Js.Promise.t = "getPrimaryService" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTServer_like] 
    external getPrimaryServices : ?service:'a10 Js.undefined ->  _BluetoothRemoteGATTService array Js.Promise.t = "getPrimaryServices" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTServer_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothRemoteGATTServer) in
      (return:(_) _BluetoothRemoteGATTServer_like)
    
    let getPrimaryService ~service bluetoothRemoteGATTServer =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let service = conv_service service in
      let return = getPrimaryService ~service bluetoothRemoteGATTServer in
      return
    
    let getPrimaryServices ~service bluetoothRemoteGATTServer =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_service = access_undef conv_service in
      let service = conv_service service in
      let return = getPrimaryServices ~service bluetoothRemoteGATTServer in
      return
    
    let getPrimaryServices ?service bluetoothRemoteGATTServer =
      let conv_service = Js_undefined.from_opt in
      let service = conv_service service in
      getPrimaryServices ~service bluetoothRemoteGATTServer
    
end
 module WebGLRenderingContextBase = struct
    
    
    external canvas : webGLRenderingContextBase:('own) _WebGLRenderingContextBase_like ->  _HTMLCanvasElement = "canvas" [@@bs.get] 
    external drawingBufferWidth : webGLRenderingContextBase:('own) _WebGLRenderingContextBase_like ->  int = "drawingBufferWidth" [@@bs.get] 
    external drawingBufferHeight : webGLRenderingContextBase:('own) _WebGLRenderingContextBase_like ->  int = "drawingBufferHeight" [@@bs.get] 
    external activeTexture : texture:int ->  unit = "activeTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external attachShader : program:(_) _WebGLProgram_like Js.null -> shader:(_) _WebGLShader_like Js.null ->  unit = "attachShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bindAttribLocation : program:(_) _WebGLProgram_like Js.null -> index:int -> name:string ->  unit = "bindAttribLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bindBuffer : target:int -> buffer:(_) _WebGLBuffer_like Js.null ->  unit = "bindBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bindFramebuffer : target:int -> framebuffer:(_) _WebGLFramebuffer_like Js.null ->  unit = "bindFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bindRenderbuffer : target:int -> renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "bindRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bindTexture : target:int -> texture:(_) _WebGLTexture_like Js.null ->  unit = "bindTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external blendColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "blendColor" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external blendEquation : mode:int ->  unit = "blendEquation" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external blendEquationSeparate : modeRGB:int -> modeAlpha:int ->  unit = "blendEquationSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external blendFunc : sfactor:int -> dfactor:int ->  unit = "blendFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external blendFuncSeparate : srcRGB:int -> dstRGB:int -> srcAlpha:int -> dstAlpha:int ->  unit = "blendFuncSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bufferData : target:int -> data:'a11 -> usage:int ->  unit = "bufferData" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external bufferSubData : target:int -> offset:int -> data:'a12 Js.null ->  unit = "bufferSubData" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external checkFramebufferStatus : target:int ->  int = "checkFramebufferStatus" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external clear : mask:int ->  unit = "clear" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external clearColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "clearColor" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external clearDepth : depth:float ->  unit = "clearDepth" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external clearStencil : s:int ->  unit = "clearStencil" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external colorMask : red:Js.boolean -> green:Js.boolean -> blue:Js.boolean -> alpha:Js.boolean ->  unit = "colorMask" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external compileShader : shader:(_) _WebGLShader_like Js.null ->  unit = "compileShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external compressedTexImage2D : target:int -> level:int -> internalformat:int -> width:int -> height:int -> border:int -> data:'a13 ->  unit = "compressedTexImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external compressedTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> width:int -> height:int -> format:int -> data:'a14 ->  unit = "compressedTexSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external copyTexImage2D : target:int -> level:int -> internalformat:int -> x:int -> y:int -> width:int -> height:int -> border:int ->  unit = "copyTexImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external copyTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> x:int -> y:int -> width:int -> height:int ->  unit = "copyTexSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external createBuffer :  _WebGLBuffer option = "createBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createFramebuffer :  _WebGLFramebuffer option = "createFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createProgram :  _WebGLProgram option = "createProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createRenderbuffer :  _WebGLRenderbuffer option = "createRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createShader : type_:int ->  _WebGLShader option = "createShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external createTexture :  _WebGLTexture option = "createTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external cullFace : mode:int ->  unit = "cullFace" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteBuffer : buffer:(_) _WebGLBuffer_like Js.null ->  unit = "deleteBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteFramebuffer : framebuffer:(_) _WebGLFramebuffer_like Js.null ->  unit = "deleteFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "deleteProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteRenderbuffer : renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "deleteRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteShader : shader:(_) _WebGLShader_like Js.null ->  unit = "deleteShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external deleteTexture : texture:(_) _WebGLTexture_like Js.null ->  unit = "deleteTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external depthFunc : func:int ->  unit = "depthFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external depthMask : flag:Js.boolean ->  unit = "depthMask" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external depthRange : zNear:float -> zFar:float ->  unit = "depthRange" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external detachShader : program:(_) _WebGLProgram_like Js.null -> shader:(_) _WebGLShader_like Js.null ->  unit = "detachShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external disable : cap:int ->  unit = "disable" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external disableVertexAttribArray : index:int ->  unit = "disableVertexAttribArray" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external drawArrays : mode:int -> first:int -> count:int ->  unit = "drawArrays" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external drawElements : mode:int -> count:int -> type_:int -> offset:int ->  unit = "drawElements" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external enable : cap:int ->  unit = "enable" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external enableVertexAttribArray : index:int ->  unit = "enableVertexAttribArray" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external finish :  unit = "finish" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external flush :  unit = "flush" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external framebufferRenderbuffer : target:int -> attachment:int -> renderbuffertarget:int -> renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "framebufferRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external framebufferTexture2D : target:int -> attachment:int -> textarget:int -> texture:(_) _WebGLTexture_like Js.null -> level:int ->  unit = "framebufferTexture2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external frontFace : mode:int ->  unit = "frontFace" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external generateMipmap : target:int ->  unit = "generateMipmap" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getActiveAttrib : program:(_) _WebGLProgram_like Js.null -> index:int ->  _WebGLActiveInfo option = "getActiveAttrib" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getActiveUniform : program:(_) _WebGLProgram_like Js.null -> index:int ->  _WebGLActiveInfo option = "getActiveUniform" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getAttribLocation : program:(_) _WebGLProgram_like Js.null -> name:string ->  int = "getAttribLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getBufferParameter : target:int -> pname:int ->  'a15 = "getBufferParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getContextAttributes :  _WebGLContextAttributes option = "getContextAttributes" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getError :  int = "getError" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getExtension : name:string ->  'a16 option = "getExtension" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getParameter : pname:int ->  'a17 = "getParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getProgramInfoLog : program:(_) _WebGLProgram_like Js.null ->  string option = "getProgramInfoLog" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getProgramParameter : program:(_) _WebGLProgram_like Js.null -> pname:int ->  'a18 = "getProgramParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getShaderInfoLog : shader:(_) _WebGLShader_like Js.null ->  string option = "getShaderInfoLog" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getShaderParameter : shader:(_) _WebGLShader_like Js.null -> pname:int ->  'a19 = "getShaderParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getShaderPrecisionFormat : shadertype:int -> precisiontype:int ->  _WebGLShaderPrecisionFormat option = "getShaderPrecisionFormat" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getShaderSource : shader:(_) _WebGLShader_like Js.null ->  string option = "getShaderSource" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getSupportedExtensions :  string array option = "getSupportedExtensions" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getUniformLocation : program:(_) _WebGLProgram_like Js.null -> name:string ->  _WebGLUniformLocation option = "getUniformLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] [@@bs.return null_to_opt]
    external getVertexAttrib : index:int -> pname:int ->  'a20 = "getVertexAttrib" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external getVertexAttribOffset : index:int -> pname:int ->  int = "getVertexAttribOffset" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external hint : target:int -> mode:int ->  unit = "hint" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isBuffer : buffer:(_) _WebGLBuffer_like Js.null ->  bool = "isBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isEnabled : cap:int ->  bool = "isEnabled" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isFramebuffer : framebuffer:(_) _WebGLFramebuffer_like Js.null ->  bool = "isFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isProgram : program:(_) _WebGLProgram_like Js.null ->  bool = "isProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isRenderbuffer : renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  bool = "isRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isShader : shader:(_) _WebGLShader_like Js.null ->  bool = "isShader" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external isTexture : texture:(_) _WebGLTexture_like Js.null ->  bool = "isTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external lineWidth : width:float ->  unit = "lineWidth" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external linkProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "linkProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external pixelStorei : pname:int -> param:int ->  unit = "pixelStorei" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external polygonOffset : factor:float -> units:float ->  unit = "polygonOffset" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external readPixels : x:int -> y:int -> width:int -> height:int -> format:int -> type_:int -> pixels:'a21 Js.null ->  unit = "readPixels" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external renderbufferStorage : target:int -> internalformat:int -> width:int -> height:int ->  unit = "renderbufferStorage" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external sampleCoverage : value:float -> invert:Js.boolean ->  unit = "sampleCoverage" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external scissor : x:int -> y:int -> width:int -> height:int ->  unit = "scissor" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external shaderSource : shader:(_) _WebGLShader_like Js.null -> source:string ->  unit = "shaderSource" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilFunc : func:int -> ref:int -> mask:int ->  unit = "stencilFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilFuncSeparate : face:int -> func:int -> ref:int -> mask:int ->  unit = "stencilFuncSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilMask : mask:int ->  unit = "stencilMask" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilMaskSeparate : face:int -> mask:int ->  unit = "stencilMaskSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilOp : fail:int -> zfail:int -> zpass:int ->  unit = "stencilOp" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external stencilOpSeparate : face:int -> fail:int -> zfail:int -> zpass:int ->  unit = "stencilOpSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external texImage2D : target:int -> level:int -> internalformat:int -> format:int -> type_:int -> source:'a22 Js.null ->  unit = "texImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external texParameterf : target:int -> pname:int -> param:float ->  unit = "texParameterf" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external texParameteri : target:int -> pname:int -> param:int ->  unit = "texParameteri" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external texSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> format:int -> type_:int -> source:'a23 Js.null ->  unit = "texSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform1f : location:(_) _WebGLUniformLocation_like Js.null -> x:float ->  unit = "uniform1f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform1fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a24 ->  unit = "uniform1fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform1i : location:(_) _WebGLUniformLocation_like Js.null -> x:int ->  unit = "uniform1i" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform1iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a25 ->  unit = "uniform1iv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform2f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float ->  unit = "uniform2f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform2fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a26 ->  unit = "uniform2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform2i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int ->  unit = "uniform2i" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform2iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a27 ->  unit = "uniform2iv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform3f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float -> z:float ->  unit = "uniform3f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform3fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a28 ->  unit = "uniform3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform3i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int -> z:int ->  unit = "uniform3i" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform3iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a29 ->  unit = "uniform3iv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform4f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float -> z:float -> w:float ->  unit = "uniform4f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform4fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a30 ->  unit = "uniform4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform4i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int -> z:int -> w:int ->  unit = "uniform4i" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniform4iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a31 ->  unit = "uniform4iv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniformMatrix2fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a32 ->  unit = "uniformMatrix2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniformMatrix3fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a33 ->  unit = "uniformMatrix3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external uniformMatrix4fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a34 ->  unit = "uniformMatrix4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external useProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "useProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external validateProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "validateProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib1f : indx:int -> x:float ->  unit = "vertexAttrib1f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib1fv : indx:int -> values:'a35 ->  unit = "vertexAttrib1fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib2f : indx:int -> x:float -> y:float ->  unit = "vertexAttrib2f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib2fv : indx:int -> values:'a36 ->  unit = "vertexAttrib2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib3f : indx:int -> x:float -> y:float -> z:float ->  unit = "vertexAttrib3f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib3fv : indx:int -> values:'a37 ->  unit = "vertexAttrib3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib4f : indx:int -> x:float -> y:float -> z:float -> w:float ->  unit = "vertexAttrib4f" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttrib4fv : indx:int -> values:'a38 ->  unit = "vertexAttrib4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external vertexAttribPointer : indx:int -> size:int -> type_:int -> normalized:Js.boolean -> stride:int -> offset:int ->  unit = "vertexAttribPointer" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    external viewport : x:int -> y:int -> width:int -> height:int ->  unit = "viewport" [@@bs.send.pipe: ('own) _WebGLRenderingContextBase_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WebGLRenderingContextBase) in
      (return:(_) _WebGLRenderingContextBase_like)
    
    let _DEPTH_BUFFER_BIT  =
      
      256
    
    let _STENCIL_BUFFER_BIT  =
      
      1024
    
    let _COLOR_BUFFER_BIT  =
      
      16384
    
    let _POINTS  =
      
      0
    
    let _LINES  =
      
      1
    
    let _LINE_LOOP  =
      
      2
    
    let _LINE_STRIP  =
      
      3
    
    let _TRIANGLES  =
      
      4
    
    let _TRIANGLE_STRIP  =
      
      5
    
    let _TRIANGLE_FAN  =
      
      6
    
    let _ZERO  =
      
      0
    
    let _ONE  =
      
      1
    
    let _SRC_COLOR  =
      
      768
    
    let _ONE_MINUS_SRC_COLOR  =
      
      769
    
    let _SRC_ALPHA  =
      
      770
    
    let _ONE_MINUS_SRC_ALPHA  =
      
      771
    
    let _DST_ALPHA  =
      
      772
    
    let _ONE_MINUS_DST_ALPHA  =
      
      773
    
    let _DST_COLOR  =
      
      774
    
    let _ONE_MINUS_DST_COLOR  =
      
      775
    
    let _SRC_ALPHA_SATURATE  =
      
      776
    
    let _FUNC_ADD  =
      
      32774
    
    let _BLEND_EQUATION  =
      
      32777
    
    let _BLEND_EQUATION_RGB  =
      
      32777
    
    let _BLEND_EQUATION_ALPHA  =
      
      34877
    
    let _FUNC_SUBTRACT  =
      
      32778
    
    let _FUNC_REVERSE_SUBTRACT  =
      
      32779
    
    let _BLEND_DST_RGB  =
      
      32968
    
    let _BLEND_SRC_RGB  =
      
      32969
    
    let _BLEND_DST_ALPHA  =
      
      32970
    
    let _BLEND_SRC_ALPHA  =
      
      32971
    
    let _CONSTANT_COLOR  =
      
      32769
    
    let _ONE_MINUS_CONSTANT_COLOR  =
      
      32770
    
    let _CONSTANT_ALPHA  =
      
      32771
    
    let _ONE_MINUS_CONSTANT_ALPHA  =
      
      32772
    
    let _BLEND_COLOR  =
      
      32773
    
    let _ARRAY_BUFFER  =
      
      34962
    
    let _ELEMENT_ARRAY_BUFFER  =
      
      34963
    
    let _ARRAY_BUFFER_BINDING  =
      
      34964
    
    let _ELEMENT_ARRAY_BUFFER_BINDING  =
      
      34965
    
    let _STREAM_DRAW  =
      
      35040
    
    let _STATIC_DRAW  =
      
      35044
    
    let _DYNAMIC_DRAW  =
      
      35048
    
    let _BUFFER_SIZE  =
      
      34660
    
    let _BUFFER_USAGE  =
      
      34661
    
    let _CURRENT_VERTEX_ATTRIB  =
      
      34342
    
    let _FRONT  =
      
      1028
    
    let _BACK  =
      
      1029
    
    let _FRONT_AND_BACK  =
      
      1032
    
    let _CULL_FACE  =
      
      2884
    
    let _BLEND  =
      
      3042
    
    let _DITHER  =
      
      3024
    
    let _STENCIL_TEST  =
      
      2960
    
    let _DEPTH_TEST  =
      
      2929
    
    let _SCISSOR_TEST  =
      
      3089
    
    let _POLYGON_OFFSET_FILL  =
      
      32823
    
    let _SAMPLE_ALPHA_TO_COVERAGE  =
      
      32926
    
    let _SAMPLE_COVERAGE  =
      
      32928
    
    let _NO_ERROR  =
      
      0
    
    let _INVALID_ENUM  =
      
      1280
    
    let _INVALID_VALUE  =
      
      1281
    
    let _INVALID_OPERATION  =
      
      1282
    
    let _OUT_OF_MEMORY  =
      
      1285
    
    let _CW  =
      
      2304
    
    let _CCW  =
      
      2305
    
    let _LINE_WIDTH  =
      
      2849
    
    let _ALIASED_POINT_SIZE_RANGE  =
      
      33901
    
    let _ALIASED_LINE_WIDTH_RANGE  =
      
      33902
    
    let _CULL_FACE_MODE  =
      
      2885
    
    let _FRONT_FACE  =
      
      2886
    
    let _DEPTH_RANGE  =
      
      2928
    
    let _DEPTH_WRITEMASK  =
      
      2930
    
    let _DEPTH_CLEAR_VALUE  =
      
      2931
    
    let _DEPTH_FUNC  =
      
      2932
    
    let _STENCIL_CLEAR_VALUE  =
      
      2961
    
    let _STENCIL_FUNC  =
      
      2962
    
    let _STENCIL_FAIL  =
      
      2964
    
    let _STENCIL_PASS_DEPTH_FAIL  =
      
      2965
    
    let _STENCIL_PASS_DEPTH_PASS  =
      
      2966
    
    let _STENCIL_REF  =
      
      2967
    
    let _STENCIL_VALUE_MASK  =
      
      2963
    
    let _STENCIL_WRITEMASK  =
      
      2968
    
    let _STENCIL_BACK_FUNC  =
      
      34816
    
    let _STENCIL_BACK_FAIL  =
      
      34817
    
    let _STENCIL_BACK_PASS_DEPTH_FAIL  =
      
      34818
    
    let _STENCIL_BACK_PASS_DEPTH_PASS  =
      
      34819
    
    let _STENCIL_BACK_REF  =
      
      36003
    
    let _STENCIL_BACK_VALUE_MASK  =
      
      36004
    
    let _STENCIL_BACK_WRITEMASK  =
      
      36005
    
    let _VIEWPORT  =
      
      2978
    
    let _SCISSOR_BOX  =
      
      3088
    
    let _COLOR_CLEAR_VALUE  =
      
      3106
    
    let _COLOR_WRITEMASK  =
      
      3107
    
    let _UNPACK_ALIGNMENT  =
      
      3317
    
    let _PACK_ALIGNMENT  =
      
      3333
    
    let _MAX_TEXTURE_SIZE  =
      
      3379
    
    let _MAX_VIEWPORT_DIMS  =
      
      3386
    
    let _SUBPIXEL_BITS  =
      
      3408
    
    let _RED_BITS  =
      
      3410
    
    let _GREEN_BITS  =
      
      3411
    
    let _BLUE_BITS  =
      
      3412
    
    let _ALPHA_BITS  =
      
      3413
    
    let _DEPTH_BITS  =
      
      3414
    
    let _STENCIL_BITS  =
      
      3415
    
    let _POLYGON_OFFSET_UNITS  =
      
      10752
    
    let _POLYGON_OFFSET_FACTOR  =
      
      32824
    
    let _TEXTURE_BINDING_2D  =
      
      32873
    
    let _SAMPLE_BUFFERS  =
      
      32936
    
    let _SAMPLES  =
      
      32937
    
    let _SAMPLE_COVERAGE_VALUE  =
      
      32938
    
    let _SAMPLE_COVERAGE_INVERT  =
      
      32939
    
    let _COMPRESSED_TEXTURE_FORMATS  =
      
      34467
    
    let _DONT_CARE  =
      
      4352
    
    let _FASTEST  =
      
      4353
    
    let _NICEST  =
      
      4354
    
    let _GENERATE_MIPMAP_HINT  =
      
      33170
    
    let _BYTE  =
      
      5120
    
    let _UNSIGNED_BYTE  =
      
      5121
    
    let _SHORT  =
      
      5122
    
    let _UNSIGNED_SHORT  =
      
      5123
    
    let _INT  =
      
      5124
    
    let _UNSIGNED_INT  =
      
      5125
    
    let _FLOAT  =
      
      5126
    
    let _DEPTH_COMPONENT  =
      
      6402
    
    let _ALPHA  =
      
      6406
    
    let _RGB  =
      
      6407
    
    let _RGBA  =
      
      6408
    
    let _LUMINANCE  =
      
      6409
    
    let _LUMINANCE_ALPHA  =
      
      6410
    
    let _UNSIGNED_SHORT_4_4_4_4  =
      
      32819
    
    let _UNSIGNED_SHORT_5_5_5_1  =
      
      32820
    
    let _UNSIGNED_SHORT_5_6_5  =
      
      33635
    
    let _FRAGMENT_SHADER  =
      
      35632
    
    let _VERTEX_SHADER  =
      
      35633
    
    let _MAX_VERTEX_ATTRIBS  =
      
      34921
    
    let _MAX_VERTEX_UNIFORM_VECTORS  =
      
      36347
    
    let _MAX_VARYING_VECTORS  =
      
      36348
    
    let _MAX_COMBINED_TEXTURE_IMAGE_UNITS  =
      
      35661
    
    let _MAX_VERTEX_TEXTURE_IMAGE_UNITS  =
      
      35660
    
    let _MAX_TEXTURE_IMAGE_UNITS  =
      
      34930
    
    let _MAX_FRAGMENT_UNIFORM_VECTORS  =
      
      36349
    
    let _SHADER_TYPE  =
      
      35663
    
    let _DELETE_STATUS  =
      
      35712
    
    let _LINK_STATUS  =
      
      35714
    
    let _VALIDATE_STATUS  =
      
      35715
    
    let _ATTACHED_SHADERS  =
      
      35717
    
    let _ACTIVE_UNIFORMS  =
      
      35718
    
    let _ACTIVE_ATTRIBUTES  =
      
      35721
    
    let _SHADING_LANGUAGE_VERSION  =
      
      35724
    
    let _CURRENT_PROGRAM  =
      
      35725
    
    let _NEVER  =
      
      512
    
    let _LESS  =
      
      513
    
    let _EQUAL  =
      
      514
    
    let _LEQUAL  =
      
      515
    
    let _GREATER  =
      
      516
    
    let _NOTEQUAL  =
      
      517
    
    let _GEQUAL  =
      
      518
    
    let _ALWAYS  =
      
      519
    
    let _KEEP  =
      
      7680
    
    let _REPLACE  =
      
      7681
    
    let _INCR  =
      
      7682
    
    let _DECR  =
      
      7683
    
    let _INVERT  =
      
      5386
    
    let _INCR_WRAP  =
      
      34055
    
    let _DECR_WRAP  =
      
      34056
    
    let _VENDOR  =
      
      7936
    
    let _RENDERER  =
      
      7937
    
    let _VERSION  =
      
      7938
    
    let _NEAREST  =
      
      9728
    
    let _LINEAR  =
      
      9729
    
    let _NEAREST_MIPMAP_NEAREST  =
      
      9984
    
    let _LINEAR_MIPMAP_NEAREST  =
      
      9985
    
    let _NEAREST_MIPMAP_LINEAR  =
      
      9986
    
    let _LINEAR_MIPMAP_LINEAR  =
      
      9987
    
    let _TEXTURE_MAG_FILTER  =
      
      10240
    
    let _TEXTURE_MIN_FILTER  =
      
      10241
    
    let _TEXTURE_WRAP_S  =
      
      10242
    
    let _TEXTURE_WRAP_T  =
      
      10243
    
    let _TEXTURE_2D  =
      
      3553
    
    let _TEXTURE  =
      
      5890
    
    let _TEXTURE_CUBE_MAP  =
      
      34067
    
    let _TEXTURE_BINDING_CUBE_MAP  =
      
      34068
    
    let _TEXTURE_CUBE_MAP_POSITIVE_X  =
      
      34069
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_X  =
      
      34070
    
    let _TEXTURE_CUBE_MAP_POSITIVE_Y  =
      
      34071
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_Y  =
      
      34072
    
    let _TEXTURE_CUBE_MAP_POSITIVE_Z  =
      
      34073
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_Z  =
      
      34074
    
    let _MAX_CUBE_MAP_TEXTURE_SIZE  =
      
      34076
    
    let _TEXTURE0  =
      
      33984
    
    let _TEXTURE1  =
      
      33985
    
    let _TEXTURE2  =
      
      33986
    
    let _TEXTURE3  =
      
      33987
    
    let _TEXTURE4  =
      
      33988
    
    let _TEXTURE5  =
      
      33989
    
    let _TEXTURE6  =
      
      33990
    
    let _TEXTURE7  =
      
      33991
    
    let _TEXTURE8  =
      
      33992
    
    let _TEXTURE9  =
      
      33993
    
    let _TEXTURE10  =
      
      33994
    
    let _TEXTURE11  =
      
      33995
    
    let _TEXTURE12  =
      
      33996
    
    let _TEXTURE13  =
      
      33997
    
    let _TEXTURE14  =
      
      33998
    
    let _TEXTURE15  =
      
      33999
    
    let _TEXTURE16  =
      
      34000
    
    let _TEXTURE17  =
      
      34001
    
    let _TEXTURE18  =
      
      34002
    
    let _TEXTURE19  =
      
      34003
    
    let _TEXTURE20  =
      
      34004
    
    let _TEXTURE21  =
      
      34005
    
    let _TEXTURE22  =
      
      34006
    
    let _TEXTURE23  =
      
      34007
    
    let _TEXTURE24  =
      
      34008
    
    let _TEXTURE25  =
      
      34009
    
    let _TEXTURE26  =
      
      34010
    
    let _TEXTURE27  =
      
      34011
    
    let _TEXTURE28  =
      
      34012
    
    let _TEXTURE29  =
      
      34013
    
    let _TEXTURE30  =
      
      34014
    
    let _TEXTURE31  =
      
      34015
    
    let _ACTIVE_TEXTURE  =
      
      34016
    
    let _REPEAT  =
      
      10497
    
    let _CLAMP_TO_EDGE  =
      
      33071
    
    let _MIRRORED_REPEAT  =
      
      33648
    
    let _FLOAT_VEC2  =
      
      35664
    
    let _FLOAT_VEC3  =
      
      35665
    
    let _FLOAT_VEC4  =
      
      35666
    
    let _INT_VEC2  =
      
      35667
    
    let _INT_VEC3  =
      
      35668
    
    let _INT_VEC4  =
      
      35669
    
    let _BOOL  =
      
      35670
    
    let _BOOL_VEC2  =
      
      35671
    
    let _BOOL_VEC3  =
      
      35672
    
    let _BOOL_VEC4  =
      
      35673
    
    let _FLOAT_MAT2  =
      
      35674
    
    let _FLOAT_MAT3  =
      
      35675
    
    let _FLOAT_MAT4  =
      
      35676
    
    let _SAMPLER_2D  =
      
      35678
    
    let _SAMPLER_CUBE  =
      
      35680
    
    let _VERTEX_ATTRIB_ARRAY_ENABLED  =
      
      34338
    
    let _VERTEX_ATTRIB_ARRAY_SIZE  =
      
      34339
    
    let _VERTEX_ATTRIB_ARRAY_STRIDE  =
      
      34340
    
    let _VERTEX_ATTRIB_ARRAY_TYPE  =
      
      34341
    
    let _VERTEX_ATTRIB_ARRAY_NORMALIZED  =
      
      34922
    
    let _VERTEX_ATTRIB_ARRAY_POINTER  =
      
      34373
    
    let _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING  =
      
      34975
    
    let _IMPLEMENTATION_COLOR_READ_TYPE  =
      
      35738
    
    let _IMPLEMENTATION_COLOR_READ_FORMAT  =
      
      35739
    
    let _COMPILE_STATUS  =
      
      35713
    
    let _LOW_FLOAT  =
      
      36336
    
    let _MEDIUM_FLOAT  =
      
      36337
    
    let _HIGH_FLOAT  =
      
      36338
    
    let _LOW_INT  =
      
      36339
    
    let _MEDIUM_INT  =
      
      36340
    
    let _HIGH_INT  =
      
      36341
    
    let _FRAMEBUFFER  =
      
      36160
    
    let _RENDERBUFFER  =
      
      36161
    
    let _RGBA4  =
      
      32854
    
    let _RGB5_A1  =
      
      32855
    
    let _RGB565  =
      
      36194
    
    let _DEPTH_COMPONENT16  =
      
      33189
    
    let _STENCIL_INDEX  =
      
      6401
    
    let _STENCIL_INDEX8  =
      
      36168
    
    let _DEPTH_STENCIL  =
      
      34041
    
    let _RENDERBUFFER_WIDTH  =
      
      36162
    
    let _RENDERBUFFER_HEIGHT  =
      
      36163
    
    let _RENDERBUFFER_INTERNAL_FORMAT  =
      
      36164
    
    let _RENDERBUFFER_RED_SIZE  =
      
      36176
    
    let _RENDERBUFFER_GREEN_SIZE  =
      
      36177
    
    let _RENDERBUFFER_BLUE_SIZE  =
      
      36178
    
    let _RENDERBUFFER_ALPHA_SIZE  =
      
      36179
    
    let _RENDERBUFFER_DEPTH_SIZE  =
      
      36180
    
    let _RENDERBUFFER_STENCIL_SIZE  =
      
      36181
    
    let _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE  =
      
      36048
    
    let _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME  =
      
      36049
    
    let _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL  =
      
      36050
    
    let _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE  =
      
      36051
    
    let _COLOR_ATTACHMENT0  =
      
      36064
    
    let _DEPTH_ATTACHMENT  =
      
      36096
    
    let _STENCIL_ATTACHMENT  =
      
      36128
    
    let _DEPTH_STENCIL_ATTACHMENT  =
      
      33306
    
    let _NONE  =
      
      0
    
    let _FRAMEBUFFER_COMPLETE  =
      
      36053
    
    let _FRAMEBUFFER_INCOMPLETE_ATTACHMENT  =
      
      36054
    
    let _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT  =
      
      36055
    
    let _FRAMEBUFFER_INCOMPLETE_DIMENSIONS  =
      
      36057
    
    let _FRAMEBUFFER_UNSUPPORTED  =
      
      36061
    
    let _FRAMEBUFFER_BINDING  =
      
      36006
    
    let _RENDERBUFFER_BINDING  =
      
      36007
    
    let _MAX_RENDERBUFFER_SIZE  =
      
      34024
    
    let _INVALID_FRAMEBUFFER_OPERATION  =
      
      1286
    
    let _UNPACK_FLIP_Y_WEBGL  =
      
      37440
    
    let _UNPACK_PREMULTIPLY_ALPHA_WEBGL  =
      
      37441
    
    let _CONTEXT_LOST_WEBGL  =
      
      37442
    
    let _UNPACK_COLORSPACE_CONVERSION_WEBGL  =
      
      37443
    
    let _BROWSER_DEFAULT_WEBGL  =
      
      37444
    
    let bufferData ~target ~data ~usage webGLRenderingContextBase =
      let conv_data = function
        | `Any_Null (x: 'a39 Js.null) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let data = conv_data data in
      let return = bufferData ~target ~data ~usage webGLRenderingContextBase in
      return
    
    let texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContextBase =
      let conv_source = function
        | `ImageData (x: (_) _ImageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) _HTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContextBase in
      return
    
    let texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContextBase =
      let conv_source = function
        | `ImageData (x: (_) _ImageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) _HTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContextBase in
      return
    
end
 module WebGLRenderingContext = struct
    
    
    external canvas : webGLRenderingContext:('own) _WebGLRenderingContext_like ->  _HTMLCanvasElement = "canvas" [@@bs.get] 
    external drawingBufferWidth : webGLRenderingContext:('own) _WebGLRenderingContext_like ->  int = "drawingBufferWidth" [@@bs.get] 
    external drawingBufferHeight : webGLRenderingContext:('own) _WebGLRenderingContext_like ->  int = "drawingBufferHeight" [@@bs.get] 
    external activeTexture : texture:int ->  unit = "activeTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external attachShader : program:(_) _WebGLProgram_like Js.null -> shader:(_) _WebGLShader_like Js.null ->  unit = "attachShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bindAttribLocation : program:(_) _WebGLProgram_like Js.null -> index:int -> name:string ->  unit = "bindAttribLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bindBuffer : target:int -> buffer:(_) _WebGLBuffer_like Js.null ->  unit = "bindBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bindFramebuffer : target:int -> framebuffer:(_) _WebGLFramebuffer_like Js.null ->  unit = "bindFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bindRenderbuffer : target:int -> renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "bindRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bindTexture : target:int -> texture:(_) _WebGLTexture_like Js.null ->  unit = "bindTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external blendColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "blendColor" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external blendEquation : mode:int ->  unit = "blendEquation" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external blendEquationSeparate : modeRGB:int -> modeAlpha:int ->  unit = "blendEquationSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external blendFunc : sfactor:int -> dfactor:int ->  unit = "blendFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external blendFuncSeparate : srcRGB:int -> dstRGB:int -> srcAlpha:int -> dstAlpha:int ->  unit = "blendFuncSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bufferData : target:int -> data:'a40 -> usage:int ->  unit = "bufferData" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external bufferSubData : target:int -> offset:int -> data:'a41 Js.null ->  unit = "bufferSubData" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external checkFramebufferStatus : target:int ->  int = "checkFramebufferStatus" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external clear : mask:int ->  unit = "clear" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external clearColor : red:float -> green:float -> blue:float -> alpha:float ->  unit = "clearColor" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external clearDepth : depth:float ->  unit = "clearDepth" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external clearStencil : s:int ->  unit = "clearStencil" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external colorMask : red:Js.boolean -> green:Js.boolean -> blue:Js.boolean -> alpha:Js.boolean ->  unit = "colorMask" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external compileShader : shader:(_) _WebGLShader_like Js.null ->  unit = "compileShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external compressedTexImage2D : target:int -> level:int -> internalformat:int -> width:int -> height:int -> border:int -> data:'a42 ->  unit = "compressedTexImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external compressedTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> width:int -> height:int -> format:int -> data:'a43 ->  unit = "compressedTexSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external copyTexImage2D : target:int -> level:int -> internalformat:int -> x:int -> y:int -> width:int -> height:int -> border:int ->  unit = "copyTexImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external copyTexSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> x:int -> y:int -> width:int -> height:int ->  unit = "copyTexSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external createBuffer :  _WebGLBuffer option = "createBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external createFramebuffer :  _WebGLFramebuffer option = "createFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external createProgram :  _WebGLProgram option = "createProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external createRenderbuffer :  _WebGLRenderbuffer option = "createRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external createShader : type_:int ->  _WebGLShader option = "createShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external createTexture :  _WebGLTexture option = "createTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external cullFace : mode:int ->  unit = "cullFace" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteBuffer : buffer:(_) _WebGLBuffer_like Js.null ->  unit = "deleteBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteFramebuffer : framebuffer:(_) _WebGLFramebuffer_like Js.null ->  unit = "deleteFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "deleteProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteRenderbuffer : renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "deleteRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteShader : shader:(_) _WebGLShader_like Js.null ->  unit = "deleteShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external deleteTexture : texture:(_) _WebGLTexture_like Js.null ->  unit = "deleteTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external depthFunc : func:int ->  unit = "depthFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external depthMask : flag:Js.boolean ->  unit = "depthMask" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external depthRange : zNear:float -> zFar:float ->  unit = "depthRange" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external detachShader : program:(_) _WebGLProgram_like Js.null -> shader:(_) _WebGLShader_like Js.null ->  unit = "detachShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external disable : cap:int ->  unit = "disable" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external disableVertexAttribArray : index:int ->  unit = "disableVertexAttribArray" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external drawArrays : mode:int -> first:int -> count:int ->  unit = "drawArrays" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external drawElements : mode:int -> count:int -> type_:int -> offset:int ->  unit = "drawElements" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external enable : cap:int ->  unit = "enable" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external enableVertexAttribArray : index:int ->  unit = "enableVertexAttribArray" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external finish :  unit = "finish" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external flush :  unit = "flush" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external framebufferRenderbuffer : target:int -> attachment:int -> renderbuffertarget:int -> renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  unit = "framebufferRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external framebufferTexture2D : target:int -> attachment:int -> textarget:int -> texture:(_) _WebGLTexture_like Js.null -> level:int ->  unit = "framebufferTexture2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external frontFace : mode:int ->  unit = "frontFace" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external generateMipmap : target:int ->  unit = "generateMipmap" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getActiveAttrib : program:(_) _WebGLProgram_like Js.null -> index:int ->  _WebGLActiveInfo option = "getActiveAttrib" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getActiveUniform : program:(_) _WebGLProgram_like Js.null -> index:int ->  _WebGLActiveInfo option = "getActiveUniform" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getAttribLocation : program:(_) _WebGLProgram_like Js.null -> name:string ->  int = "getAttribLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getBufferParameter : target:int -> pname:int ->  'a44 = "getBufferParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getContextAttributes :  _WebGLContextAttributes option = "getContextAttributes" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getError :  int = "getError" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getExtension : name:string ->  'a45 option = "getExtension" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getParameter : pname:int ->  'a46 = "getParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getProgramInfoLog : program:(_) _WebGLProgram_like Js.null ->  string option = "getProgramInfoLog" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getProgramParameter : program:(_) _WebGLProgram_like Js.null -> pname:int ->  'a47 = "getProgramParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getShaderInfoLog : shader:(_) _WebGLShader_like Js.null ->  string option = "getShaderInfoLog" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getShaderParameter : shader:(_) _WebGLShader_like Js.null -> pname:int ->  'a48 = "getShaderParameter" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getShaderPrecisionFormat : shadertype:int -> precisiontype:int ->  _WebGLShaderPrecisionFormat option = "getShaderPrecisionFormat" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getShaderSource : shader:(_) _WebGLShader_like Js.null ->  string option = "getShaderSource" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getSupportedExtensions :  string array option = "getSupportedExtensions" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getUniformLocation : program:(_) _WebGLProgram_like Js.null -> name:string ->  _WebGLUniformLocation option = "getUniformLocation" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] [@@bs.return null_to_opt]
    external getVertexAttrib : index:int -> pname:int ->  'a49 = "getVertexAttrib" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external getVertexAttribOffset : index:int -> pname:int ->  int = "getVertexAttribOffset" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external hint : target:int -> mode:int ->  unit = "hint" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isBuffer : buffer:(_) _WebGLBuffer_like Js.null ->  bool = "isBuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isEnabled : cap:int ->  bool = "isEnabled" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isFramebuffer : framebuffer:(_) _WebGLFramebuffer_like Js.null ->  bool = "isFramebuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isProgram : program:(_) _WebGLProgram_like Js.null ->  bool = "isProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isRenderbuffer : renderbuffer:(_) _WebGLRenderbuffer_like Js.null ->  bool = "isRenderbuffer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isShader : shader:(_) _WebGLShader_like Js.null ->  bool = "isShader" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external isTexture : texture:(_) _WebGLTexture_like Js.null ->  bool = "isTexture" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external lineWidth : width:float ->  unit = "lineWidth" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external linkProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "linkProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external pixelStorei : pname:int -> param:int ->  unit = "pixelStorei" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external polygonOffset : factor:float -> units:float ->  unit = "polygonOffset" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external readPixels : x:int -> y:int -> width:int -> height:int -> format:int -> type_:int -> pixels:'a50 Js.null ->  unit = "readPixels" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external renderbufferStorage : target:int -> internalformat:int -> width:int -> height:int ->  unit = "renderbufferStorage" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external sampleCoverage : value:float -> invert:Js.boolean ->  unit = "sampleCoverage" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external scissor : x:int -> y:int -> width:int -> height:int ->  unit = "scissor" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external shaderSource : shader:(_) _WebGLShader_like Js.null -> source:string ->  unit = "shaderSource" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilFunc : func:int -> ref:int -> mask:int ->  unit = "stencilFunc" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilFuncSeparate : face:int -> func:int -> ref:int -> mask:int ->  unit = "stencilFuncSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilMask : mask:int ->  unit = "stencilMask" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilMaskSeparate : face:int -> mask:int ->  unit = "stencilMaskSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilOp : fail:int -> zfail:int -> zpass:int ->  unit = "stencilOp" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external stencilOpSeparate : face:int -> fail:int -> zfail:int -> zpass:int ->  unit = "stencilOpSeparate" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external texImage2D : target:int -> level:int -> internalformat:int -> format:int -> type_:int -> source:'a51 Js.null ->  unit = "texImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external texParameterf : target:int -> pname:int -> param:float ->  unit = "texParameterf" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external texParameteri : target:int -> pname:int -> param:int ->  unit = "texParameteri" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external texSubImage2D : target:int -> level:int -> xoffset:int -> yoffset:int -> format:int -> type_:int -> source:'a52 Js.null ->  unit = "texSubImage2D" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform1f : location:(_) _WebGLUniformLocation_like Js.null -> x:float ->  unit = "uniform1f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform1fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a53 ->  unit = "uniform1fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform1i : location:(_) _WebGLUniformLocation_like Js.null -> x:int ->  unit = "uniform1i" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform1iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a54 ->  unit = "uniform1iv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform2f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float ->  unit = "uniform2f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform2fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a55 ->  unit = "uniform2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform2i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int ->  unit = "uniform2i" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform2iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a56 ->  unit = "uniform2iv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform3f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float -> z:float ->  unit = "uniform3f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform3fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a57 ->  unit = "uniform3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform3i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int -> z:int ->  unit = "uniform3i" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform3iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a58 ->  unit = "uniform3iv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform4f : location:(_) _WebGLUniformLocation_like Js.null -> x:float -> y:float -> z:float -> w:float ->  unit = "uniform4f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform4fv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a59 ->  unit = "uniform4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform4i : location:(_) _WebGLUniformLocation_like Js.null -> x:int -> y:int -> z:int -> w:int ->  unit = "uniform4i" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniform4iv : location:(_) _WebGLUniformLocation_like Js.null -> v:'a60 ->  unit = "uniform4iv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniformMatrix2fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a61 ->  unit = "uniformMatrix2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniformMatrix3fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a62 ->  unit = "uniformMatrix3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external uniformMatrix4fv : location:(_) _WebGLUniformLocation_like Js.null -> transpose:Js.boolean -> v:'a63 ->  unit = "uniformMatrix4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external useProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "useProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external validateProgram : program:(_) _WebGLProgram_like Js.null ->  unit = "validateProgram" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib1f : indx:int -> x:float ->  unit = "vertexAttrib1f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib1fv : indx:int -> values:'a64 ->  unit = "vertexAttrib1fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib2f : indx:int -> x:float -> y:float ->  unit = "vertexAttrib2f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib2fv : indx:int -> values:'a65 ->  unit = "vertexAttrib2fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib3f : indx:int -> x:float -> y:float -> z:float ->  unit = "vertexAttrib3f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib3fv : indx:int -> values:'a66 ->  unit = "vertexAttrib3fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib4f : indx:int -> x:float -> y:float -> z:float -> w:float ->  unit = "vertexAttrib4f" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttrib4fv : indx:int -> values:'a67 ->  unit = "vertexAttrib4fv" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external vertexAttribPointer : indx:int -> size:int -> type_:int -> normalized:Js.boolean -> stride:int -> offset:int ->  unit = "vertexAttribPointer" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    external viewport : x:int -> y:int -> width:int -> height:int ->  unit = "viewport" [@@bs.send.pipe: ('own) _WebGLRenderingContext_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WebGLRenderingContext) in
      (return:(_) _WebGLRenderingContext_like)
    
    let _DEPTH_BUFFER_BIT  =
      
      256
    
    let _STENCIL_BUFFER_BIT  =
      
      1024
    
    let _COLOR_BUFFER_BIT  =
      
      16384
    
    let _POINTS  =
      
      0
    
    let _LINES  =
      
      1
    
    let _LINE_LOOP  =
      
      2
    
    let _LINE_STRIP  =
      
      3
    
    let _TRIANGLES  =
      
      4
    
    let _TRIANGLE_STRIP  =
      
      5
    
    let _TRIANGLE_FAN  =
      
      6
    
    let _ZERO  =
      
      0
    
    let _ONE  =
      
      1
    
    let _SRC_COLOR  =
      
      768
    
    let _ONE_MINUS_SRC_COLOR  =
      
      769
    
    let _SRC_ALPHA  =
      
      770
    
    let _ONE_MINUS_SRC_ALPHA  =
      
      771
    
    let _DST_ALPHA  =
      
      772
    
    let _ONE_MINUS_DST_ALPHA  =
      
      773
    
    let _DST_COLOR  =
      
      774
    
    let _ONE_MINUS_DST_COLOR  =
      
      775
    
    let _SRC_ALPHA_SATURATE  =
      
      776
    
    let _FUNC_ADD  =
      
      32774
    
    let _BLEND_EQUATION  =
      
      32777
    
    let _BLEND_EQUATION_RGB  =
      
      32777
    
    let _BLEND_EQUATION_ALPHA  =
      
      34877
    
    let _FUNC_SUBTRACT  =
      
      32778
    
    let _FUNC_REVERSE_SUBTRACT  =
      
      32779
    
    let _BLEND_DST_RGB  =
      
      32968
    
    let _BLEND_SRC_RGB  =
      
      32969
    
    let _BLEND_DST_ALPHA  =
      
      32970
    
    let _BLEND_SRC_ALPHA  =
      
      32971
    
    let _CONSTANT_COLOR  =
      
      32769
    
    let _ONE_MINUS_CONSTANT_COLOR  =
      
      32770
    
    let _CONSTANT_ALPHA  =
      
      32771
    
    let _ONE_MINUS_CONSTANT_ALPHA  =
      
      32772
    
    let _BLEND_COLOR  =
      
      32773
    
    let _ARRAY_BUFFER  =
      
      34962
    
    let _ELEMENT_ARRAY_BUFFER  =
      
      34963
    
    let _ARRAY_BUFFER_BINDING  =
      
      34964
    
    let _ELEMENT_ARRAY_BUFFER_BINDING  =
      
      34965
    
    let _STREAM_DRAW  =
      
      35040
    
    let _STATIC_DRAW  =
      
      35044
    
    let _DYNAMIC_DRAW  =
      
      35048
    
    let _BUFFER_SIZE  =
      
      34660
    
    let _BUFFER_USAGE  =
      
      34661
    
    let _CURRENT_VERTEX_ATTRIB  =
      
      34342
    
    let _FRONT  =
      
      1028
    
    let _BACK  =
      
      1029
    
    let _FRONT_AND_BACK  =
      
      1032
    
    let _CULL_FACE  =
      
      2884
    
    let _BLEND  =
      
      3042
    
    let _DITHER  =
      
      3024
    
    let _STENCIL_TEST  =
      
      2960
    
    let _DEPTH_TEST  =
      
      2929
    
    let _SCISSOR_TEST  =
      
      3089
    
    let _POLYGON_OFFSET_FILL  =
      
      32823
    
    let _SAMPLE_ALPHA_TO_COVERAGE  =
      
      32926
    
    let _SAMPLE_COVERAGE  =
      
      32928
    
    let _NO_ERROR  =
      
      0
    
    let _INVALID_ENUM  =
      
      1280
    
    let _INVALID_VALUE  =
      
      1281
    
    let _INVALID_OPERATION  =
      
      1282
    
    let _OUT_OF_MEMORY  =
      
      1285
    
    let _CW  =
      
      2304
    
    let _CCW  =
      
      2305
    
    let _LINE_WIDTH  =
      
      2849
    
    let _ALIASED_POINT_SIZE_RANGE  =
      
      33901
    
    let _ALIASED_LINE_WIDTH_RANGE  =
      
      33902
    
    let _CULL_FACE_MODE  =
      
      2885
    
    let _FRONT_FACE  =
      
      2886
    
    let _DEPTH_RANGE  =
      
      2928
    
    let _DEPTH_WRITEMASK  =
      
      2930
    
    let _DEPTH_CLEAR_VALUE  =
      
      2931
    
    let _DEPTH_FUNC  =
      
      2932
    
    let _STENCIL_CLEAR_VALUE  =
      
      2961
    
    let _STENCIL_FUNC  =
      
      2962
    
    let _STENCIL_FAIL  =
      
      2964
    
    let _STENCIL_PASS_DEPTH_FAIL  =
      
      2965
    
    let _STENCIL_PASS_DEPTH_PASS  =
      
      2966
    
    let _STENCIL_REF  =
      
      2967
    
    let _STENCIL_VALUE_MASK  =
      
      2963
    
    let _STENCIL_WRITEMASK  =
      
      2968
    
    let _STENCIL_BACK_FUNC  =
      
      34816
    
    let _STENCIL_BACK_FAIL  =
      
      34817
    
    let _STENCIL_BACK_PASS_DEPTH_FAIL  =
      
      34818
    
    let _STENCIL_BACK_PASS_DEPTH_PASS  =
      
      34819
    
    let _STENCIL_BACK_REF  =
      
      36003
    
    let _STENCIL_BACK_VALUE_MASK  =
      
      36004
    
    let _STENCIL_BACK_WRITEMASK  =
      
      36005
    
    let _VIEWPORT  =
      
      2978
    
    let _SCISSOR_BOX  =
      
      3088
    
    let _COLOR_CLEAR_VALUE  =
      
      3106
    
    let _COLOR_WRITEMASK  =
      
      3107
    
    let _UNPACK_ALIGNMENT  =
      
      3317
    
    let _PACK_ALIGNMENT  =
      
      3333
    
    let _MAX_TEXTURE_SIZE  =
      
      3379
    
    let _MAX_VIEWPORT_DIMS  =
      
      3386
    
    let _SUBPIXEL_BITS  =
      
      3408
    
    let _RED_BITS  =
      
      3410
    
    let _GREEN_BITS  =
      
      3411
    
    let _BLUE_BITS  =
      
      3412
    
    let _ALPHA_BITS  =
      
      3413
    
    let _DEPTH_BITS  =
      
      3414
    
    let _STENCIL_BITS  =
      
      3415
    
    let _POLYGON_OFFSET_UNITS  =
      
      10752
    
    let _POLYGON_OFFSET_FACTOR  =
      
      32824
    
    let _TEXTURE_BINDING_2D  =
      
      32873
    
    let _SAMPLE_BUFFERS  =
      
      32936
    
    let _SAMPLES  =
      
      32937
    
    let _SAMPLE_COVERAGE_VALUE  =
      
      32938
    
    let _SAMPLE_COVERAGE_INVERT  =
      
      32939
    
    let _COMPRESSED_TEXTURE_FORMATS  =
      
      34467
    
    let _DONT_CARE  =
      
      4352
    
    let _FASTEST  =
      
      4353
    
    let _NICEST  =
      
      4354
    
    let _GENERATE_MIPMAP_HINT  =
      
      33170
    
    let _BYTE  =
      
      5120
    
    let _UNSIGNED_BYTE  =
      
      5121
    
    let _SHORT  =
      
      5122
    
    let _UNSIGNED_SHORT  =
      
      5123
    
    let _INT  =
      
      5124
    
    let _UNSIGNED_INT  =
      
      5125
    
    let _FLOAT  =
      
      5126
    
    let _DEPTH_COMPONENT  =
      
      6402
    
    let _ALPHA  =
      
      6406
    
    let _RGB  =
      
      6407
    
    let _RGBA  =
      
      6408
    
    let _LUMINANCE  =
      
      6409
    
    let _LUMINANCE_ALPHA  =
      
      6410
    
    let _UNSIGNED_SHORT_4_4_4_4  =
      
      32819
    
    let _UNSIGNED_SHORT_5_5_5_1  =
      
      32820
    
    let _UNSIGNED_SHORT_5_6_5  =
      
      33635
    
    let _FRAGMENT_SHADER  =
      
      35632
    
    let _VERTEX_SHADER  =
      
      35633
    
    let _MAX_VERTEX_ATTRIBS  =
      
      34921
    
    let _MAX_VERTEX_UNIFORM_VECTORS  =
      
      36347
    
    let _MAX_VARYING_VECTORS  =
      
      36348
    
    let _MAX_COMBINED_TEXTURE_IMAGE_UNITS  =
      
      35661
    
    let _MAX_VERTEX_TEXTURE_IMAGE_UNITS  =
      
      35660
    
    let _MAX_TEXTURE_IMAGE_UNITS  =
      
      34930
    
    let _MAX_FRAGMENT_UNIFORM_VECTORS  =
      
      36349
    
    let _SHADER_TYPE  =
      
      35663
    
    let _DELETE_STATUS  =
      
      35712
    
    let _LINK_STATUS  =
      
      35714
    
    let _VALIDATE_STATUS  =
      
      35715
    
    let _ATTACHED_SHADERS  =
      
      35717
    
    let _ACTIVE_UNIFORMS  =
      
      35718
    
    let _ACTIVE_ATTRIBUTES  =
      
      35721
    
    let _SHADING_LANGUAGE_VERSION  =
      
      35724
    
    let _CURRENT_PROGRAM  =
      
      35725
    
    let _NEVER  =
      
      512
    
    let _LESS  =
      
      513
    
    let _EQUAL  =
      
      514
    
    let _LEQUAL  =
      
      515
    
    let _GREATER  =
      
      516
    
    let _NOTEQUAL  =
      
      517
    
    let _GEQUAL  =
      
      518
    
    let _ALWAYS  =
      
      519
    
    let _KEEP  =
      
      7680
    
    let _REPLACE  =
      
      7681
    
    let _INCR  =
      
      7682
    
    let _DECR  =
      
      7683
    
    let _INVERT  =
      
      5386
    
    let _INCR_WRAP  =
      
      34055
    
    let _DECR_WRAP  =
      
      34056
    
    let _VENDOR  =
      
      7936
    
    let _RENDERER  =
      
      7937
    
    let _VERSION  =
      
      7938
    
    let _NEAREST  =
      
      9728
    
    let _LINEAR  =
      
      9729
    
    let _NEAREST_MIPMAP_NEAREST  =
      
      9984
    
    let _LINEAR_MIPMAP_NEAREST  =
      
      9985
    
    let _NEAREST_MIPMAP_LINEAR  =
      
      9986
    
    let _LINEAR_MIPMAP_LINEAR  =
      
      9987
    
    let _TEXTURE_MAG_FILTER  =
      
      10240
    
    let _TEXTURE_MIN_FILTER  =
      
      10241
    
    let _TEXTURE_WRAP_S  =
      
      10242
    
    let _TEXTURE_WRAP_T  =
      
      10243
    
    let _TEXTURE_2D  =
      
      3553
    
    let _TEXTURE  =
      
      5890
    
    let _TEXTURE_CUBE_MAP  =
      
      34067
    
    let _TEXTURE_BINDING_CUBE_MAP  =
      
      34068
    
    let _TEXTURE_CUBE_MAP_POSITIVE_X  =
      
      34069
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_X  =
      
      34070
    
    let _TEXTURE_CUBE_MAP_POSITIVE_Y  =
      
      34071
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_Y  =
      
      34072
    
    let _TEXTURE_CUBE_MAP_POSITIVE_Z  =
      
      34073
    
    let _TEXTURE_CUBE_MAP_NEGATIVE_Z  =
      
      34074
    
    let _MAX_CUBE_MAP_TEXTURE_SIZE  =
      
      34076
    
    let _TEXTURE0  =
      
      33984
    
    let _TEXTURE1  =
      
      33985
    
    let _TEXTURE2  =
      
      33986
    
    let _TEXTURE3  =
      
      33987
    
    let _TEXTURE4  =
      
      33988
    
    let _TEXTURE5  =
      
      33989
    
    let _TEXTURE6  =
      
      33990
    
    let _TEXTURE7  =
      
      33991
    
    let _TEXTURE8  =
      
      33992
    
    let _TEXTURE9  =
      
      33993
    
    let _TEXTURE10  =
      
      33994
    
    let _TEXTURE11  =
      
      33995
    
    let _TEXTURE12  =
      
      33996
    
    let _TEXTURE13  =
      
      33997
    
    let _TEXTURE14  =
      
      33998
    
    let _TEXTURE15  =
      
      33999
    
    let _TEXTURE16  =
      
      34000
    
    let _TEXTURE17  =
      
      34001
    
    let _TEXTURE18  =
      
      34002
    
    let _TEXTURE19  =
      
      34003
    
    let _TEXTURE20  =
      
      34004
    
    let _TEXTURE21  =
      
      34005
    
    let _TEXTURE22  =
      
      34006
    
    let _TEXTURE23  =
      
      34007
    
    let _TEXTURE24  =
      
      34008
    
    let _TEXTURE25  =
      
      34009
    
    let _TEXTURE26  =
      
      34010
    
    let _TEXTURE27  =
      
      34011
    
    let _TEXTURE28  =
      
      34012
    
    let _TEXTURE29  =
      
      34013
    
    let _TEXTURE30  =
      
      34014
    
    let _TEXTURE31  =
      
      34015
    
    let _ACTIVE_TEXTURE  =
      
      34016
    
    let _REPEAT  =
      
      10497
    
    let _CLAMP_TO_EDGE  =
      
      33071
    
    let _MIRRORED_REPEAT  =
      
      33648
    
    let _FLOAT_VEC2  =
      
      35664
    
    let _FLOAT_VEC3  =
      
      35665
    
    let _FLOAT_VEC4  =
      
      35666
    
    let _INT_VEC2  =
      
      35667
    
    let _INT_VEC3  =
      
      35668
    
    let _INT_VEC4  =
      
      35669
    
    let _BOOL  =
      
      35670
    
    let _BOOL_VEC2  =
      
      35671
    
    let _BOOL_VEC3  =
      
      35672
    
    let _BOOL_VEC4  =
      
      35673
    
    let _FLOAT_MAT2  =
      
      35674
    
    let _FLOAT_MAT3  =
      
      35675
    
    let _FLOAT_MAT4  =
      
      35676
    
    let _SAMPLER_2D  =
      
      35678
    
    let _SAMPLER_CUBE  =
      
      35680
    
    let _VERTEX_ATTRIB_ARRAY_ENABLED  =
      
      34338
    
    let _VERTEX_ATTRIB_ARRAY_SIZE  =
      
      34339
    
    let _VERTEX_ATTRIB_ARRAY_STRIDE  =
      
      34340
    
    let _VERTEX_ATTRIB_ARRAY_TYPE  =
      
      34341
    
    let _VERTEX_ATTRIB_ARRAY_NORMALIZED  =
      
      34922
    
    let _VERTEX_ATTRIB_ARRAY_POINTER  =
      
      34373
    
    let _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING  =
      
      34975
    
    let _IMPLEMENTATION_COLOR_READ_TYPE  =
      
      35738
    
    let _IMPLEMENTATION_COLOR_READ_FORMAT  =
      
      35739
    
    let _COMPILE_STATUS  =
      
      35713
    
    let _LOW_FLOAT  =
      
      36336
    
    let _MEDIUM_FLOAT  =
      
      36337
    
    let _HIGH_FLOAT  =
      
      36338
    
    let _LOW_INT  =
      
      36339
    
    let _MEDIUM_INT  =
      
      36340
    
    let _HIGH_INT  =
      
      36341
    
    let _FRAMEBUFFER  =
      
      36160
    
    let _RENDERBUFFER  =
      
      36161
    
    let _RGBA4  =
      
      32854
    
    let _RGB5_A1  =
      
      32855
    
    let _RGB565  =
      
      36194
    
    let _DEPTH_COMPONENT16  =
      
      33189
    
    let _STENCIL_INDEX  =
      
      6401
    
    let _STENCIL_INDEX8  =
      
      36168
    
    let _DEPTH_STENCIL  =
      
      34041
    
    let _RENDERBUFFER_WIDTH  =
      
      36162
    
    let _RENDERBUFFER_HEIGHT  =
      
      36163
    
    let _RENDERBUFFER_INTERNAL_FORMAT  =
      
      36164
    
    let _RENDERBUFFER_RED_SIZE  =
      
      36176
    
    let _RENDERBUFFER_GREEN_SIZE  =
      
      36177
    
    let _RENDERBUFFER_BLUE_SIZE  =
      
      36178
    
    let _RENDERBUFFER_ALPHA_SIZE  =
      
      36179
    
    let _RENDERBUFFER_DEPTH_SIZE  =
      
      36180
    
    let _RENDERBUFFER_STENCIL_SIZE  =
      
      36181
    
    let _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE  =
      
      36048
    
    let _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME  =
      
      36049
    
    let _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL  =
      
      36050
    
    let _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE  =
      
      36051
    
    let _COLOR_ATTACHMENT0  =
      
      36064
    
    let _DEPTH_ATTACHMENT  =
      
      36096
    
    let _STENCIL_ATTACHMENT  =
      
      36128
    
    let _DEPTH_STENCIL_ATTACHMENT  =
      
      33306
    
    let _NONE  =
      
      0
    
    let _FRAMEBUFFER_COMPLETE  =
      
      36053
    
    let _FRAMEBUFFER_INCOMPLETE_ATTACHMENT  =
      
      36054
    
    let _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT  =
      
      36055
    
    let _FRAMEBUFFER_INCOMPLETE_DIMENSIONS  =
      
      36057
    
    let _FRAMEBUFFER_UNSUPPORTED  =
      
      36061
    
    let _FRAMEBUFFER_BINDING  =
      
      36006
    
    let _RENDERBUFFER_BINDING  =
      
      36007
    
    let _MAX_RENDERBUFFER_SIZE  =
      
      34024
    
    let _INVALID_FRAMEBUFFER_OPERATION  =
      
      1286
    
    let _UNPACK_FLIP_Y_WEBGL  =
      
      37440
    
    let _UNPACK_PREMULTIPLY_ALPHA_WEBGL  =
      
      37441
    
    let _CONTEXT_LOST_WEBGL  =
      
      37442
    
    let _UNPACK_COLORSPACE_CONVERSION_WEBGL  =
      
      37443
    
    let _BROWSER_DEFAULT_WEBGL  =
      
      37444
    
    let bufferData ~target ~data ~usage webGLRenderingContext =
      let conv_data = function
        | `Any_Null (x: 'a68 Js.null) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let data = conv_data data in
      let return = bufferData ~target ~data ~usage webGLRenderingContext in
      return
    
    let texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContext =
      let conv_source = function
        | `ImageData (x: (_) _ImageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) _HTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texImage2D ~target ~level ~internalformat ~format ~type_ ~source webGLRenderingContext in
      return
    
    let texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContext =
      let conv_source = function
        | `ImageData (x: (_) _ImageData_like) -> Obj.magic x
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `HTMLVideoElement (x: (_) _HTMLVideoElement_like) -> Obj.magic x
         in
      let conv_source = access_null conv_source in
      let source = conv_source source in
      let return = texSubImage2D ~target ~level ~xoffset ~yoffset ~format ~type_ ~source webGLRenderingContext in
      return
    
end
 module Location = struct
    
    
    external href : location:('own) _Location_like ->  string = "href" [@@bs.get] 
    external setHref : location:('own) _Location_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : location:('own) _Location_like ->  string = "origin" [@@bs.get] 
    external protocol : location:('own) _Location_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : location:('own) _Location_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external host : location:('own) _Location_like ->  string = "host" [@@bs.get] 
    external setHost : location:('own) _Location_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : location:('own) _Location_like ->  string = "hostname" [@@bs.get] 
    external setHostname : location:('own) _Location_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : location:('own) _Location_like ->  string = "port" [@@bs.get] 
    external setPort : location:('own) _Location_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : location:('own) _Location_like ->  string = "pathname" [@@bs.get] 
    external setPathname : location:('own) _Location_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : location:('own) _Location_like ->  string = "search" [@@bs.get] 
    external setSearch : location:('own) _Location_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : location:('own) _Location_like ->  string = "hash" [@@bs.get] 
    external setHash : location:('own) _Location_like -> hash:string ->  unit = "hash" [@@bs.set]
    external assign : url:string ->  unit = "assign" [@@bs.send.pipe: ('own) _Location_like] 
    external reload :  unit = "reload" [@@bs.send.pipe: ('own) _Location_like] 
    external replace : url:string ->  unit = "replace" [@@bs.send.pipe: ('own) _Location_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _Location_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Location) in
      (return:(_) _Location_like)
    
    let cast_to_Dom_location x =
      let return = Obj.magic (x:_Location) in
      (return:Dom.location)
    
    let cast_from_Dom_location x =
      let return = Obj.magic (x:Dom.location) in
      (return:_Location)
    
end
 module Body = struct
    
    
    external bodyUsed : body:('own) _Body_like ->  bool = "bodyUsed" [@@bs.get] 
    external blob :  _Blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) _Body_like] 
    external formData :  _FormData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) _Body_like] 
    external json :  'a69 Js.Promise.t = "json" [@@bs.send.pipe: ('own) _Body_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) _Body_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Body) in
      (return:(_) _Body_like)
    
end
 module History = struct
    
    
    external length : history:('own) _History_like ->  int = "length" [@@bs.get] 
    external back :  unit = "back" [@@bs.send.pipe: ('own) _History_like] 
    external forward :  unit = "forward" [@@bs.send.pipe: ('own) _History_like] 
    external go : ?delta:int Js.undefined ->  unit = "go" [@@bs.send.pipe: ('own) _History_like] 
    
    let downcast x =
      let return = Obj.magic (x:_History) in
      (return:(_) _History_like)
    
    let cast_to_Dom_history x =
      let return = Obj.magic (x:_History) in
      (return:Dom.history)
    
    let cast_from_Dom_history x =
      let return = Obj.magic (x:Dom.history) in
      (return:_History)
    
    let go ?delta history =
      let conv_delta = Js_undefined.from_opt in
      let delta = conv_delta delta in
      go ~delta history
    
end
 module NodeList = struct
    
    
    external length : nodeList:('own) _NodeList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _Node option = "item" [@@bs.send.pipe: ('own) _NodeList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_NodeList) in
      (return:(_) _NodeList_like)
    
    let cast_to_Dom_nodeList x =
      let return = Obj.magic (x:_NodeList) in
      (return:Dom.nodeList)
    
    let cast_from_Dom_nodeList x =
      let return = Obj.magic (x:Dom.nodeList) in
      (return:_NodeList)
    
end
 module BluetoothDeviceEventHandlers = struct
    
    
    external ongattserverdisconnected : bluetoothDeviceEventHandlers:('own) _BluetoothDeviceEventHandlers_like ->  (_Event -> 'a70 [@bs]) option = "ongattserverdisconnected" [@@bs.get] [@@bs.return null_to_opt]
    external setOngattserverdisconnected : bluetoothDeviceEventHandlers:('own) _BluetoothDeviceEventHandlers_like -> ongattserverdisconnected:(_Event -> 'a71 [@bs]) Js.null ->  unit = "ongattserverdisconnected" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothDeviceEventHandlers) in
      (return:(_) _BluetoothDeviceEventHandlers_like)
    
end
 module Screen = struct
    
    
    external colorDepth : screen:('own) _Screen_like ->  int = "colorDepth" [@@bs.get] 
    external pixelDepth : screen:('own) _Screen_like ->  int = "pixelDepth" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_Screen) in
      (return:(_) _Screen_like)
    
end
 module PluginArray = struct
    
    
    external length : pluginArray:('own) _PluginArray_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _Plugin option = "item" [@@bs.send.pipe: ('own) _PluginArray_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  _Plugin option = "namedItem" [@@bs.send.pipe: ('own) _PluginArray_like] [@@bs.return null_to_opt]
    external refresh : ?reload:Js.boolean Js.undefined ->  unit = "refresh" [@@bs.send.pipe: ('own) _PluginArray_like] 
    
    let downcast x =
      let return = Obj.magic (x:_PluginArray) in
      (return:(_) _PluginArray_like)
    
    let refresh ?reload pluginArray =
      let conv_reload = Js_undefined.from_opt in
      let reload = conv_reload reload in
      refresh ~reload pluginArray
    
end
 module BluetoothCharacteristicProperties = struct
    
    
    external broadcast : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "broadcast" [@@bs.get] 
    external read : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "read" [@@bs.get] 
    external writeWithoutResponse : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "writeWithoutResponse" [@@bs.get] 
    external write : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "write" [@@bs.get] 
    external notify : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "notify" [@@bs.get] 
    external indicate : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "indicate" [@@bs.get] 
    external authenticatedSignedWrites : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "authenticatedSignedWrites" [@@bs.get] 
    external reliableWrite : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "reliableWrite" [@@bs.get] 
    external writableAuxiliaries : bluetoothCharacteristicProperties:('own) _BluetoothCharacteristicProperties_like ->  bool = "writableAuxiliaries" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothCharacteristicProperties) in
      (return:(_) _BluetoothCharacteristicProperties_like)
    
end
 module DOMRectReadOnly = struct
    
    
    external x : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "x" [@@bs.get] 
    external y : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "y" [@@bs.get] 
    external width : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "width" [@@bs.get] 
    external height : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "height" [@@bs.get] 
    external top : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "top" [@@bs.get] 
    external right : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "right" [@@bs.get] 
    external bottom : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "bottom" [@@bs.get] 
    external left : dOMRectReadOnly:('own) _DOMRectReadOnly_like ->  float = "left" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMRectReadOnly) in
      (return:(_) _DOMRectReadOnly_like)
    
end
 module BluetoothRemoteGATTDescriptor = struct
    
    
    external characteristic : bluetoothRemoteGATTDescriptor:('own) _BluetoothRemoteGATTDescriptor_like ->  _BluetoothRemoteGATTCharacteristic = "characteristic" [@@bs.get] 
    external uuid : bluetoothRemoteGATTDescriptor:('own) _BluetoothRemoteGATTDescriptor_like ->  string = "uuid" [@@bs.get] 
    external value : bluetoothRemoteGATTDescriptor:('own) _BluetoothRemoteGATTDescriptor_like ->  string option = "value" [@@bs.get] [@@bs.return null_to_opt]
    external readValue :  string Js.Promise.t = "readValue" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTDescriptor_like] 
    external writeValue : value:int array ->  unit Js.Promise.t = "writeValue" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTDescriptor_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothRemoteGATTDescriptor) in
      (return:(_) _BluetoothRemoteGATTDescriptor_like)
    
end
 module ChildNode = struct
    
    
    external after : childNode:('own) _ChildNode_like ->  (('own) _ChildNode_like, unit, ('a72)) variadic_func = "after" [@@bs.get]
    external before : childNode:('own) _ChildNode_like ->  (('own) _ChildNode_like, unit, ('a73)) variadic_func = "before" [@@bs.get]
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) _ChildNode_like] 
    external replaceWith : childNode:('own) _ChildNode_like ->  (('own) _ChildNode_like, unit, ('a74)) variadic_func = "replaceWith" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_ChildNode) in
      (return:(_) _ChildNode_like)
    
    let after ~nodes childNode =
      let func = after childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let after ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes childNode in
      return
    
    let before ~nodes childNode =
      let func = before childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let before ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes childNode in
      return
    
    let replaceWith ~nodes childNode =
      let func = replaceWith childNode in
      let args = to_arg nodes in
      apply func childNode args
    
    let replaceWith ~nodes childNode =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes childNode in
      return
    
end
 module NonDocumentTypeChildNode = struct
    
    
    external previousElementSibling : nonDocumentTypeChildNode:('own) _NonDocumentTypeChildNode_like ->  _Element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : nonDocumentTypeChildNode:('own) _NonDocumentTypeChildNode_like ->  _Element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_NonDocumentTypeChildNode) in
      (return:(_) _NonDocumentTypeChildNode_like)
    
end
 module DOMParser = struct
    
    
    external parseFromString : str:string -> type_:string ->  _Document = "parseFromString" [@@bs.send.pipe: ('own) _DOMParser_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMParser) in
      (return:(_) _DOMParser_like)
    
    let parseFromString ~str ~type_ dOMParser =
      let conv_type = function
        | `text_html -> "text/html"
        | `text_xml -> "text/xml"
        | `application_xml -> "application/xml"
        | `application_xhtml_xml -> "application/xhtml+xml"
         in
      let type_ = conv_type type_ in
      let return = parseFromString ~str ~type_ dOMParser in
      return
    
end
 module URL = struct
    
    
    external href : uRL:('own) _URL_like ->  string = "href" [@@bs.get] 
    external setHref : uRL:('own) _URL_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : uRL:('own) _URL_like ->  string = "origin" [@@bs.get] 
    external protocol : uRL:('own) _URL_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : uRL:('own) _URL_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : uRL:('own) _URL_like ->  string = "username" [@@bs.get] 
    external setUsername : uRL:('own) _URL_like -> username:string ->  unit = "username" [@@bs.set]
    external password : uRL:('own) _URL_like ->  string = "password" [@@bs.get] 
    external setPassword : uRL:('own) _URL_like -> password:string ->  unit = "password" [@@bs.set]
    external host : uRL:('own) _URL_like ->  string = "host" [@@bs.get] 
    external setHost : uRL:('own) _URL_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : uRL:('own) _URL_like ->  string = "hostname" [@@bs.get] 
    external setHostname : uRL:('own) _URL_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : uRL:('own) _URL_like ->  string = "port" [@@bs.get] 
    external setPort : uRL:('own) _URL_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : uRL:('own) _URL_like ->  string = "pathname" [@@bs.get] 
    external setPathname : uRL:('own) _URL_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : uRL:('own) _URL_like ->  string = "search" [@@bs.get] 
    external setSearch : uRL:('own) _URL_like -> search:string ->  unit = "search" [@@bs.set]
    external searchParams : uRL:('own) _URL_like ->  _URLSearchParams = "searchParams" [@@bs.get] 
    external hash : uRL:('own) _URL_like ->  string = "hash" [@@bs.get] 
    external setHash : uRL:('own) _URL_like -> hash:string ->  unit = "hash" [@@bs.set]
    external createObjectURL : blob:(_) _Blob_like ->  string = "createObjectURL" [@@bs.send.pipe: ('own) _URL_like] 
    external revokeObjectURL : url:string ->  unit = "revokeObjectURL" [@@bs.send.pipe: ('own) _URL_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _URL_like] 
    
    let downcast x =
      let return = Obj.magic (x:_URL) in
      (return:(_) _URL_like)
    
end
 module ElementCSSInlineStyle = struct
    
    
    external style : elementCSSInlineStyle:('own) _ElementCSSInlineStyle_like ->  _CSSStyleDeclaration = "style" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ElementCSSInlineStyle) in
      (return:(_) _ElementCSSInlineStyle_like)
    
end
 module FileList = struct
    
    
    external length : fileList:('own) _FileList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _File option = "item" [@@bs.send.pipe: ('own) _FileList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_FileList) in
      (return:(_) _FileList_like)
    
end
 module WebGLObject = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLObject) in
      (return:(_) _WebGLObject_like)
    
end
 module BrowserElement = struct
    
    
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) _BrowserElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElement) in
      (return:(_) _BrowserElement_like)
    
    let reload ?hardReload browserElement =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload browserElement
    
end
 module BrowserElementCommon = struct
    
    
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) _BrowserElementCommon_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) _BrowserElementCommon_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementCommon) in
      (return:(_) _BrowserElementCommon_like)
    
end
 module BrowserElementPrivileged = struct
    
    
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) _BrowserElementPrivileged_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) _BrowserElementPrivileged_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) _BrowserElementPrivileged_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) _BrowserElementPrivileged_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementPrivileged) in
      (return:(_) _BrowserElementPrivileged_like)
    
    let reload ?hardReload browserElementPrivileged =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload browserElementPrivileged
    
end
 module WorkerNavigator = struct
    
    
    external language : workerNavigator:('own) _WorkerNavigator_like ->  string = "language" [@@bs.get] 
    external appCodeName : workerNavigator:('own) _WorkerNavigator_like ->  string = "appCodeName" [@@bs.get] 
    external appName : workerNavigator:('own) _WorkerNavigator_like ->  string = "appName" [@@bs.get] 
    external appVersion : workerNavigator:('own) _WorkerNavigator_like ->  string = "appVersion" [@@bs.get] 
    external platform : workerNavigator:('own) _WorkerNavigator_like ->  string = "platform" [@@bs.get] 
    external product : workerNavigator:('own) _WorkerNavigator_like ->  string = "product" [@@bs.get] 
    external userAgent : workerNavigator:('own) _WorkerNavigator_like ->  string = "userAgent" [@@bs.get] 
    external permissions : workerNavigator:('own) _WorkerNavigator_like ->  _Permissions = "permissions" [@@bs.get] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) _WorkerNavigator_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WorkerNavigator) in
      (return:(_) _WorkerNavigator_like)
    
end
 module StyleSheet = struct
    
    
    external type_ : styleSheet:('own) _StyleSheet_like ->  string = "type_" [@@bs.get] 
    external href : styleSheet:('own) _StyleSheet_like ->  string option = "href" [@@bs.get] [@@bs.return null_to_opt]
    external title : styleSheet:('own) _StyleSheet_like ->  string option = "title" [@@bs.get] [@@bs.return null_to_opt]
    external disabled : styleSheet:('own) _StyleSheet_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : styleSheet:('own) _StyleSheet_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_StyleSheet) in
      (return:(_) _StyleSheet_like)
    
end
 module LinkStyle = struct
    
    
    external sheet : linkStyle:('own) _LinkStyle_like ->  _StyleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_LinkStyle) in
      (return:(_) _LinkStyle_like)
    
end
 module HTMLCollection = struct
    
    
    external length : hTMLCollection:('own) _HTMLCollection_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _Element option = "item" [@@bs.send.pipe: ('own) _HTMLCollection_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  _Element option = "namedItem" [@@bs.send.pipe: ('own) _HTMLCollection_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLCollection) in
      (return:(_) _HTMLCollection_like)
    
    let cast_to_Dom_htmlCollection x =
      let return = Obj.magic (x:_HTMLCollection) in
      (return:Dom.htmlCollection)
    
    let cast_from_Dom_htmlCollection x =
      let return = Obj.magic (x:Dom.htmlCollection) in
      (return:_HTMLCollection)
    
end
 module PerformanceTiming = struct
    
    
    external navigationStart : performanceTiming:('own) _PerformanceTiming_like ->  int = "navigationStart" [@@bs.get] 
    external domLoading : performanceTiming:('own) _PerformanceTiming_like ->  int = "domLoading" [@@bs.get] 
    external domInteractive : performanceTiming:('own) _PerformanceTiming_like ->  int = "domInteractive" [@@bs.get] 
    external domContentLoadedEventStart : performanceTiming:('own) _PerformanceTiming_like ->  int = "domContentLoadedEventStart" [@@bs.get] 
    external domContentLoadedEventEnd : performanceTiming:('own) _PerformanceTiming_like ->  int = "domContentLoadedEventEnd" [@@bs.get] 
    external domComplete : performanceTiming:('own) _PerformanceTiming_like ->  int = "domComplete" [@@bs.get] 
    external loadEventStart : performanceTiming:('own) _PerformanceTiming_like ->  int = "loadEventStart" [@@bs.get] 
    external loadEventEnd : performanceTiming:('own) _PerformanceTiming_like ->  int = "loadEventEnd" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_PerformanceTiming) in
      (return:(_) _PerformanceTiming_like)
    
end
 module Touch = struct
    
    
    external identifier : touch:('own) _Touch_like ->  int = "identifier" [@@bs.get] 
    external target : touch:('own) _Touch_like ->  _EventTarget = "target" [@@bs.get] 
    external screenX : touch:('own) _Touch_like ->  float = "screenX" [@@bs.get] 
    external screenY : touch:('own) _Touch_like ->  float = "screenY" [@@bs.get] 
    external clientX : touch:('own) _Touch_like ->  float = "clientX" [@@bs.get] 
    external clientY : touch:('own) _Touch_like ->  float = "clientY" [@@bs.get] 
    external pageX : touch:('own) _Touch_like ->  float = "pageX" [@@bs.get] 
    external pageY : touch:('own) _Touch_like ->  float = "pageY" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_Touch) in
      (return:(_) _Touch_like)
    
end
 module NonElementParentNode = struct
    
    
    external getElementById : elementId:string ->  _Element option = "getElementById" [@@bs.send.pipe: ('own) _NonElementParentNode_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_NonElementParentNode) in
      (return:(_) _NonElementParentNode_like)
    
end
 module CSSRuleList = struct
    
    
    external length : cSSRuleList:('own) _CSSRuleList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _CSSRule option = "item" [@@bs.send.pipe: ('own) _CSSRuleList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_CSSRuleList) in
      (return:(_) _CSSRuleList_like)
    
end
 module DissimilarOriginLocation = struct
    
    
    external href : dissimilarOriginLocation:('own) _DissimilarOriginLocation_like ->  string = "href" [@@bs.get] 
    external setHref : dissimilarOriginLocation:('own) _DissimilarOriginLocation_like -> href:string ->  unit = "href" [@@bs.set]
    external assign : url:string ->  unit = "assign" [@@bs.send.pipe: ('own) _DissimilarOriginLocation_like] 
    external reload :  unit = "reload" [@@bs.send.pipe: ('own) _DissimilarOriginLocation_like] 
    external replace : url:string ->  unit = "replace" [@@bs.send.pipe: ('own) _DissimilarOriginLocation_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _DissimilarOriginLocation_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DissimilarOriginLocation) in
      (return:(_) _DissimilarOriginLocation_like)
    
end
 module DOMImplementation = struct
    
    
    external createDocument : namespace:string Js.null -> qualifiedName:string -> ?doctype:(_) _DocumentType_like Js.null Js.undefined ->  _XMLDocument = "createDocument" [@@bs.send.pipe: ('own) _DOMImplementation_like] 
    external createDocumentType : qualifiedName:string -> publicId:string -> systemId:string ->  _DocumentType = "createDocumentType" [@@bs.send.pipe: ('own) _DOMImplementation_like] 
    external createHTMLDocument : ?title:string Js.undefined ->  _Document = "createHTMLDocument" [@@bs.send.pipe: ('own) _DOMImplementation_like] 
    external hasFeature :  bool = "hasFeature" [@@bs.send.pipe: ('own) _DOMImplementation_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMImplementation) in
      (return:(_) _DOMImplementation_like)
    
    let cast_to_Dom_domImplementation x =
      let return = Obj.magic (x:_DOMImplementation) in
      (return:Dom.domImplementation)
    
    let cast_from_Dom_domImplementation x =
      let return = Obj.magic (x:Dom.domImplementation) in
      (return:_DOMImplementation)
    
    let createDocument ~namespace ~qualifiedName ?doctype dOMImplementation =
      let conv_doctype = Js_undefined.from_opt in
      let doctype = conv_doctype doctype in
      createDocument ~namespace ~qualifiedName ~doctype dOMImplementation
    
    let createHTMLDocument ?title dOMImplementation =
      let conv_title = Js_undefined.from_opt in
      let title = conv_title title in
      createHTMLDocument ~title dOMImplementation
    
end
 module TestBinding = struct
    
    
    external booleanAttribute : testBinding:('own) _TestBinding_like ->  bool = "booleanAttribute" [@@bs.get] 
    external setBooleanAttribute : testBinding:('own) _TestBinding_like -> booleanAttribute:Js.boolean ->  unit = "booleanAttribute" [@@bs.set]
    external byteAttribute : testBinding:('own) _TestBinding_like ->  int = "byteAttribute" [@@bs.get] 
    external setByteAttribute : testBinding:('own) _TestBinding_like -> byteAttribute:int ->  unit = "byteAttribute" [@@bs.set]
    external octetAttribute : testBinding:('own) _TestBinding_like ->  int = "octetAttribute" [@@bs.get] 
    external setOctetAttribute : testBinding:('own) _TestBinding_like -> octetAttribute:int ->  unit = "octetAttribute" [@@bs.set]
    external shortAttribute : testBinding:('own) _TestBinding_like ->  int = "shortAttribute" [@@bs.get] 
    external setShortAttribute : testBinding:('own) _TestBinding_like -> shortAttribute:int ->  unit = "shortAttribute" [@@bs.set]
    external unsignedShortAttribute : testBinding:('own) _TestBinding_like ->  int = "unsignedShortAttribute" [@@bs.get] 
    external setUnsignedShortAttribute : testBinding:('own) _TestBinding_like -> unsignedShortAttribute:int ->  unit = "unsignedShortAttribute" [@@bs.set]
    external longAttribute : testBinding:('own) _TestBinding_like ->  int = "longAttribute" [@@bs.get] 
    external setLongAttribute : testBinding:('own) _TestBinding_like -> longAttribute:int ->  unit = "longAttribute" [@@bs.set]
    external unsignedLongAttribute : testBinding:('own) _TestBinding_like ->  int = "unsignedLongAttribute" [@@bs.get] 
    external setUnsignedLongAttribute : testBinding:('own) _TestBinding_like -> unsignedLongAttribute:int ->  unit = "unsignedLongAttribute" [@@bs.set]
    external longLongAttribute : testBinding:('own) _TestBinding_like ->  int = "longLongAttribute" [@@bs.get] 
    external setLongLongAttribute : testBinding:('own) _TestBinding_like -> longLongAttribute:int ->  unit = "longLongAttribute" [@@bs.set]
    external unsignedLongLongAttribute : testBinding:('own) _TestBinding_like ->  int = "unsignedLongLongAttribute" [@@bs.get] 
    external setUnsignedLongLongAttribute : testBinding:('own) _TestBinding_like -> unsignedLongLongAttribute:int ->  unit = "unsignedLongLongAttribute" [@@bs.set]
    external unrestrictedFloatAttribute : testBinding:('own) _TestBinding_like ->  float = "unrestrictedFloatAttribute" [@@bs.get] 
    external setUnrestrictedFloatAttribute : testBinding:('own) _TestBinding_like -> unrestrictedFloatAttribute:float ->  unit = "unrestrictedFloatAttribute" [@@bs.set]
    external floatAttribute : testBinding:('own) _TestBinding_like ->  float = "floatAttribute" [@@bs.get] 
    external setFloatAttribute : testBinding:('own) _TestBinding_like -> floatAttribute:float ->  unit = "floatAttribute" [@@bs.set]
    external unrestrictedDoubleAttribute : testBinding:('own) _TestBinding_like ->  float = "unrestrictedDoubleAttribute" [@@bs.get] 
    external setUnrestrictedDoubleAttribute : testBinding:('own) _TestBinding_like -> unrestrictedDoubleAttribute:float ->  unit = "unrestrictedDoubleAttribute" [@@bs.set]
    external doubleAttribute : testBinding:('own) _TestBinding_like ->  float = "doubleAttribute" [@@bs.get] 
    external setDoubleAttribute : testBinding:('own) _TestBinding_like -> doubleAttribute:float ->  unit = "doubleAttribute" [@@bs.set]
    external stringAttribute : testBinding:('own) _TestBinding_like ->  string = "stringAttribute" [@@bs.get] 
    external setStringAttribute : testBinding:('own) _TestBinding_like -> stringAttribute:string ->  unit = "stringAttribute" [@@bs.set]
    external usvstringAttribute : testBinding:('own) _TestBinding_like ->  string = "usvstringAttribute" [@@bs.get] 
    external setUsvstringAttribute : testBinding:('own) _TestBinding_like -> usvstringAttribute:string ->  unit = "usvstringAttribute" [@@bs.set]
    external byteStringAttribute : testBinding:('own) _TestBinding_like ->  string = "byteStringAttribute" [@@bs.get] 
    external setByteStringAttribute : testBinding:('own) _TestBinding_like -> byteStringAttribute:string ->  unit = "byteStringAttribute" [@@bs.set]
    external enumAttribute : testBinding:('own) _TestBinding_like ->  string = "enumAttribute" [@@bs.get] 
    external setEnumAttribute : testBinding:('own) _TestBinding_like -> enumAttribute:string ->  unit = "enumAttribute" [@@bs.set]
    external interfaceAttribute : testBinding:('own) _TestBinding_like ->  _Blob = "interfaceAttribute" [@@bs.get] 
    external setInterfaceAttribute : testBinding:('own) _TestBinding_like -> interfaceAttribute:_Blob ->  unit = "interfaceAttribute" [@@bs.set]
    external unionAttribute : testBinding:('own) _TestBinding_like ->  'a75 = "unionAttribute" [@@bs.get] 
    external setUnionAttribute : testBinding:('own) _TestBinding_like -> unionAttribute:'a76 ->  unit = "unionAttribute" [@@bs.set]
    external union2Attribute : testBinding:('own) _TestBinding_like ->  'a77 = "union2Attribute" [@@bs.get] 
    external setUnion2Attribute : testBinding:('own) _TestBinding_like -> union2Attribute:'a78 ->  unit = "union2Attribute" [@@bs.set]
    external union3Attribute : testBinding:('own) _TestBinding_like ->  'a79 = "union3Attribute" [@@bs.get] 
    external setUnion3Attribute : testBinding:('own) _TestBinding_like -> union3Attribute:'a80 ->  unit = "union3Attribute" [@@bs.set]
    external union4Attribute : testBinding:('own) _TestBinding_like ->  'a81 = "union4Attribute" [@@bs.get] 
    external setUnion4Attribute : testBinding:('own) _TestBinding_like -> union4Attribute:'a82 ->  unit = "union4Attribute" [@@bs.set]
    external union5Attribute : testBinding:('own) _TestBinding_like ->  'a83 = "union5Attribute" [@@bs.get] 
    external setUnion5Attribute : testBinding:('own) _TestBinding_like -> union5Attribute:'a84 ->  unit = "union5Attribute" [@@bs.set]
    external union6Attribute : testBinding:('own) _TestBinding_like ->  'a85 = "union6Attribute" [@@bs.get] 
    external setUnion6Attribute : testBinding:('own) _TestBinding_like -> union6Attribute:'a86 ->  unit = "union6Attribute" [@@bs.set]
    external union7Attribute : testBinding:('own) _TestBinding_like ->  'a87 = "union7Attribute" [@@bs.get] 
    external setUnion7Attribute : testBinding:('own) _TestBinding_like -> union7Attribute:'a88 ->  unit = "union7Attribute" [@@bs.set]
    external union8Attribute : testBinding:('own) _TestBinding_like ->  'a89 = "union8Attribute" [@@bs.get] 
    external setUnion8Attribute : testBinding:('own) _TestBinding_like -> union8Attribute:'a90 ->  unit = "union8Attribute" [@@bs.set]
    external union9Attribute : testBinding:('own) _TestBinding_like ->  'a91 = "union9Attribute" [@@bs.get] 
    external setUnion9Attribute : testBinding:('own) _TestBinding_like -> union9Attribute:'a92 ->  unit = "union9Attribute" [@@bs.set]
    external arrayAttribute : testBinding:('own) _TestBinding_like ->  Js_typed_array.Uint8ClampedArray.t = "arrayAttribute" [@@bs.get] 
    external anyAttribute : testBinding:('own) _TestBinding_like ->  'a93 = "anyAttribute" [@@bs.get] 
    external setAnyAttribute : testBinding:('own) _TestBinding_like -> anyAttribute:'a94 ->  unit = "anyAttribute" [@@bs.set]
    external objectAttribute : testBinding:('own) _TestBinding_like ->  'a95 = "objectAttribute" [@@bs.get] 
    external setObjectAttribute : testBinding:('own) _TestBinding_like -> objectAttribute:'a96 ->  unit = "objectAttribute" [@@bs.set]
    external booleanAttributeNullable : testBinding:('own) _TestBinding_like ->  Js.boolean option = "booleanAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setBooleanAttributeNullable : testBinding:('own) _TestBinding_like -> booleanAttributeNullable:Js.boolean Js.null ->  unit = "booleanAttributeNullable" [@@bs.set]
    external byteAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "byteAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setByteAttributeNullable : testBinding:('own) _TestBinding_like -> byteAttributeNullable:int Js.null ->  unit = "byteAttributeNullable" [@@bs.set]
    external octetAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "octetAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setOctetAttributeNullable : testBinding:('own) _TestBinding_like -> octetAttributeNullable:int Js.null ->  unit = "octetAttributeNullable" [@@bs.set]
    external shortAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "shortAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setShortAttributeNullable : testBinding:('own) _TestBinding_like -> shortAttributeNullable:int Js.null ->  unit = "shortAttributeNullable" [@@bs.set]
    external unsignedShortAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "unsignedShortAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedShortAttributeNullable : testBinding:('own) _TestBinding_like -> unsignedShortAttributeNullable:int Js.null ->  unit = "unsignedShortAttributeNullable" [@@bs.set]
    external longAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "longAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setLongAttributeNullable : testBinding:('own) _TestBinding_like -> longAttributeNullable:int Js.null ->  unit = "longAttributeNullable" [@@bs.set]
    external unsignedLongAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "unsignedLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedLongAttributeNullable : testBinding:('own) _TestBinding_like -> unsignedLongAttributeNullable:int Js.null ->  unit = "unsignedLongAttributeNullable" [@@bs.set]
    external longLongAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "longLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setLongLongAttributeNullable : testBinding:('own) _TestBinding_like -> longLongAttributeNullable:int Js.null ->  unit = "longLongAttributeNullable" [@@bs.set]
    external unsignedLongLongAttributeNullable : testBinding:('own) _TestBinding_like ->  int option = "unsignedLongLongAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnsignedLongLongAttributeNullable : testBinding:('own) _TestBinding_like -> unsignedLongLongAttributeNullable:int Js.null ->  unit = "unsignedLongLongAttributeNullable" [@@bs.set]
    external unrestrictedFloatAttributeNullable : testBinding:('own) _TestBinding_like ->  float option = "unrestrictedFloatAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnrestrictedFloatAttributeNullable : testBinding:('own) _TestBinding_like -> unrestrictedFloatAttributeNullable:float Js.null ->  unit = "unrestrictedFloatAttributeNullable" [@@bs.set]
    external floatAttributeNullable : testBinding:('own) _TestBinding_like ->  float option = "floatAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setFloatAttributeNullable : testBinding:('own) _TestBinding_like -> floatAttributeNullable:float Js.null ->  unit = "floatAttributeNullable" [@@bs.set]
    external unrestrictedDoubleAttributeNullable : testBinding:('own) _TestBinding_like ->  float option = "unrestrictedDoubleAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUnrestrictedDoubleAttributeNullable : testBinding:('own) _TestBinding_like -> unrestrictedDoubleAttributeNullable:float Js.null ->  unit = "unrestrictedDoubleAttributeNullable" [@@bs.set]
    external doubleAttributeNullable : testBinding:('own) _TestBinding_like ->  float option = "doubleAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setDoubleAttributeNullable : testBinding:('own) _TestBinding_like -> doubleAttributeNullable:float Js.null ->  unit = "doubleAttributeNullable" [@@bs.set]
    external stringAttributeNullable : testBinding:('own) _TestBinding_like ->  string option = "stringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setStringAttributeNullable : testBinding:('own) _TestBinding_like -> stringAttributeNullable:string Js.null ->  unit = "stringAttributeNullable" [@@bs.set]
    external usvstringAttributeNullable : testBinding:('own) _TestBinding_like ->  string option = "usvstringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setUsvstringAttributeNullable : testBinding:('own) _TestBinding_like -> usvstringAttributeNullable:string Js.null ->  unit = "usvstringAttributeNullable" [@@bs.set]
    external byteStringAttributeNullable : testBinding:('own) _TestBinding_like ->  string option = "byteStringAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setByteStringAttributeNullable : testBinding:('own) _TestBinding_like -> byteStringAttributeNullable:string Js.null ->  unit = "byteStringAttributeNullable" [@@bs.set]
    external enumAttributeNullable : testBinding:('own) _TestBinding_like ->  string option = "enumAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external interfaceAttributeNullable : testBinding:('own) _TestBinding_like ->  _Blob option = "interfaceAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setInterfaceAttributeNullable : testBinding:('own) _TestBinding_like -> interfaceAttributeNullable:_Blob Js.null ->  unit = "interfaceAttributeNullable" [@@bs.set]
    external interfaceAttributeWeak : testBinding:('own) _TestBinding_like ->  _URL option = "interfaceAttributeWeak" [@@bs.get] [@@bs.return null_to_opt]
    external setInterfaceAttributeWeak : testBinding:('own) _TestBinding_like -> interfaceAttributeWeak:_URL Js.null ->  unit = "interfaceAttributeWeak" [@@bs.set]
    external objectAttributeNullable : testBinding:('own) _TestBinding_like ->  'a97 option = "objectAttributeNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setObjectAttributeNullable : testBinding:('own) _TestBinding_like -> objectAttributeNullable:'a98 Js.null ->  unit = "objectAttributeNullable" [@@bs.set]
    external unionAttributeNullable : testBinding:('own) _TestBinding_like ->  'a99 = "unionAttributeNullable" [@@bs.get] 
    external setUnionAttributeNullable : testBinding:('own) _TestBinding_like -> unionAttributeNullable:'a100 ->  unit = "unionAttributeNullable" [@@bs.set]
    external union2AttributeNullable : testBinding:('own) _TestBinding_like ->  'a101 = "union2AttributeNullable" [@@bs.get] 
    external setUnion2AttributeNullable : testBinding:('own) _TestBinding_like -> union2AttributeNullable:'a102 ->  unit = "union2AttributeNullable" [@@bs.set]
    external union3AttributeNullable : testBinding:('own) _TestBinding_like ->  'a103 = "union3AttributeNullable" [@@bs.get] 
    external setUnion3AttributeNullable : testBinding:('own) _TestBinding_like -> union3AttributeNullable:'a104 ->  unit = "union3AttributeNullable" [@@bs.set]
    external union4AttributeNullable : testBinding:('own) _TestBinding_like ->  'a105 = "union4AttributeNullable" [@@bs.get] 
    external setUnion4AttributeNullable : testBinding:('own) _TestBinding_like -> union4AttributeNullable:'a106 ->  unit = "union4AttributeNullable" [@@bs.set]
    external union5AttributeNullable : testBinding:('own) _TestBinding_like ->  'a107 = "union5AttributeNullable" [@@bs.get] 
    external setUnion5AttributeNullable : testBinding:('own) _TestBinding_like -> union5AttributeNullable:'a108 ->  unit = "union5AttributeNullable" [@@bs.set]
    external union6AttributeNullable : testBinding:('own) _TestBinding_like ->  'a109 = "union6AttributeNullable" [@@bs.get] 
    external setUnion6AttributeNullable : testBinding:('own) _TestBinding_like -> union6AttributeNullable:'a110 ->  unit = "union6AttributeNullable" [@@bs.set]
    external attrToBinaryRename : testBinding:('own) _TestBinding_like ->  string = "attrToBinaryRename" [@@bs.get] 
    external setAttrToBinaryRename : testBinding:('own) _TestBinding_like -> attrToBinaryRename:string ->  unit = "attrToBinaryRename" [@@bs.set]
    external forwardedAttribute : testBinding:('own) _TestBinding_like ->  _TestBinding = "forwardedAttribute" [@@bs.get] 
    external booleanAttributeStatic : testBinding:('own) _TestBinding_like ->  bool = "booleanAttributeStatic" [@@bs.get] 
    external setBooleanAttributeStatic : testBinding:('own) _TestBinding_like -> booleanAttributeStatic:Js.boolean ->  unit = "booleanAttributeStatic" [@@bs.set]
    external prefControlledAttributeDisabled : testBinding:('own) _TestBinding_like ->  bool = "prefControlledAttributeDisabled" [@@bs.get] 
    external prefControlledStaticAttributeDisabled : testBinding:('own) _TestBinding_like ->  bool = "prefControlledStaticAttributeDisabled" [@@bs.get] 
    external prefControlledAttributeEnabled : testBinding:('own) _TestBinding_like ->  bool = "prefControlledAttributeEnabled" [@@bs.get] 
    external prefControlledStaticAttributeEnabled : testBinding:('own) _TestBinding_like ->  bool = "prefControlledStaticAttributeEnabled" [@@bs.get] 
    external funcControlledAttributeDisabled : testBinding:('own) _TestBinding_like ->  bool = "funcControlledAttributeDisabled" [@@bs.get] 
    external funcControlledStaticAttributeDisabled : testBinding:('own) _TestBinding_like ->  bool = "funcControlledStaticAttributeDisabled" [@@bs.get] 
    external funcControlledAttributeEnabled : testBinding:('own) _TestBinding_like ->  bool = "funcControlledAttributeEnabled" [@@bs.get] 
    external funcControlledStaticAttributeEnabled : testBinding:('own) _TestBinding_like ->  bool = "funcControlledStaticAttributeEnabled" [@@bs.get] 
    external promiseAttribute : testBinding:('own) _TestBinding_like ->  Js.boolean Js.Promise.t = "promiseAttribute" [@@bs.get] 
    external booleanMozPreference : pref_name:string ->  bool = "BooleanMozPreference" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external stringMozPreference : pref_name:string ->  string = "StringMozPreference" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external acceptPromise : string:string Js.Promise.t ->  unit = "acceptPromise" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external advanceClock : millis:int -> ?forceLayoutTick:Js.boolean Js.undefined ->  unit = "advanceClock" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external crashHard :  unit = "crashHard" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external dictMatchesPassedValues : arg:(_) _TestDictionary_like ->  bool = "dictMatchesPassedValues" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external entryGlobal :  _GlobalScope = "entryGlobal" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external funcControlledMethodDisabled :  unit = "funcControlledMethodDisabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external funcControlledMethodEnabled :  unit = "funcControlledMethodEnabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external funcControlledStaticMethodDisabled :  unit = "funcControlledStaticMethodDisabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external funcControlledStaticMethodEnabled :  unit = "funcControlledStaticMethodEnabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external incumbentGlobal :  _GlobalScope = "incumbentGlobal" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external methToBinaryRename :  unit = "methToBinaryRename" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external panic :  unit = "panic" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passAny : arg:'a111 ->  unit = "passAny" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passBoolean : arg:Js.boolean ->  unit = "passBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passByte : arg:int ->  unit = "passByte" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passByteString : arg:string ->  unit = "passByteString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passByteStringMozMap : arg:'a112 ->  unit = "passByteStringMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passCallbackFunction : fun_:('a113, 'a114, _) variadic_callback0 ->  unit = "passCallbackFunction" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passCallbackInterface : listener:(_) _EventListener_like ->  unit = "passCallbackInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passCastableObjectMozMap : arg:'a115 ->  unit = "passCastableObjectMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passCastableObjectNullableMozMap : arg:'a116 Js.null ->  unit = "passCastableObjectNullableMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passDouble : arg:float ->  unit = "passDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passEnum : arg:string ->  unit = "passEnum" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passFloat : arg:float ->  unit = "passFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passInterface : arg:(_) _Blob_like ->  unit = "passInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passInterfaceSequence : seq:(_) _Blob_like array ->  unit = "passInterfaceSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passLong : arg:int ->  unit = "passLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passLongLong : arg:int ->  unit = "passLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMap : arg:'a117 ->  unit = "passMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMapOfMozMaps : arg:'a118 ->  unit = "passMozMapOfMozMaps" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMapOfNullableInts : arg:'a119 ->  unit = "passMozMapOfNullableInts" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMapUnion : init:'a120 ->  unit = "passMozMapUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMapUnion2 : init:'a121 ->  unit = "passMozMapUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passMozMapUnion3 : init:'a122 ->  unit = "passMozMapUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableBoolean : arg:Js.boolean Js.null ->  unit = "passNullableBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableByte : arg:int Js.null ->  unit = "passNullableByte" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableByteString : arg:string Js.null ->  unit = "passNullableByteString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableCallbackFunction : fun_:('a123, 'a124, _) variadic_callback0 Js.null ->  unit = "passNullableCallbackFunction" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableCallbackInterface : listener:(_) _EventListener_like Js.null ->  unit = "passNullableCallbackInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableCastableObjectMozMap : arg:'a125 ->  unit = "passNullableCastableObjectMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableCastableObjectNullableMozMap : arg:'a126 Js.null ->  unit = "passNullableCastableObjectNullableMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableDouble : arg:float Js.null ->  unit = "passNullableDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableFloat : arg:float Js.null ->  unit = "passNullableFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableInterface : arg:(_) _Blob_like Js.null ->  unit = "passNullableInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableLong : arg:int Js.null ->  unit = "passNullableLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableLongLong : arg:int Js.null ->  unit = "passNullableLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableMozMap : arg:'a127 Js.null ->  unit = "passNullableMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableObject : arg:'a128 Js.null ->  unit = "passNullableObject" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableOctet : arg:int Js.null ->  unit = "passNullableOctet" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableSequence : seq:int array Js.null ->  unit = "passNullableSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableShort : arg:int Js.null ->  unit = "passNullableShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableString : arg:string Js.null ->  unit = "passNullableString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion : arg:'a129 ->  unit = "passNullableUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion2 : data:'a130 ->  unit = "passNullableUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion3 : data:'a131 ->  unit = "passNullableUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion4 : bool:'a132 ->  unit = "passNullableUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion5 : arg:'a133 ->  unit = "passNullableUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnion6 : arg:'a134 ->  unit = "passNullableUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnrestrictedDouble : arg:float Js.null ->  unit = "passNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnrestrictedFloat : arg:float Js.null ->  unit = "passNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnsignedLong : arg:int Js.null ->  unit = "passNullableUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnsignedLongLong : arg:int Js.null ->  unit = "passNullableUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUnsignedShort : arg:int Js.null ->  unit = "passNullableUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passNullableUsvstring : arg:string Js.null ->  unit = "passNullableUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passObject : arg:'a135 ->  unit = "passObject" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOctet : arg:int ->  unit = "passOctet" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalAny : ?arg:'a136 Js.undefined ->  unit = "passOptionalAny" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalAnyWithDefault : ?arg:'a137 Js.undefined ->  unit = "passOptionalAnyWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalBoolean : ?arg:Js.boolean Js.undefined ->  unit = "passOptionalBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalBooleanWithDefault : ?arg:Js.boolean Js.undefined ->  unit = "passOptionalBooleanWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalByte : ?arg:int Js.undefined ->  unit = "passOptionalByte" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalByteString : ?arg:string Js.undefined ->  unit = "passOptionalByteString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalByteWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalByteWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalBytestringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalBytestringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalCallbackFunction : ?fun_:('a138, 'a139, _) variadic_callback0 Js.undefined ->  unit = "passOptionalCallbackFunction" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalCallbackInterface : ?listener:(_) _EventListener_like Js.undefined ->  unit = "passOptionalCallbackInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalDouble : ?arg:float Js.undefined ->  unit = "passOptionalDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalEnum : ?arg:string Js.undefined ->  unit = "passOptionalEnum" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalEnumWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalEnumWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalFloat : ?arg:float Js.undefined ->  unit = "passOptionalFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalInterface : ?arg:(_) _Blob_like Js.undefined ->  unit = "passOptionalInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalLong : ?arg:int Js.undefined ->  unit = "passOptionalLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalLongLong : ?arg:int Js.undefined ->  unit = "passOptionalLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalLongLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalLongLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalMozMap : ?arg:'a140 Js.undefined ->  unit = "passOptionalMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalMozMapOfNullableInts : ?arg:'a141 Js.undefined ->  unit = "passOptionalMozMapOfNullableInts" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableBoolean : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableBooleanWithDefault : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBooleanWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableBooleanWithNonNullDefault : ?arg:Js.boolean Js.null Js.undefined ->  unit = "passOptionalNullableBooleanWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableByte : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByte" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableByteString : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableByteString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableByteStringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableByteStringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableByteWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByteWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableByteWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableByteWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableCallbackFunction : ?fun_:('a142, 'a143, _) variadic_callback0 Js.null Js.undefined ->  unit = "passOptionalNullableCallbackFunction" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableCallbackInterface : ?listener:(_) _EventListener_like Js.null Js.undefined ->  unit = "passOptionalNullableCallbackInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableCallbackInterfaceWithDefault : ?listener:(_) _EventListener_like Js.null Js.undefined ->  unit = "passOptionalNullableCallbackInterfaceWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableDouble : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableFloat : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableInterface : ?arg:(_) _Blob_like Js.null Js.undefined ->  unit = "passOptionalNullableInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableInterfaceWithDefault : ?arg:(_) _Blob_like Js.null Js.undefined ->  unit = "passOptionalNullableInterfaceWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLongLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLongLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLongLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongLongWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableLongWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableMozMap : ?arg:'a144 Js.null Js.undefined ->  unit = "passOptionalNullableMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableMozMapOfNullableInts : ?arg:'a145 Js.null Js.undefined ->  unit = "passOptionalNullableMozMapOfNullableInts" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableMozMapWithDefaultValue : ?arg:'a146 Js.null Js.undefined ->  unit = "passOptionalNullableMozMapWithDefaultValue" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableObject : ?arg:'a147 Js.null Js.undefined ->  unit = "passOptionalNullableObject" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableObjectWithDefault : ?arg:'a148 Js.null Js.undefined ->  unit = "passOptionalNullableObjectWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableOctet : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctet" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableOctetWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctetWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableOctetWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableOctetWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableSequence : ?seq:int array Js.null Js.undefined ->  unit = "passOptionalNullableSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableShort : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableShortWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShortWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableShortWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableShortWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableString : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableStringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableStringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableStringWithNonNullDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableStringWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion : ?arg:'a149 Js.undefined ->  unit = "passOptionalNullableUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion2 : ?data:'a150 Js.undefined ->  unit = "passOptionalNullableUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion2WithDefault : ?data:'a151 Js.undefined ->  unit = "passOptionalNullableUnion2WithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion3 : ?arg:'a152 Js.undefined ->  unit = "passOptionalNullableUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion4 : ?data:'a153 Js.undefined ->  unit = "passOptionalNullableUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion5 : ?bool:'a154 Js.undefined ->  unit = "passOptionalNullableUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnion6 : ?arg:'a155 Js.undefined ->  unit = "passOptionalNullableUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnionWithDefault : ?arg:'a156 Js.undefined ->  unit = "passOptionalNullableUnionWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnrestrictedDouble : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnrestrictedFloat : ?arg:float Js.null Js.undefined ->  unit = "passOptionalNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLongLong : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLongLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLongLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongLongWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLongWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedLongWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedLongWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedShort : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedShortWithDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShortWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUnsignedShortWithNonNullDefault : ?arg:int Js.null Js.undefined ->  unit = "passOptionalNullableUnsignedShortWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUsvstring : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUsvstringWithDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalNullableUsvstringWithNonNullDefault : ?arg:string Js.null Js.undefined ->  unit = "passOptionalNullableUsvstringWithNonNullDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalObject : ?arg:'a157 Js.undefined ->  unit = "passOptionalObject" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalObjectMozMap : ?arg:'a158 Js.undefined ->  unit = "passOptionalObjectMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalOctet : ?arg:int Js.undefined ->  unit = "passOptionalOctet" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalOctetWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalOctetWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalSequence : ?seq:int array Js.undefined ->  unit = "passOptionalSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalShort : ?arg:int Js.undefined ->  unit = "passOptionalShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalShortWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalShortWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalString : ?arg:string Js.undefined ->  unit = "passOptionalString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalStringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalStringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion : ?arg:'a159 Js.undefined ->  unit = "passOptionalUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion2 : ?data:'a160 Js.undefined ->  unit = "passOptionalUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion3 : ?arg:'a161 Js.undefined ->  unit = "passOptionalUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion4 : ?data:'a162 Js.undefined ->  unit = "passOptionalUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion5 : ?bool:'a163 Js.undefined ->  unit = "passOptionalUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnion6 : ?arg:'a164 Js.undefined ->  unit = "passOptionalUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnrestrictedDouble : ?arg:float Js.undefined ->  unit = "passOptionalUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnrestrictedFloat : ?arg:float Js.undefined ->  unit = "passOptionalUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedLong : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedLongLong : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedLongLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedLongWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedLongWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedShort : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUnsignedShortWithDefault : ?arg:int Js.undefined ->  unit = "passOptionalUnsignedShortWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUsvstring : ?arg:string Js.undefined ->  unit = "passOptionalUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passOptionalUsvstringWithDefault : ?arg:string Js.undefined ->  unit = "passOptionalUsvstringWithDefault" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passSequence : seq:int array ->  unit = "passSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passSequenceSequence : seq:int array array ->  unit = "passSequenceSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passShort : arg:int ->  unit = "passShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passString : arg:string ->  unit = "passString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passStringMozMap : arg:'a165 ->  unit = "passStringMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passStringSequence : seq:string array ->  unit = "passStringSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion : arg:'a166 ->  unit = "passUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion10 : arg:'a167 ->  unit = "passUnion10" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion2 : data:'a168 ->  unit = "passUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion3 : data:'a169 ->  unit = "passUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion4 : seq:'a170 ->  unit = "passUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion5 : data:'a171 ->  unit = "passUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion6 : bool:'a172 ->  unit = "passUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion7 : arg:'a173 ->  unit = "passUnion7" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion8 : arg:'a174 ->  unit = "passUnion8" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnion9 : arg:'a175 ->  unit = "passUnion9" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnionSequenceSequence : seq:'a176 ->  unit = "passUnionSequenceSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnionWithTypedef : arg:'a177 ->  unit = "passUnionWithTypedef" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnionWithTypedef2 : arg:'a178 ->  unit = "passUnionWithTypedef2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnrestrictedDouble : arg:float ->  unit = "passUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnrestrictedFloat : arg:float ->  unit = "passUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnsignedLong : arg:int ->  unit = "passUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnsignedLongLong : arg:int ->  unit = "passUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUnsignedShort : arg:int ->  unit = "passUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passUsvstring : arg:string ->  unit = "passUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external passVariadicAny : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a179)) variadic_func = "passVariadicAny" [@@bs.get]
    external passVariadicBoolean : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (Js.boolean)) variadic_func = "passVariadicBoolean" [@@bs.get]
    external passVariadicBooleanAndDefault : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (Js.boolean Js.undefined*(Js.boolean))) variadic_func = "passVariadicBooleanAndDefault" [@@bs.get]
    external passVariadicByte : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicByte" [@@bs.get]
    external passVariadicByteString : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (string)) variadic_func = "passVariadicByteString" [@@bs.get]
    external passVariadicDouble : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (float)) variadic_func = "passVariadicDouble" [@@bs.get]
    external passVariadicEnum : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (string)) variadic_func = "passVariadicEnum" [@@bs.get]
    external passVariadicFloat : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (float)) variadic_func = "passVariadicFloat" [@@bs.get]
    external passVariadicInterface : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ((_) _Blob_like)) variadic_func = "passVariadicInterface" [@@bs.get]
    external passVariadicLong : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicLong" [@@bs.get]
    external passVariadicLongLong : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicLongLong" [@@bs.get]
    external passVariadicObject : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a180)) variadic_func = "passVariadicObject" [@@bs.get]
    external passVariadicOctet : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicOctet" [@@bs.get]
    external passVariadicShort : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicShort" [@@bs.get]
    external passVariadicString : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (string)) variadic_func = "passVariadicString" [@@bs.get]
    external passVariadicUnion : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a181)) variadic_func = "passVariadicUnion" [@@bs.get]
    external passVariadicUnion2 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a182)) variadic_func = "passVariadicUnion2" [@@bs.get]
    external passVariadicUnion3 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a183)) variadic_func = "passVariadicUnion3" [@@bs.get]
    external passVariadicUnion4 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a184)) variadic_func = "passVariadicUnion4" [@@bs.get]
    external passVariadicUnion5 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a185)) variadic_func = "passVariadicUnion5" [@@bs.get]
    external passVariadicUnion6 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a186)) variadic_func = "passVariadicUnion6" [@@bs.get]
    external passVariadicUnion7 : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, ('a187)) variadic_func = "passVariadicUnion7" [@@bs.get]
    external passVariadicUnrestrictedDouble : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (float)) variadic_func = "passVariadicUnrestrictedDouble" [@@bs.get]
    external passVariadicUnrestrictedFloat : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (float)) variadic_func = "passVariadicUnrestrictedFloat" [@@bs.get]
    external passVariadicUnsignedLong : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedLong" [@@bs.get]
    external passVariadicUnsignedLongLong : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedLongLong" [@@bs.get]
    external passVariadicUnsignedShort : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (int)) variadic_func = "passVariadicUnsignedShort" [@@bs.get]
    external passVariadicUsvstring : testBinding:('own) _TestBinding_like ->  (('own) _TestBinding_like, unit, (string)) variadic_func = "passVariadicUsvstring" [@@bs.get]
    external prefControlledMethodDisabled :  unit = "prefControlledMethodDisabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external prefControlledMethodEnabled :  unit = "prefControlledMethodEnabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external prefControlledStaticMethodDisabled :  unit = "prefControlledStaticMethodDisabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external prefControlledStaticMethodEnabled :  unit = "prefControlledStaticMethodEnabled" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external promiseNativeHandler : resolve:('a189 -> unit [@bs]) Js.null -> reject:('a190 -> unit [@bs]) Js.null ->  'a188 Js.Promise.t = "promiseNativeHandler" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external promiseRejectNative : p:'a191 Js.Promise.t -> value:'a192 ->  unit = "promiseRejectNative" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external promiseRejectWithTypeError : p:'a193 Js.Promise.t -> message:string ->  unit = "promiseRejectWithTypeError" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external promiseResolveNative : p:'a194 Js.Promise.t -> value:'a195 ->  unit = "promiseResolveNative" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveAny :  'a196 = "receiveAny" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveAnyMozMap :  'a197 = "receiveAnyMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveBoolean :  bool = "receiveBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveByte :  int = "receiveByte" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveByteString :  string = "receiveByteString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveDouble :  float = "receiveDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveEnum :  string = "receiveEnum" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveFloat :  float = "receiveFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveInterface :  _Blob = "receiveInterface" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveInterfaceSequence :  _Blob array = "receiveInterfaceSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveLong :  int = "receiveLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveLongLong :  int = "receiveLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveMozMap :  'a198 = "receiveMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveMozMapOfMozMaps :  'a199 = "receiveMozMapOfMozMaps" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveMozMapOfNullableInts :  'a200 = "receiveMozMapOfNullableInts" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableBoolean :  Js.boolean option = "receiveNullableBoolean" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableByte :  int option = "receiveNullableByte" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableByteString :  string option = "receiveNullableByteString" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableDouble :  float option = "receiveNullableDouble" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableEnum :  string option = "receiveNullableEnum" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableFloat :  float option = "receiveNullableFloat" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableInterface :  _Blob option = "receiveNullableInterface" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableLong :  int option = "receiveNullableLong" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableLongLong :  int option = "receiveNullableLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableMozMap :  'a201 option = "receiveNullableMozMap" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableMozMapOfNullableInts :  'a202 option = "receiveNullableMozMapOfNullableInts" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableObject :  'a203 option = "receiveNullableObject" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableOctet :  int option = "receiveNullableOctet" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableSequence :  int array option = "receiveNullableSequence" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableShort :  int option = "receiveNullableShort" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableString :  string option = "receiveNullableString" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnion :  'a204 = "receiveNullableUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnion2 :  'a205 = "receiveNullableUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnion3 :  'a206 = "receiveNullableUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnion4 :  'a207 = "receiveNullableUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnion5 :  'a208 = "receiveNullableUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnion6 :  'a209 = "receiveNullableUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveNullableUnrestrictedDouble :  float option = "receiveNullableUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnrestrictedFloat :  float option = "receiveNullableUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedLong :  int option = "receiveNullableUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedLongLong :  int option = "receiveNullableUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUnsignedShort :  int option = "receiveNullableUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveNullableUsvstring :  string option = "receiveNullableUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] [@@bs.return null_to_opt]
    external receiveObject :  'a210 = "receiveObject" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveOctet :  int = "receiveOctet" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveSequence :  int array = "receiveSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveShort :  int = "receiveShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveString :  string = "receiveString" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveTestDictionaryWithSuccessOnKeyword :  _TestDictionary = "receiveTestDictionaryWithSuccessOnKeyword" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion :  'a211 = "receiveUnion" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion10 :  'a212 = "receiveUnion10" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion11 :  'a213 = "receiveUnion11" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion2 :  'a214 = "receiveUnion2" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion3 :  'a215 = "receiveUnion3" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion4 :  'a216 = "receiveUnion4" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion5 :  'a217 = "receiveUnion5" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion6 :  'a218 = "receiveUnion6" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion7 :  'a219 = "receiveUnion7" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion8 :  'a220 = "receiveUnion8" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnion9 :  'a221 = "receiveUnion9" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnrestrictedDouble :  float = "receiveUnrestrictedDouble" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnrestrictedFloat :  float = "receiveUnrestrictedFloat" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnsignedLong :  int = "receiveUnsignedLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnsignedLongLong :  int = "receiveUnsignedLongLong" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUnsignedShort :  int = "receiveUnsignedShort" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveUsvstring :  string = "receiveUsvstring" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveVoid :  unit = "receiveVoid" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external receiveVoidStatic :  unit = "receiveVoidStatic" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external resolvePromiseDelayed : p:'a222 Js.Promise.t -> value:string -> ms:int ->  unit = "resolvePromiseDelayed" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external returnRejectedPromise : value:'a224 ->  'a223 Js.Promise.t = "returnRejectedPromise" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external returnResolvedPromise : value:'a226 ->  'a225 Js.Promise.t = "returnResolvedPromise" [@@bs.send.pipe: ('own) _TestBinding_like] 
    external returnSequenceSequence :  int array array = "returnSequenceSequence" [@@bs.send.pipe: ('own) _TestBinding_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestBinding) in
      (return:(_) _TestBinding_like)
    
    let _prefControlledConstDisabled  =
      
      0
    
    let _prefControlledConstEnabled  =
      
      0
    
    let _funcControlledConstDisabled  =
      
      0
    
    let _funcControlledConstEnabled  =
      
      0
    
    let advanceClock ~millis ?forceLayoutTick testBinding =
      let conv_forceLayoutTick = Js_undefined.from_opt in
      let forceLayoutTick = conv_forceLayoutTick forceLayoutTick in
      advanceClock ~millis ~forceLayoutTick testBinding
    
    let passEnum ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let arg = conv_arg arg in
      let return = passEnum ~arg testBinding in
      return
    
    let passMozMapUnion ~init testBinding =
      let conv_init = function
        | `Int (x: int) -> Obj.magic x
        | `Any (x: 'a227) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion ~init testBinding in
      return
    
    let passMozMapUnion2 ~init testBinding =
      let conv_init = function
        | `TestBinding (x: (_) _TestBinding_like) -> Obj.magic x
        | `Any (x: 'a228) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion2 ~init testBinding in
      return
    
    let passMozMapUnion3 ~init testBinding =
      let conv_init = function
        | `TestBinding (x: (_) _TestBinding_like) -> Obj.magic x
        | `String_Array_Array (x: string array array) -> Obj.magic x
        | `Any (x: 'a229) -> Obj.magic x
         in
      let init = conv_init init in
      let return = passMozMapUnion3 ~init testBinding in
      return
    
    let passNullableUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) _HTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion ~arg testBinding in
      return
    
    let passNullableUnion2 ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) _Event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passNullableUnion2 ~data testBinding in
      return
    
    let passNullableUnion3 ~data testBinding =
      let conv_data = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passNullableUnion3 ~data testBinding in
      return
    
    let passNullableUnion4 ~bool testBinding =
      let conv_bool = function
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let bool = conv_bool bool in
      let return = passNullableUnion4 ~bool testBinding in
      return
    
    let passNullableUnion5 ~arg testBinding =
      let conv_arg = function
        | `Int_Null (x: int Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion5 ~arg testBinding in
      return
    
    let passNullableUnion6 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passNullableUnion6 ~arg testBinding in
      return
    
    let passOptionalAny ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalAny ~arg testBinding
    
    let passOptionalAnyWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalAnyWithDefault ~arg testBinding
    
    let passOptionalBoolean ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBoolean ~arg testBinding
    
    let passOptionalBooleanWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBooleanWithDefault ~arg testBinding
    
    let passOptionalByte ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByte ~arg testBinding
    
    let passOptionalByteString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByteString ~arg testBinding
    
    let passOptionalByteWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalByteWithDefault ~arg testBinding
    
    let passOptionalBytestringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalBytestringWithDefault ~arg testBinding
    
    let passOptionalCallbackFunction ?fun_ testBinding =
      let conv_fun = Js_undefined.from_opt in
      let fun_ = conv_fun fun_ in
      passOptionalCallbackFunction ~fun_ testBinding
    
    let passOptionalCallbackInterface ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalCallbackInterface ~listener testBinding
    
    let passOptionalDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalDouble ~arg testBinding
    
    let passOptionalEnum ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalEnum ~arg testBinding in
      return
    
    let passOptionalEnum ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalEnum ~arg testBinding
    
    let passOptionalEnumWithDefault ~arg testBinding =
      let conv_arg = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalEnumWithDefault ~arg testBinding in
      return
    
    let passOptionalEnumWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalEnumWithDefault ~arg testBinding
    
    let passOptionalFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalFloat ~arg testBinding
    
    let passOptionalInterface ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalInterface ~arg testBinding
    
    let passOptionalLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLong ~arg testBinding
    
    let passOptionalLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongLong ~arg testBinding
    
    let passOptionalLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongLongWithDefault ~arg testBinding
    
    let passOptionalLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalLongWithDefault ~arg testBinding
    
    let passOptionalMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalMozMap ~arg testBinding
    
    let passOptionalMozMapOfNullableInts ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalMozMapOfNullableInts ~arg testBinding
    
    let passOptionalNullableBoolean ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBoolean ~arg testBinding
    
    let passOptionalNullableBooleanWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBooleanWithDefault ~arg testBinding
    
    let passOptionalNullableBooleanWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableBooleanWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableByte ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByte ~arg testBinding
    
    let passOptionalNullableByteString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteString ~arg testBinding
    
    let passOptionalNullableByteStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteStringWithDefault ~arg testBinding
    
    let passOptionalNullableByteWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteWithDefault ~arg testBinding
    
    let passOptionalNullableByteWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableByteWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableCallbackFunction ?fun_ testBinding =
      let conv_fun = Js_undefined.from_opt in
      let fun_ = conv_fun fun_ in
      passOptionalNullableCallbackFunction ~fun_ testBinding
    
    let passOptionalNullableCallbackInterface ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalNullableCallbackInterface ~listener testBinding
    
    let passOptionalNullableCallbackInterfaceWithDefault ?listener testBinding =
      let conv_listener = Js_undefined.from_opt in
      let listener = conv_listener listener in
      passOptionalNullableCallbackInterfaceWithDefault ~listener testBinding
    
    let passOptionalNullableDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableDouble ~arg testBinding
    
    let passOptionalNullableFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableFloat ~arg testBinding
    
    let passOptionalNullableInterface ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableInterface ~arg testBinding
    
    let passOptionalNullableInterfaceWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableInterfaceWithDefault ~arg testBinding
    
    let passOptionalNullableLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLong ~arg testBinding
    
    let passOptionalNullableLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLong ~arg testBinding
    
    let passOptionalNullableLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLongWithDefault ~arg testBinding
    
    let passOptionalNullableLongLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongWithDefault ~arg testBinding
    
    let passOptionalNullableLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMap ~arg testBinding
    
    let passOptionalNullableMozMapOfNullableInts ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMapOfNullableInts ~arg testBinding
    
    let passOptionalNullableMozMapWithDefaultValue ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableMozMapWithDefaultValue ~arg testBinding
    
    let passOptionalNullableObject ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableObject ~arg testBinding
    
    let passOptionalNullableObjectWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableObjectWithDefault ~arg testBinding
    
    let passOptionalNullableOctet ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctet ~arg testBinding
    
    let passOptionalNullableOctetWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctetWithDefault ~arg testBinding
    
    let passOptionalNullableOctetWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableOctetWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableSequence ?seq testBinding =
      let conv_seq = Js_undefined.from_opt in
      let seq = conv_seq seq in
      passOptionalNullableSequence ~seq testBinding
    
    let passOptionalNullableShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShort ~arg testBinding
    
    let passOptionalNullableShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShortWithDefault ~arg testBinding
    
    let passOptionalNullableShortWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableShortWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableString ~arg testBinding
    
    let passOptionalNullableStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableStringWithDefault ~arg testBinding
    
    let passOptionalNullableStringWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableStringWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) _HTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion ~arg testBinding in
      return
    
    let passOptionalNullableUnion ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion ~arg testBinding
    
    let passOptionalNullableUnion2 ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) _Event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion2 ~data testBinding in
      return
    
    let passOptionalNullableUnion2 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion2 ~data testBinding
    
    let passOptionalNullableUnion2WithDefault ~data testBinding =
      let conv_data = function
        | `Event_Null (x: (_) _Event_like Js.null) -> Obj.magic x
        | `String_Null (x: string Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion2WithDefault ~data testBinding in
      return
    
    let passOptionalNullableUnion2WithDefault ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion2WithDefault ~data testBinding
    
    let passOptionalNullableUnion3 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion3 ~arg testBinding in
      return
    
    let passOptionalNullableUnion3 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion3 ~arg testBinding
    
    let passOptionalNullableUnion4 ~data testBinding =
      let conv_data = function
        | `Int_Array_Null (x: int array Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalNullableUnion4 ~data testBinding in
      return
    
    let passOptionalNullableUnion4 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalNullableUnion4 ~data testBinding
    
    let passOptionalNullableUnion5 ~bool testBinding =
      let conv_bool = function
        | `Int_Null (x: int Js.null) -> Obj.magic x
        | `Js_boolean_Null (x: Js.boolean Js.null) -> Obj.magic x
         in
      let conv_bool = access_undef conv_bool in
      let bool = conv_bool bool in
      let return = passOptionalNullableUnion5 ~bool testBinding in
      return
    
    let passOptionalNullableUnion5 ?bool testBinding =
      let conv_bool = Js_undefined.from_opt in
      let bool = conv_bool bool in
      passOptionalNullableUnion5 ~bool testBinding
    
    let passOptionalNullableUnion6 ~arg testBinding =
      let conv_arg = function
        | `String_Null (x: string Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnion6 ~arg testBinding in
      return
    
    let passOptionalNullableUnion6 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnion6 ~arg testBinding
    
    let passOptionalNullableUnionWithDefault ~arg testBinding =
      let conv_arg = function
        | `HTMLElement_Null (x: (_) _HTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalNullableUnionWithDefault ~arg testBinding in
      return
    
    let passOptionalNullableUnionWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnionWithDefault ~arg testBinding
    
    let passOptionalNullableUnrestrictedDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnrestrictedDouble ~arg testBinding
    
    let passOptionalNullableUnrestrictedFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnrestrictedFloat ~arg testBinding
    
    let passOptionalNullableUnsignedLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLong ~arg testBinding
    
    let passOptionalNullableUnsignedLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLong ~arg testBinding
    
    let passOptionalNullableUnsignedLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLongWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedLongWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedLongWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUnsignedShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShort ~arg testBinding
    
    let passOptionalNullableUnsignedShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShortWithDefault ~arg testBinding
    
    let passOptionalNullableUnsignedShortWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUnsignedShortWithNonNullDefault ~arg testBinding
    
    let passOptionalNullableUsvstring ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstring ~arg testBinding
    
    let passOptionalNullableUsvstringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstringWithDefault ~arg testBinding
    
    let passOptionalNullableUsvstringWithNonNullDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalNullableUsvstringWithNonNullDefault ~arg testBinding
    
    let passOptionalObject ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalObject ~arg testBinding
    
    let passOptionalObjectMozMap ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalObjectMozMap ~arg testBinding
    
    let passOptionalOctet ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalOctet ~arg testBinding
    
    let passOptionalOctetWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalOctetWithDefault ~arg testBinding
    
    let passOptionalSequence ?seq testBinding =
      let conv_seq = Js_undefined.from_opt in
      let seq = conv_seq seq in
      passOptionalSequence ~seq testBinding
    
    let passOptionalShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalShort ~arg testBinding
    
    let passOptionalShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalShortWithDefault ~arg testBinding
    
    let passOptionalString ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalString ~arg testBinding
    
    let passOptionalStringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalStringWithDefault ~arg testBinding
    
    let passOptionalUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement (x: (_) _HTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion ~arg testBinding in
      return
    
    let passOptionalUnion ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion ~arg testBinding
    
    let passOptionalUnion2 ~data testBinding =
      let conv_data = function
        | `Event (x: (_) _Event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalUnion2 ~data testBinding in
      return
    
    let passOptionalUnion2 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalUnion2 ~data testBinding
    
    let passOptionalUnion3 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Int_Array (x: int array) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion3 ~arg testBinding in
      return
    
    let passOptionalUnion3 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion3 ~arg testBinding
    
    let passOptionalUnion4 ~data testBinding =
      let conv_data = function
        | `Int_Array (x: int array) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = passOptionalUnion4 ~data testBinding in
      return
    
    let passOptionalUnion4 ?data testBinding =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      passOptionalUnion4 ~data testBinding
    
    let passOptionalUnion5 ~bool testBinding =
      let conv_bool = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_bool = access_undef conv_bool in
      let bool = conv_bool bool in
      let return = passOptionalUnion5 ~bool testBinding in
      return
    
    let passOptionalUnion5 ?bool testBinding =
      let conv_bool = Js_undefined.from_opt in
      let bool = conv_bool bool in
      passOptionalUnion5 ~bool testBinding
    
    let passOptionalUnion6 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_arg = access_undef conv_arg in
      let arg = conv_arg arg in
      let return = passOptionalUnion6 ~arg testBinding in
      return
    
    let passOptionalUnion6 ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnion6 ~arg testBinding
    
    let passOptionalUnrestrictedDouble ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnrestrictedDouble ~arg testBinding
    
    let passOptionalUnrestrictedFloat ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnrestrictedFloat ~arg testBinding
    
    let passOptionalUnsignedLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLong ~arg testBinding
    
    let passOptionalUnsignedLongLong ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongLong ~arg testBinding
    
    let passOptionalUnsignedLongLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongLongWithDefault ~arg testBinding
    
    let passOptionalUnsignedLongWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedLongWithDefault ~arg testBinding
    
    let passOptionalUnsignedShort ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedShort ~arg testBinding
    
    let passOptionalUnsignedShortWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUnsignedShortWithDefault ~arg testBinding
    
    let passOptionalUsvstring ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUsvstring ~arg testBinding
    
    let passOptionalUsvstringWithDefault ?arg testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passOptionalUsvstringWithDefault ~arg testBinding
    
    let passUnion ~arg testBinding =
      let conv_arg = function
        | `HTMLElement (x: (_) _HTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion ~arg testBinding in
      return
    
    let passUnion10 ~arg testBinding =
      let conv_arg = function
        | `String (x: string) -> Obj.magic x
        | `Any (x: 'a230) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion10 ~arg testBinding in
      return
    
    let passUnion2 ~data testBinding =
      let conv_data = function
        | `Event (x: (_) _Event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion2 ~data testBinding in
      return
    
    let passUnion3 ~data testBinding =
      let conv_data = function
        | `Blob (x: (_) _Blob_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion3 ~data testBinding in
      return
    
    let passUnion4 ~seq testBinding =
      let conv_seq = function
        | `String (x: string) -> Obj.magic x
        | `String_Array (x: string array) -> Obj.magic x
         in
      let seq = conv_seq seq in
      let return = passUnion4 ~seq testBinding in
      return
    
    let passUnion5 ~data testBinding =
      let conv_data = function
        | `String (x: string) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let data = conv_data data in
      let return = passUnion5 ~data testBinding in
      return
    
    let passUnion6 ~bool testBinding =
      let conv_bool = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let bool = conv_bool bool in
      let return = passUnion6 ~bool testBinding in
      return
    
    let passUnion7 ~arg testBinding =
      let conv_arg = function
        | `String_Array (x: string array) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion7 ~arg testBinding in
      return
    
    let passUnion8 ~arg testBinding =
      let conv_arg = function
        | `String_Array (x: string array) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion8 ~arg testBinding in
      return
    
    let passUnion9 ~arg testBinding =
      let conv_arg = function
        | `TestDictionary (x: (_) _TestDictionary_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnion9 ~arg testBinding in
      return
    
    let passUnionSequenceSequence ~seq testBinding =
      let conv_seq = function
        | `Int (x: int) -> Obj.magic x
        | `Int_Array_Array (x: int array array) -> Obj.magic x
         in
      let seq = conv_seq seq in
      let return = passUnionSequenceSequence ~seq testBinding in
      return
    
    let passUnionWithTypedef ~arg testBinding =
      let conv_arg = function
        | `Document (x: (_) _Document_like) -> Obj.magic x
        | `Any (x: 'a231) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnionWithTypedef ~arg testBinding in
      return
    
    let passUnionWithTypedef2 ~arg testBinding =
      let conv_arg = function
        | `Int_Array (x: int array) -> Obj.magic x
        | `Any (x: 'a232) -> Obj.magic x
         in
      let arg = conv_arg arg in
      let return = passUnionWithTypedef2 ~arg testBinding in
      return
    
    let passVariadicAny ~args testBinding =
      let func = passVariadicAny testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicBoolean ~args testBinding =
      let func = passVariadicBoolean testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicBooleanAndDefault ~arg ~args testBinding =
      let func = passVariadicBooleanAndDefault testBinding in
      let args = to_arg args in
      let args = unsafe_add args arg in
      apply func testBinding args
    
    let passVariadicBooleanAndDefault ?arg ~args testBinding =
      let conv_arg = Js_undefined.from_opt in
      let arg = conv_arg arg in
      passVariadicBooleanAndDefault ~arg ~args testBinding
    
    let passVariadicByte ~args testBinding =
      let func = passVariadicByte testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicByteString ~args testBinding =
      let func = passVariadicByteString testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicDouble ~args testBinding =
      let func = passVariadicDouble testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicEnum ~args testBinding =
      let func = passVariadicEnum testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicEnum ~args testBinding =
      let conv_args = function
        | `None -> ""
        | `foo -> "foo"
        | `bar -> "bar"
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicEnum ~args testBinding in
      return
    
    let passVariadicFloat ~args testBinding =
      let func = passVariadicFloat testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicInterface ~args testBinding =
      let func = passVariadicInterface testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicLong ~args testBinding =
      let func = passVariadicLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicLongLong ~args testBinding =
      let func = passVariadicLongLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicObject ~args testBinding =
      let func = passVariadicObject testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicOctet ~args testBinding =
      let func = passVariadicOctet testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicShort ~args testBinding =
      let func = passVariadicShort testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicString ~args testBinding =
      let func = passVariadicString testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion ~args testBinding =
      let func = passVariadicUnion testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion ~args testBinding =
      let conv_args = function
        | `HTMLElement (x: (_) _HTMLElement_like) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion ~args testBinding in
      return
    
    let passVariadicUnion2 ~args testBinding =
      let func = passVariadicUnion2 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion2 ~args testBinding =
      let conv_args = function
        | `Event (x: (_) _Event_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion2 ~args testBinding in
      return
    
    let passVariadicUnion3 ~args testBinding =
      let func = passVariadicUnion3 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion3 ~args testBinding =
      let conv_args = function
        | `Blob (x: (_) _Blob_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion3 ~args testBinding in
      return
    
    let passVariadicUnion4 ~args testBinding =
      let func = passVariadicUnion4 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion4 ~args testBinding =
      let conv_args = function
        | `Blob (x: (_) _Blob_like) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion4 ~args testBinding in
      return
    
    let passVariadicUnion5 ~args testBinding =
      let func = passVariadicUnion5 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion5 ~args testBinding =
      let conv_args = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion5 ~args testBinding in
      return
    
    let passVariadicUnion6 ~args testBinding =
      let func = passVariadicUnion6 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion6 ~args testBinding =
      let conv_args = function
        | `Int (x: int) -> Obj.magic x
        | `Js_boolean (x: Js.boolean) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion6 ~args testBinding in
      return
    
    let passVariadicUnion7 ~args testBinding =
      let func = passVariadicUnion7 testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnion7 ~args testBinding =
      let conv_args = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_args = access_array conv_args in
      let args = conv_args args in
      let return = passVariadicUnion7 ~args testBinding in
      return
    
    let passVariadicUnrestrictedDouble ~args testBinding =
      let func = passVariadicUnrestrictedDouble testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnrestrictedFloat ~args testBinding =
      let func = passVariadicUnrestrictedFloat testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedLong ~args testBinding =
      let func = passVariadicUnsignedLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedLongLong ~args testBinding =
      let func = passVariadicUnsignedLongLong testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUnsignedShort ~args testBinding =
      let func = passVariadicUnsignedShort testBinding in
      let args = to_arg args in
      apply func testBinding args
    
    let passVariadicUsvstring ~args testBinding =
      let func = passVariadicUsvstring testBinding in
      let args = to_arg args in
      apply func testBinding args
    
end
 module WorkerLocation = struct
    
    
    external href : workerLocation:('own) _WorkerLocation_like ->  string = "href" [@@bs.get] 
    external protocol : workerLocation:('own) _WorkerLocation_like ->  string = "protocol" [@@bs.get] 
    external host : workerLocation:('own) _WorkerLocation_like ->  string = "host" [@@bs.get] 
    external hostname : workerLocation:('own) _WorkerLocation_like ->  string = "hostname" [@@bs.get] 
    external port : workerLocation:('own) _WorkerLocation_like ->  string = "port" [@@bs.get] 
    external pathname : workerLocation:('own) _WorkerLocation_like ->  string = "pathname" [@@bs.get] 
    external search : workerLocation:('own) _WorkerLocation_like ->  string = "search" [@@bs.get] 
    external hash : workerLocation:('own) _WorkerLocation_like ->  string = "hash" [@@bs.get] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _WorkerLocation_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WorkerLocation) in
      (return:(_) _WorkerLocation_like)
    
end
 module CSS = struct
    
    
    external escape : ident:string ->  string = "escape" [@@bs.send.pipe: ('own) _CSS_like] 
    external supports : property:string -> value:string ->  bool = "supports" [@@bs.send.pipe: ('own) _CSS_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CSS) in
      (return:(_) _CSS_like)
    
end
 module CanvasGradient = struct
    
    
    external addColorStop : offset:float -> color:string ->  unit = "addColorStop" [@@bs.send.pipe: ('own) _CanvasGradient_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasGradient) in
      (return:(_) _CanvasGradient_like)
    
end
 module VRFieldOfView = struct
    
    
    external upDegrees : vRFieldOfView:('own) _VRFieldOfView_like ->  float = "upDegrees" [@@bs.get] 
    external rightDegrees : vRFieldOfView:('own) _VRFieldOfView_like ->  float = "rightDegrees" [@@bs.get] 
    external downDegrees : vRFieldOfView:('own) _VRFieldOfView_like ->  float = "downDegrees" [@@bs.get] 
    external leftDegrees : vRFieldOfView:('own) _VRFieldOfView_like ->  float = "leftDegrees" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_VRFieldOfView) in
      (return:(_) _VRFieldOfView_like)
    
end
 module CharacteristicEventHandlers = struct
    
    
    external oncharacteristicvaluechanged : characteristicEventHandlers:('own) _CharacteristicEventHandlers_like ->  (_Event -> 'a233 [@bs]) option = "oncharacteristicvaluechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOncharacteristicvaluechanged : characteristicEventHandlers:('own) _CharacteristicEventHandlers_like -> oncharacteristicvaluechanged:(_Event -> 'a234 [@bs]) Js.null ->  unit = "oncharacteristicvaluechanged" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CharacteristicEventHandlers) in
      (return:(_) _CharacteristicEventHandlers_like)
    
end
 module Gamepad = struct
    
    
    external id : gamepad:('own) _Gamepad_like ->  string = "id" [@@bs.get] 
    external index : gamepad:('own) _Gamepad_like ->  int = "index" [@@bs.get] 
    external connected : gamepad:('own) _Gamepad_like ->  bool = "connected" [@@bs.get] 
    external timestamp : gamepad:('own) _Gamepad_like ->  float = "timestamp" [@@bs.get] 
    external mapping : gamepad:('own) _Gamepad_like ->  string = "mapping" [@@bs.get] 
    external axes : gamepad:('own) _Gamepad_like ->  Js_typed_array.Float64Array.t = "axes" [@@bs.get] 
    external buttons : gamepad:('own) _Gamepad_like ->  _GamepadButtonList = "buttons" [@@bs.get] 
    external hand : gamepad:('own) _Gamepad_like ->  string = "hand" [@@bs.get] 
    external pose : gamepad:('own) _Gamepad_like ->  _VRPose option = "pose" [@@bs.get] [@@bs.return null_to_opt]
    external displayId : gamepad:('own) _Gamepad_like ->  int = "displayId" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_Gamepad) in
      (return:(_) _Gamepad_like)
    
end
 module TextDecoder = struct
    
    
    external encoding : textDecoder:('own) _TextDecoder_like ->  string = "encoding" [@@bs.get] 
    external fatal : textDecoder:('own) _TextDecoder_like ->  bool = "fatal" [@@bs.get] 
    external decode : ?input:'a235 Js.undefined ->  string = "decode" [@@bs.send.pipe: ('own) _TextDecoder_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TextDecoder) in
      (return:(_) _TextDecoder_like)
    
    let decode ?input textDecoder =
      let conv_input = Js_undefined.from_opt in
      let input = conv_input input in
      decode ~input textDecoder
    
end
 module TestBindingPairIterable = struct
    
    
    external add : key:string -> value:int ->  unit = "add" [@@bs.send.pipe: ('own) _TestBindingPairIterable_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestBindingPairIterable) in
      (return:(_) _TestBindingPairIterable_like)
    
end
 module HTMLHyperlinkElementUtils = struct
    
    
    external href : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "origin" [@@bs.get] 
    external protocol : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "username" [@@bs.get] 
    external setUsername : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> username:string ->  unit = "username" [@@bs.set]
    external password : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "password" [@@bs.get] 
    external setPassword : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> password:string ->  unit = "password" [@@bs.set]
    external host : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "host" [@@bs.get] 
    external setHost : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "hostname" [@@bs.get] 
    external setHostname : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "port" [@@bs.get] 
    external setPort : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "pathname" [@@bs.get] 
    external setPathname : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "search" [@@bs.get] 
    external setSearch : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like ->  string = "hash" [@@bs.get] 
    external setHash : hTMLHyperlinkElementUtils:('own) _HTMLHyperlinkElementUtils_like -> hash:string ->  unit = "hash" [@@bs.set]
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _HTMLHyperlinkElementUtils_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLHyperlinkElementUtils) in
      (return:(_) _HTMLHyperlinkElementUtils_like)
    
end
 module NamedNodeMap = struct
    
    
    external length : namedNodeMap:('own) _NamedNodeMap_like ->  int = "length" [@@bs.get] 
    external getNamedItem : qualifiedName:string ->  _Attr option = "getNamedItem" [@@bs.send.pipe: ('own) _NamedNodeMap_like] [@@bs.return null_to_opt]
    external getNamedItemNS : namespace:string Js.null -> localName:string ->  _Attr option = "getNamedItemNS" [@@bs.send.pipe: ('own) _NamedNodeMap_like] [@@bs.return null_to_opt]
    external item : index:int ->  _Attr option = "item" [@@bs.send.pipe: ('own) _NamedNodeMap_like] [@@bs.return null_to_opt]
    external removeNamedItem : qualifiedName:string ->  _Attr = "removeNamedItem" [@@bs.send.pipe: ('own) _NamedNodeMap_like] 
    external removeNamedItemNS : namespace:string Js.null -> localName:string ->  _Attr = "removeNamedItemNS" [@@bs.send.pipe: ('own) _NamedNodeMap_like] 
    external setNamedItem : attr:(_) _Attr_like ->  _Attr option = "setNamedItem" [@@bs.send.pipe: ('own) _NamedNodeMap_like] [@@bs.return null_to_opt]
    external setNamedItemNS : attr:(_) _Attr_like ->  _Attr option = "setNamedItemNS" [@@bs.send.pipe: ('own) _NamedNodeMap_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_NamedNodeMap) in
      (return:(_) _NamedNodeMap_like)
    
    let cast_to_Dom_namedNodeMap x =
      let return = Obj.magic (x:_NamedNodeMap) in
      (return:Dom.namedNodeMap)
    
    let cast_from_Dom_namedNodeMap x =
      let return = Obj.magic (x:Dom.namedNodeMap) in
      (return:_NamedNodeMap)
    
end
 module TouchList = struct
    
    
    external length : touchList:('own) _TouchList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _Touch option = "item" [@@bs.send.pipe: ('own) _TouchList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_TouchList) in
      (return:(_) _TouchList_like)
    
end
 module WebGLActiveInfo = struct
    
    
    external size : webGLActiveInfo:('own) _WebGLActiveInfo_like ->  int = "size" [@@bs.get] 
    external type_ : webGLActiveInfo:('own) _WebGLActiveInfo_like ->  int = "type" [@@bs.get] 
    external name : webGLActiveInfo:('own) _WebGLActiveInfo_like ->  string = "name" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_WebGLActiveInfo) in
      (return:(_) _WebGLActiveInfo_like)
    
end
 module Plugin = struct
    
    
    external name : plugin:('own) _Plugin_like ->  string = "name" [@@bs.get] 
    external description : plugin:('own) _Plugin_like ->  string = "description" [@@bs.get] 
    external filename : plugin:('own) _Plugin_like ->  string = "filename" [@@bs.get] 
    external length : plugin:('own) _Plugin_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _MimeType option = "item" [@@bs.send.pipe: ('own) _Plugin_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  _MimeType option = "namedItem" [@@bs.send.pipe: ('own) _Plugin_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_Plugin) in
      (return:(_) _Plugin_like)
    
end
 module VRDisplayCapabilities = struct
    
    
    external hasPosition : vRDisplayCapabilities:('own) _VRDisplayCapabilities_like ->  bool = "hasPosition" [@@bs.get] 
    external hasOrientation : vRDisplayCapabilities:('own) _VRDisplayCapabilities_like ->  bool = "hasOrientation" [@@bs.get] 
    external hasExternalDisplay : vRDisplayCapabilities:('own) _VRDisplayCapabilities_like ->  bool = "hasExternalDisplay" [@@bs.get] 
    external canPresent : vRDisplayCapabilities:('own) _VRDisplayCapabilities_like ->  bool = "canPresent" [@@bs.get] 
    external maxLayers : vRDisplayCapabilities:('own) _VRDisplayCapabilities_like ->  int = "maxLayers" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_VRDisplayCapabilities) in
      (return:(_) _VRDisplayCapabilities_like)
    
end
 module Headers = struct
    
    
    external append : name:string -> value:string ->  unit = "append" [@@bs.send.pipe: ('own) _Headers_like] 
    external delete : name:string ->  unit = "delete" [@@bs.send.pipe: ('own) _Headers_like] 
    external get : name:string ->  string option = "get" [@@bs.send.pipe: ('own) _Headers_like] [@@bs.return null_to_opt]
    external has : name:string ->  bool = "has" [@@bs.send.pipe: ('own) _Headers_like] 
    external set : name:string -> value:string ->  unit = "set" [@@bs.send.pipe: ('own) _Headers_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Headers) in
      (return:(_) _Headers_like)
    
end
 module OESTextureHalfFloatLinear = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_OESTextureHalfFloatLinear) in
      (return:(_) _OESTextureHalfFloatLinear_like)
    
end
 module Worklet = struct
    
    
    external addModule : moduleURL:string -> ?options:(_) _WorkletOptions_like Js.undefined ->  unit Js.Promise.t = "addModule" [@@bs.send.pipe: ('own) _Worklet_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Worklet) in
      (return:(_) _Worklet_like)
    
    let addModule ~moduleURL ?options worklet =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      addModule ~moduleURL ~options worklet
    
end
 module Navigator = struct
    
    
    external cookieEnabled : navigator:('own) _Navigator_like ->  bool = "cookieEnabled" [@@bs.get] 
    external plugins : navigator:('own) _Navigator_like ->  _PluginArray = "plugins" [@@bs.get] 
    external mimeTypes : navigator:('own) _Navigator_like ->  _MimeTypeArray = "mimeTypes" [@@bs.get] 
    external language : navigator:('own) _Navigator_like ->  string = "language" [@@bs.get] 
    external appCodeName : navigator:('own) _Navigator_like ->  string = "appCodeName" [@@bs.get] 
    external appName : navigator:('own) _Navigator_like ->  string = "appName" [@@bs.get] 
    external appVersion : navigator:('own) _Navigator_like ->  string = "appVersion" [@@bs.get] 
    external platform : navigator:('own) _Navigator_like ->  string = "platform" [@@bs.get] 
    external product : navigator:('own) _Navigator_like ->  string = "product" [@@bs.get] 
    external userAgent : navigator:('own) _Navigator_like ->  string = "userAgent" [@@bs.get] 
    external bluetooth : navigator:('own) _Navigator_like ->  _Bluetooth = "bluetooth" [@@bs.get] 
    external serviceWorker : navigator:('own) _Navigator_like ->  _ServiceWorkerContainer = "serviceWorker" [@@bs.get] 
    external vr : navigator:('own) _Navigator_like ->  _VR = "vr" [@@bs.get] 
    external permissions : navigator:('own) _Navigator_like ->  _Permissions = "permissions" [@@bs.get] 
    external getGamepads :  _GamepadList = "getGamepads" [@@bs.send.pipe: ('own) _Navigator_like] 
    external javaEnabled :  bool = "javaEnabled" [@@bs.send.pipe: ('own) _Navigator_like] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) _Navigator_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Navigator) in
      (return:(_) _Navigator_like)
    
end
 module NavigatorID = struct
    
    
    external appCodeName : navigatorID:('own) _NavigatorID_like ->  string = "appCodeName" [@@bs.get] 
    external appName : navigatorID:('own) _NavigatorID_like ->  string = "appName" [@@bs.get] 
    external appVersion : navigatorID:('own) _NavigatorID_like ->  string = "appVersion" [@@bs.get] 
    external platform : navigatorID:('own) _NavigatorID_like ->  string = "platform" [@@bs.get] 
    external product : navigatorID:('own) _NavigatorID_like ->  string = "product" [@@bs.get] 
    external userAgent : navigatorID:('own) _NavigatorID_like ->  string = "userAgent" [@@bs.get] 
    external taintEnabled :  bool = "taintEnabled" [@@bs.send.pipe: ('own) _NavigatorID_like] 
    
    let downcast x =
      let return = Obj.magic (x:_NavigatorID) in
      (return:(_) _NavigatorID_like)
    
end
 module NavigatorLanguage = struct
    
    
    external language : navigatorLanguage:('own) _NavigatorLanguage_like ->  string = "language" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_NavigatorLanguage) in
      (return:(_) _NavigatorLanguage_like)
    
end
 module NavigatorPlugins = struct
    
    
    external plugins : navigatorPlugins:('own) _NavigatorPlugins_like ->  _PluginArray = "plugins" [@@bs.get] 
    external mimeTypes : navigatorPlugins:('own) _NavigatorPlugins_like ->  _MimeTypeArray = "mimeTypes" [@@bs.get] 
    external javaEnabled :  bool = "javaEnabled" [@@bs.send.pipe: ('own) _NavigatorPlugins_like] 
    
    let downcast x =
      let return = Obj.magic (x:_NavigatorPlugins) in
      (return:(_) _NavigatorPlugins_like)
    
end
 module NavigatorCookies = struct
    
    
    external cookieEnabled : navigatorCookies:('own) _NavigatorCookies_like ->  bool = "cookieEnabled" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_NavigatorCookies) in
      (return:(_) _NavigatorCookies_like)
    
end
 module PromiseNativeHandler = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_PromiseNativeHandler) in
      (return:(_) _PromiseNativeHandler_like)
    
end
 module FileReaderSync = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_FileReaderSync) in
      (return:(_) _FileReaderSync_like)
    
end
 module ImageData = struct
    
    
    external width : imageData:('own) _ImageData_like ->  int = "width" [@@bs.get] 
    external height : imageData:('own) _ImageData_like ->  int = "height" [@@bs.get] 
    external data : imageData:('own) _ImageData_like ->  Js_typed_array.Uint8ClampedArray.t = "data" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ImageData) in
      (return:(_) _ImageData_like)
    
end
 module MimeType = struct
    
    
    external type_ : mimeType:('own) _MimeType_like ->  string = "type" [@@bs.get] 
    external description : mimeType:('own) _MimeType_like ->  string = "description" [@@bs.get] 
    external suffixes : mimeType:('own) _MimeType_like ->  string = "suffixes" [@@bs.get] 
    external enabledPlugin : mimeType:('own) _MimeType_like ->  _Plugin = "enabledPlugin" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_MimeType) in
      (return:(_) _MimeType_like)
    
end
 module GlobalCrypto = struct
    
    
    external crypto : globalCrypto:('own) _GlobalCrypto_like ->  _Crypto = "crypto" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_GlobalCrypto) in
      (return:(_) _GlobalCrypto_like)
    
end
 module Crypto = struct
    
    
    external getRandomValues : array:'a237 ->  'a236 = "getRandomValues" [@@bs.send.pipe: ('own) _Crypto_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Crypto) in
      (return:(_) _Crypto_like)
    
end
 module CSSStyleDeclaration = struct
    
    
    external cssText : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "cssText" [@@bs.get] 
    external setCssText : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> cssText:string ->  unit = "cssText" [@@bs.set]
    external length : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  int = "length" [@@bs.get] 
    external cssFloat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "cssFloat" [@@bs.get] 
    external setCssFloat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> cssFloat:string ->  unit = "cssFloat" [@@bs.set]
    external all : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "all" [@@bs.get] 
    external setAll : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> all:string ->  unit = "all" [@@bs.set]
    external background : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "background" [@@bs.get] 
    external setBackground : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> background:string ->  unit = "background" [@@bs.set]
    external backgroundColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundColor" [@@bs.get] 
    external setBackgroundColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundColor:string ->  unit = "backgroundColor" [@@bs.set]
    external backgroundPosition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundPosition" [@@bs.get] 
    external setBackgroundPosition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundPosition:string ->  unit = "backgroundPosition" [@@bs.set]
    external backgroundPositionX : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundPositionX" [@@bs.get] 
    external setBackgroundPositionX : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundPositionX:string ->  unit = "backgroundPositionX" [@@bs.set]
    external backgroundPositionY : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundPositionY" [@@bs.get] 
    external setBackgroundPositionY : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundPositionY:string ->  unit = "backgroundPositionY" [@@bs.set]
    external backgroundRepeat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundRepeat" [@@bs.get] 
    external setBackgroundRepeat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundRepeat:string ->  unit = "backgroundRepeat" [@@bs.set]
    external backgroundImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundImage" [@@bs.get] 
    external setBackgroundImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundImage:string ->  unit = "backgroundImage" [@@bs.set]
    external backgroundAttachment : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundAttachment" [@@bs.get] 
    external setBackgroundAttachment : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundAttachment:string ->  unit = "backgroundAttachment" [@@bs.set]
    external backgroundSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundSize" [@@bs.get] 
    external setBackgroundSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundSize:string ->  unit = "backgroundSize" [@@bs.set]
    external backgroundOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundOrigin" [@@bs.get] 
    external setBackgroundOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundOrigin:string ->  unit = "backgroundOrigin" [@@bs.set]
    external backgroundClip : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backgroundClip" [@@bs.get] 
    external setBackgroundClip : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backgroundClip:string ->  unit = "backgroundClip" [@@bs.set]
    external border : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "border" [@@bs.get] 
    external setBorder : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> border:string ->  unit = "border" [@@bs.set]
    external borderColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderColor" [@@bs.get] 
    external setBorderColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderColor:string ->  unit = "borderColor" [@@bs.set]
    external borderRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderRadius" [@@bs.get] 
    external setBorderRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderRadius:string ->  unit = "borderRadius" [@@bs.set]
    external borderSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderSpacing" [@@bs.get] 
    external setBorderSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderSpacing:string ->  unit = "borderSpacing" [@@bs.set]
    external borderStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderStyle" [@@bs.get] 
    external setBorderStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderStyle:string ->  unit = "borderStyle" [@@bs.set]
    external borderWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderWidth" [@@bs.get] 
    external setBorderWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderWidth:string ->  unit = "borderWidth" [@@bs.set]
    external borderBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottom" [@@bs.get] 
    external setBorderBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottom:string ->  unit = "borderBottom" [@@bs.set]
    external borderBottomColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottomColor" [@@bs.get] 
    external setBorderBottomColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottomColor:string ->  unit = "borderBottomColor" [@@bs.set]
    external borderBottomLeftRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottomLeftRadius" [@@bs.get] 
    external setBorderBottomLeftRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottomLeftRadius:string ->  unit = "borderBottomLeftRadius" [@@bs.set]
    external borderBottomRightRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottomRightRadius" [@@bs.get] 
    external setBorderBottomRightRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottomRightRadius:string ->  unit = "borderBottomRightRadius" [@@bs.set]
    external borderBottomStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottomStyle" [@@bs.get] 
    external setBorderBottomStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottomStyle:string ->  unit = "borderBottomStyle" [@@bs.set]
    external borderBottomWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBottomWidth" [@@bs.get] 
    external setBorderBottomWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBottomWidth:string ->  unit = "borderBottomWidth" [@@bs.set]
    external borderLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderLeft" [@@bs.get] 
    external setBorderLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderLeft:string ->  unit = "borderLeft" [@@bs.set]
    external borderLeftColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderLeftColor" [@@bs.get] 
    external setBorderLeftColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderLeftColor:string ->  unit = "borderLeftColor" [@@bs.set]
    external borderLeftStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderLeftStyle" [@@bs.get] 
    external setBorderLeftStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderLeftStyle:string ->  unit = "borderLeftStyle" [@@bs.set]
    external borderLeftWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderLeftWidth" [@@bs.get] 
    external setBorderLeftWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderLeftWidth:string ->  unit = "borderLeftWidth" [@@bs.set]
    external borderRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderRight" [@@bs.get] 
    external setBorderRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderRight:string ->  unit = "borderRight" [@@bs.set]
    external borderRightColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderRightColor" [@@bs.get] 
    external setBorderRightColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderRightColor:string ->  unit = "borderRightColor" [@@bs.set]
    external borderRightStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderRightStyle" [@@bs.get] 
    external setBorderRightStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderRightStyle:string ->  unit = "borderRightStyle" [@@bs.set]
    external borderRightWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderRightWidth" [@@bs.get] 
    external setBorderRightWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderRightWidth:string ->  unit = "borderRightWidth" [@@bs.set]
    external borderTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTop" [@@bs.get] 
    external setBorderTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTop:string ->  unit = "borderTop" [@@bs.set]
    external borderTopColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTopColor" [@@bs.get] 
    external setBorderTopColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTopColor:string ->  unit = "borderTopColor" [@@bs.set]
    external borderTopLeftRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTopLeftRadius" [@@bs.get] 
    external setBorderTopLeftRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTopLeftRadius:string ->  unit = "borderTopLeftRadius" [@@bs.set]
    external borderTopRightRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTopRightRadius" [@@bs.get] 
    external setBorderTopRightRadius : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTopRightRadius:string ->  unit = "borderTopRightRadius" [@@bs.set]
    external borderTopStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTopStyle" [@@bs.get] 
    external setBorderTopStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTopStyle:string ->  unit = "borderTopStyle" [@@bs.set]
    external borderTopWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderTopWidth" [@@bs.get] 
    external setBorderTopWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderTopWidth:string ->  unit = "borderTopWidth" [@@bs.set]
    external borderImageSource : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImageSource" [@@bs.get] 
    external setBorderImageSource : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImageSource:string ->  unit = "borderImageSource" [@@bs.set]
    external borderImageSlice : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImageSlice" [@@bs.get] 
    external setBorderImageSlice : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImageSlice:string ->  unit = "borderImageSlice" [@@bs.set]
    external borderImageRepeat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImageRepeat" [@@bs.get] 
    external setBorderImageRepeat : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImageRepeat:string ->  unit = "borderImageRepeat" [@@bs.set]
    external borderImageOutset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImageOutset" [@@bs.get] 
    external setBorderImageOutset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImageOutset:string ->  unit = "borderImageOutset" [@@bs.set]
    external borderImageWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImageWidth" [@@bs.get] 
    external setBorderImageWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImageWidth:string ->  unit = "borderImageWidth" [@@bs.set]
    external borderImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderImage" [@@bs.get] 
    external setBorderImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderImage:string ->  unit = "borderImage" [@@bs.set]
    external borderBlockStartColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockStartColor" [@@bs.get] 
    external setBorderBlockStartColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockStartColor:string ->  unit = "borderBlockStartColor" [@@bs.set]
    external borderBlockStartWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockStartWidth" [@@bs.get] 
    external setBorderBlockStartWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockStartWidth:string ->  unit = "borderBlockStartWidth" [@@bs.set]
    external borderBlockStartStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockStartStyle" [@@bs.get] 
    external setBorderBlockStartStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockStartStyle:string ->  unit = "borderBlockStartStyle" [@@bs.set]
    external borderBlockEndColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockEndColor" [@@bs.get] 
    external setBorderBlockEndColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockEndColor:string ->  unit = "borderBlockEndColor" [@@bs.set]
    external borderBlockEndWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockEndWidth" [@@bs.get] 
    external setBorderBlockEndWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockEndWidth:string ->  unit = "borderBlockEndWidth" [@@bs.set]
    external borderBlockEndStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockEndStyle" [@@bs.get] 
    external setBorderBlockEndStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockEndStyle:string ->  unit = "borderBlockEndStyle" [@@bs.set]
    external borderInlineStartColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineStartColor" [@@bs.get] 
    external setBorderInlineStartColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineStartColor:string ->  unit = "borderInlineStartColor" [@@bs.set]
    external borderInlineStartWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineStartWidth" [@@bs.get] 
    external setBorderInlineStartWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineStartWidth:string ->  unit = "borderInlineStartWidth" [@@bs.set]
    external borderInlineStartStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineStartStyle" [@@bs.get] 
    external setBorderInlineStartStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineStartStyle:string ->  unit = "borderInlineStartStyle" [@@bs.set]
    external borderInlineEndColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineEndColor" [@@bs.get] 
    external setBorderInlineEndColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineEndColor:string ->  unit = "borderInlineEndColor" [@@bs.set]
    external borderInlineEndWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineEndWidth" [@@bs.get] 
    external setBorderInlineEndWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineEndWidth:string ->  unit = "borderInlineEndWidth" [@@bs.set]
    external borderInlineEndStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineEndStyle" [@@bs.get] 
    external setBorderInlineEndStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineEndStyle:string ->  unit = "borderInlineEndStyle" [@@bs.set]
    external borderBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockStart" [@@bs.get] 
    external setBorderBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockStart:string ->  unit = "borderBlockStart" [@@bs.set]
    external borderBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderBlockEnd" [@@bs.get] 
    external setBorderBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderBlockEnd:string ->  unit = "borderBlockEnd" [@@bs.set]
    external borderInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineStart" [@@bs.get] 
    external setBorderInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineStart:string ->  unit = "borderInlineStart" [@@bs.set]
    external borderInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderInlineEnd" [@@bs.get] 
    external setBorderInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderInlineEnd:string ->  unit = "borderInlineEnd" [@@bs.set]
    external content : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "content" [@@bs.get] 
    external setContent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> content:string ->  unit = "content" [@@bs.set]
    external color : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "color" [@@bs.get] 
    external setColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> color:string ->  unit = "color" [@@bs.set]
    external display : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "display" [@@bs.get] 
    external setDisplay : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> display:string ->  unit = "display" [@@bs.set]
    external opacity : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "opacity" [@@bs.get] 
    external setOpacity : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> opacity:string ->  unit = "opacity" [@@bs.set]
    external visibility : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "visibility" [@@bs.get] 
    external setVisibility : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> visibility:string ->  unit = "visibility" [@@bs.set]
    external cursor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "cursor" [@@bs.get] 
    external setCursor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> cursor:string ->  unit = "cursor" [@@bs.set]
    external boxSizing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "boxSizing" [@@bs.get] 
    external setBoxSizing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> boxSizing:string ->  unit = "boxSizing" [@@bs.set]
    external boxShadow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "boxShadow" [@@bs.get] 
    external setBoxShadow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> boxShadow:string ->  unit = "boxShadow" [@@bs.set]
    external textShadow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textShadow" [@@bs.get] 
    external setTextShadow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textShadow:string ->  unit = "textShadow" [@@bs.set]
    external _float : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "_float" [@@bs.get] 
    external set_float : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> _float:string ->  unit = "_float" [@@bs.set]
    external clear : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "clear" [@@bs.get] 
    external setClear : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> clear:string ->  unit = "clear" [@@bs.set]
    external clip : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "clip" [@@bs.get] 
    external setClip : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> clip:string ->  unit = "clip" [@@bs.set]
    external transform : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transform" [@@bs.get] 
    external setTransform : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transform:string ->  unit = "transform" [@@bs.set]
    external transformOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transformOrigin" [@@bs.get] 
    external setTransformOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transformOrigin:string ->  unit = "transformOrigin" [@@bs.set]
    external perspective : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "perspective" [@@bs.get] 
    external setPerspective : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> perspective:string ->  unit = "perspective" [@@bs.set]
    external perspectiveOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "perspectiveOrigin" [@@bs.get] 
    external setPerspectiveOrigin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> perspectiveOrigin:string ->  unit = "perspectiveOrigin" [@@bs.set]
    external transformStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transformStyle" [@@bs.get] 
    external setTransformStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transformStyle:string ->  unit = "transformStyle" [@@bs.set]
    external backfaceVisibility : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "backfaceVisibility" [@@bs.get] 
    external setBackfaceVisibility : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> backfaceVisibility:string ->  unit = "backfaceVisibility" [@@bs.set]
    external direction : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "direction" [@@bs.get] 
    external setDirection : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> direction:string ->  unit = "direction" [@@bs.set]
    external unicodeBidi : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "unicodeBidi" [@@bs.get] 
    external setUnicodeBidi : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> unicodeBidi:string ->  unit = "unicodeBidi" [@@bs.set]
    external filter : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "filter" [@@bs.get] 
    external setFilter : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> filter:string ->  unit = "filter" [@@bs.set]
    external lineHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "lineHeight" [@@bs.get] 
    external setLineHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> lineHeight:string ->  unit = "lineHeight" [@@bs.set]
    external mixBlendMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "mixBlendMode" [@@bs.get] 
    external setMixBlendMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> mixBlendMode:string ->  unit = "mixBlendMode" [@@bs.set]
    external verticalAlign : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "verticalAlign" [@@bs.get] 
    external setVerticalAlign : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> verticalAlign:string ->  unit = "verticalAlign" [@@bs.set]
    external listStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "listStyle" [@@bs.get] 
    external setListStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> listStyle:string ->  unit = "listStyle" [@@bs.set]
    external listStylePosition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "listStylePosition" [@@bs.get] 
    external setListStylePosition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> listStylePosition:string ->  unit = "listStylePosition" [@@bs.set]
    external listStyleType : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "listStyleType" [@@bs.get] 
    external setListStyleType : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> listStyleType:string ->  unit = "listStyleType" [@@bs.set]
    external listStyleImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "listStyleImage" [@@bs.get] 
    external setListStyleImage : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> listStyleImage:string ->  unit = "listStyleImage" [@@bs.set]
    external quotes : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "quotes" [@@bs.get] 
    external setQuotes : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> quotes:string ->  unit = "quotes" [@@bs.set]
    external counterIncrement : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "counterIncrement" [@@bs.get] 
    external setCounterIncrement : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> counterIncrement:string ->  unit = "counterIncrement" [@@bs.set]
    external counterReset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "counterReset" [@@bs.get] 
    external setCounterReset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> counterReset:string ->  unit = "counterReset" [@@bs.set]
    external overflow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "overflow" [@@bs.get] 
    external setOverflow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> overflow:string ->  unit = "overflow" [@@bs.set]
    external overflowX : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "overflowX" [@@bs.get] 
    external setOverflowX : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> overflowX:string ->  unit = "overflowX" [@@bs.set]
    external overflowY : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "overflowY" [@@bs.get] 
    external setOverflowY : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> overflowY:string ->  unit = "overflowY" [@@bs.set]
    external overflowWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "overflowWrap" [@@bs.get] 
    external setOverflowWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> overflowWrap:string ->  unit = "overflowWrap" [@@bs.set]
    external tableLayout : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "tableLayout" [@@bs.get] 
    external setTableLayout : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> tableLayout:string ->  unit = "tableLayout" [@@bs.set]
    external borderCollapse : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "borderCollapse" [@@bs.get] 
    external setBorderCollapse : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> borderCollapse:string ->  unit = "borderCollapse" [@@bs.set]
    external emptyCells : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "emptyCells" [@@bs.get] 
    external setEmptyCells : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> emptyCells:string ->  unit = "emptyCells" [@@bs.set]
    external captionSide : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "captionSide" [@@bs.get] 
    external setCaptionSide : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> captionSide:string ->  unit = "captionSide" [@@bs.set]
    external whiteSpace : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "whiteSpace" [@@bs.get] 
    external setWhiteSpace : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> whiteSpace:string ->  unit = "whiteSpace" [@@bs.set]
    external writingMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "writingMode" [@@bs.get] 
    external setWritingMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> writingMode:string ->  unit = "writingMode" [@@bs.set]
    external letterSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "letterSpacing" [@@bs.get] 
    external setLetterSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> letterSpacing:string ->  unit = "letterSpacing" [@@bs.set]
    external wordBreak : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "wordBreak" [@@bs.get] 
    external setWordBreak : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> wordBreak:string ->  unit = "wordBreak" [@@bs.set]
    external wordSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "wordSpacing" [@@bs.get] 
    external setWordSpacing : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> wordSpacing:string ->  unit = "wordSpacing" [@@bs.set]
    external wordWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "wordWrap" [@@bs.get] 
    external setWordWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> wordWrap:string ->  unit = "wordWrap" [@@bs.set]
    external textOverflow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textOverflow" [@@bs.get] 
    external setTextOverflow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textOverflow:string ->  unit = "textOverflow" [@@bs.set]
    external textAlign : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textAlign" [@@bs.get] 
    external setTextAlign : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textAlign:string ->  unit = "textAlign" [@@bs.set]
    external textDecoration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textDecoration" [@@bs.get] 
    external setTextDecoration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textDecoration:string ->  unit = "textDecoration" [@@bs.set]
    external textDecorationLine : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textDecorationLine" [@@bs.get] 
    external setTextDecorationLine : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textDecorationLine:string ->  unit = "textDecorationLine" [@@bs.set]
    external textIndent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textIndent" [@@bs.get] 
    external setTextIndent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textIndent:string ->  unit = "textIndent" [@@bs.set]
    external textJustify : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textJustify" [@@bs.get] 
    external setTextJustify : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textJustify:string ->  unit = "textJustify" [@@bs.set]
    external textRendering : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textRendering" [@@bs.get] 
    external setTextRendering : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textRendering:string ->  unit = "textRendering" [@@bs.set]
    external textTransform : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "textTransform" [@@bs.get] 
    external setTextTransform : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> textTransform:string ->  unit = "textTransform" [@@bs.set]
    external font : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "font" [@@bs.get] 
    external setFont : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> font:string ->  unit = "font" [@@bs.set]
    external fontFamily : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontFamily" [@@bs.get] 
    external setFontFamily : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontFamily:string ->  unit = "fontFamily" [@@bs.set]
    external fontSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontSize" [@@bs.get] 
    external setFontSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontSize:string ->  unit = "fontSize" [@@bs.set]
    external fontStretch : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontStretch" [@@bs.get] 
    external setFontStretch : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontStretch:string ->  unit = "fontStretch" [@@bs.set]
    external fontStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontStyle" [@@bs.get] 
    external setFontStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontStyle:string ->  unit = "fontStyle" [@@bs.set]
    external fontVariant : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontVariant" [@@bs.get] 
    external setFontVariant : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontVariant:string ->  unit = "fontVariant" [@@bs.set]
    external fontVariantCaps : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontVariantCaps" [@@bs.get] 
    external setFontVariantCaps : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontVariantCaps:string ->  unit = "fontVariantCaps" [@@bs.set]
    external fontWeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "fontWeight" [@@bs.get] 
    external setFontWeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> fontWeight:string ->  unit = "fontWeight" [@@bs.set]
    external margin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "margin" [@@bs.get] 
    external setMargin : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> margin:string ->  unit = "margin" [@@bs.set]
    external marginBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginBottom" [@@bs.get] 
    external setMarginBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginBottom:string ->  unit = "marginBottom" [@@bs.set]
    external marginLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginLeft" [@@bs.get] 
    external setMarginLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginLeft:string ->  unit = "marginLeft" [@@bs.set]
    external marginRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginRight" [@@bs.get] 
    external setMarginRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginRight:string ->  unit = "marginRight" [@@bs.set]
    external marginTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginTop" [@@bs.get] 
    external setMarginTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginTop:string ->  unit = "marginTop" [@@bs.set]
    external marginBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginBlockStart" [@@bs.get] 
    external setMarginBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginBlockStart:string ->  unit = "marginBlockStart" [@@bs.set]
    external marginBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginBlockEnd" [@@bs.get] 
    external setMarginBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginBlockEnd:string ->  unit = "marginBlockEnd" [@@bs.set]
    external marginInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginInlineStart" [@@bs.get] 
    external setMarginInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginInlineStart:string ->  unit = "marginInlineStart" [@@bs.set]
    external marginInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "marginInlineEnd" [@@bs.get] 
    external setMarginInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> marginInlineEnd:string ->  unit = "marginInlineEnd" [@@bs.set]
    external padding : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "padding" [@@bs.get] 
    external setPadding : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> padding:string ->  unit = "padding" [@@bs.set]
    external paddingBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingBottom" [@@bs.get] 
    external setPaddingBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingBottom:string ->  unit = "paddingBottom" [@@bs.set]
    external paddingLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingLeft" [@@bs.get] 
    external setPaddingLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingLeft:string ->  unit = "paddingLeft" [@@bs.set]
    external paddingRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingRight" [@@bs.get] 
    external setPaddingRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingRight:string ->  unit = "paddingRight" [@@bs.set]
    external paddingTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingTop" [@@bs.get] 
    external setPaddingTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingTop:string ->  unit = "paddingTop" [@@bs.set]
    external paddingBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingBlockStart" [@@bs.get] 
    external setPaddingBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingBlockStart:string ->  unit = "paddingBlockStart" [@@bs.set]
    external paddingBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingBlockEnd" [@@bs.get] 
    external setPaddingBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingBlockEnd:string ->  unit = "paddingBlockEnd" [@@bs.set]
    external paddingInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingInlineStart" [@@bs.get] 
    external setPaddingInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingInlineStart:string ->  unit = "paddingInlineStart" [@@bs.set]
    external paddingInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "paddingInlineEnd" [@@bs.get] 
    external setPaddingInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> paddingInlineEnd:string ->  unit = "paddingInlineEnd" [@@bs.set]
    external outline : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "outline" [@@bs.get] 
    external setOutline : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> outline:string ->  unit = "outline" [@@bs.set]
    external outlineColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "outlineColor" [@@bs.get] 
    external setOutlineColor : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> outlineColor:string ->  unit = "outlineColor" [@@bs.set]
    external outlineStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "outlineStyle" [@@bs.get] 
    external setOutlineStyle : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> outlineStyle:string ->  unit = "outlineStyle" [@@bs.set]
    external outlineWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "outlineWidth" [@@bs.get] 
    external setOutlineWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> outlineWidth:string ->  unit = "outlineWidth" [@@bs.set]
    external outlineOffset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "outlineOffset" [@@bs.get] 
    external setOutlineOffset : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> outlineOffset:string ->  unit = "outlineOffset" [@@bs.set]
    external position : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "position" [@@bs.get] 
    external setPosition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> position:string ->  unit = "position" [@@bs.set]
    external pointerEvents : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "pointerEvents" [@@bs.get] 
    external setPointerEvents : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> pointerEvents:string ->  unit = "pointerEvents" [@@bs.set]
    external top : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "top" [@@bs.get] 
    external setTop : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> top:string ->  unit = "top" [@@bs.set]
    external right : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "right" [@@bs.get] 
    external setRight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> right:string ->  unit = "right" [@@bs.set]
    external left : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "left" [@@bs.get] 
    external setLeft : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> left:string ->  unit = "left" [@@bs.set]
    external bottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "bottom" [@@bs.get] 
    external setBottom : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> bottom:string ->  unit = "bottom" [@@bs.set]
    external offsetBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "offsetBlockStart" [@@bs.get] 
    external setOffsetBlockStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> offsetBlockStart:string ->  unit = "offsetBlockStart" [@@bs.set]
    external offsetBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "offsetBlockEnd" [@@bs.get] 
    external setOffsetBlockEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> offsetBlockEnd:string ->  unit = "offsetBlockEnd" [@@bs.set]
    external offsetInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "offsetInlineStart" [@@bs.get] 
    external setOffsetInlineStart : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> offsetInlineStart:string ->  unit = "offsetInlineStart" [@@bs.set]
    external offsetInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "offsetInlineEnd" [@@bs.get] 
    external setOffsetInlineEnd : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> offsetInlineEnd:string ->  unit = "offsetInlineEnd" [@@bs.set]
    external height : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "height" [@@bs.get] 
    external setHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> height:string ->  unit = "height" [@@bs.set]
    external minHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "minHeight" [@@bs.get] 
    external setMinHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> minHeight:string ->  unit = "minHeight" [@@bs.set]
    external maxHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "maxHeight" [@@bs.get] 
    external setMaxHeight : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> maxHeight:string ->  unit = "maxHeight" [@@bs.set]
    external width : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "width" [@@bs.get] 
    external setWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> width:string ->  unit = "width" [@@bs.set]
    external minWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "minWidth" [@@bs.get] 
    external setMinWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> minWidth:string ->  unit = "minWidth" [@@bs.set]
    external maxWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "maxWidth" [@@bs.get] 
    external setMaxWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> maxWidth:string ->  unit = "maxWidth" [@@bs.set]
    external blockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "blockSize" [@@bs.get] 
    external setBlockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> blockSize:string ->  unit = "blockSize" [@@bs.set]
    external inlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "inlineSize" [@@bs.get] 
    external setInlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> inlineSize:string ->  unit = "inlineSize" [@@bs.set]
    external maxBlockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "maxBlockSize" [@@bs.get] 
    external setMaxBlockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> maxBlockSize:string ->  unit = "maxBlockSize" [@@bs.set]
    external maxInlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "maxInlineSize" [@@bs.get] 
    external setMaxInlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> maxInlineSize:string ->  unit = "maxInlineSize" [@@bs.set]
    external minBlockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "minBlockSize" [@@bs.get] 
    external setMinBlockSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> minBlockSize:string ->  unit = "minBlockSize" [@@bs.set]
    external minInlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "minInlineSize" [@@bs.get] 
    external setMinInlineSize : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> minInlineSize:string ->  unit = "minInlineSize" [@@bs.set]
    external zIndex : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "zIndex" [@@bs.get] 
    external setZIndex : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> zIndex:string ->  unit = "zIndex" [@@bs.set]
    external imageRendering : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "imageRendering" [@@bs.get] 
    external setImageRendering : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> imageRendering:string ->  unit = "imageRendering" [@@bs.set]
    external columnCount : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "columnCount" [@@bs.get] 
    external setColumnCount : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> columnCount:string ->  unit = "columnCount" [@@bs.set]
    external columnWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "columnWidth" [@@bs.get] 
    external setColumnWidth : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> columnWidth:string ->  unit = "columnWidth" [@@bs.set]
    external columns : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "columns" [@@bs.get] 
    external setColumns : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> columns:string ->  unit = "columns" [@@bs.set]
    external columnGap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "columnGap" [@@bs.get] 
    external setColumnGap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> columnGap:string ->  unit = "columnGap" [@@bs.set]
    external transition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transition" [@@bs.get] 
    external setTransition : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transition:string ->  unit = "transition" [@@bs.set]
    external transitionDuration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transitionDuration" [@@bs.get] 
    external setTransitionDuration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transitionDuration:string ->  unit = "transitionDuration" [@@bs.set]
    external transitionTimingFunction : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transitionTimingFunction" [@@bs.get] 
    external setTransitionTimingFunction : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transitionTimingFunction:string ->  unit = "transitionTimingFunction" [@@bs.set]
    external transitionProperty : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transitionProperty" [@@bs.get] 
    external setTransitionProperty : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transitionProperty:string ->  unit = "transitionProperty" [@@bs.set]
    external transitionDelay : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "transitionDelay" [@@bs.get] 
    external setTransitionDelay : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> transitionDelay:string ->  unit = "transitionDelay" [@@bs.set]
    external flex : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flex" [@@bs.get] 
    external setFlex : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flex:string ->  unit = "flex" [@@bs.set]
    external flexFlow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexFlow" [@@bs.get] 
    external setFlexFlow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexFlow:string ->  unit = "flexFlow" [@@bs.set]
    external flexDirection : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexDirection" [@@bs.get] 
    external setFlexDirection : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexDirection:string ->  unit = "flexDirection" [@@bs.set]
    external flexWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexWrap" [@@bs.get] 
    external setFlexWrap : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexWrap:string ->  unit = "flexWrap" [@@bs.set]
    external justifyContent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "justifyContent" [@@bs.get] 
    external setJustifyContent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> justifyContent:string ->  unit = "justifyContent" [@@bs.set]
    external alignItems : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "alignItems" [@@bs.get] 
    external setAlignItems : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> alignItems:string ->  unit = "alignItems" [@@bs.set]
    external alignContent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "alignContent" [@@bs.get] 
    external setAlignContent : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> alignContent:string ->  unit = "alignContent" [@@bs.set]
    external order : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "order" [@@bs.get] 
    external setOrder : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> order:string ->  unit = "order" [@@bs.set]
    external flexBasis : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexBasis" [@@bs.get] 
    external setFlexBasis : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexBasis:string ->  unit = "flexBasis" [@@bs.set]
    external flexGrow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexGrow" [@@bs.get] 
    external setFlexGrow : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexGrow:string ->  unit = "flexGrow" [@@bs.set]
    external flexShrink : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "flexShrink" [@@bs.get] 
    external setFlexShrink : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> flexShrink:string ->  unit = "flexShrink" [@@bs.set]
    external alignSelf : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "alignSelf" [@@bs.get] 
    external setAlignSelf : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> alignSelf:string ->  unit = "alignSelf" [@@bs.set]
    external animation : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animation" [@@bs.get] 
    external setAnimation : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animation:string ->  unit = "animation" [@@bs.set]
    external animationName : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationName" [@@bs.get] 
    external setAnimationName : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationName:string ->  unit = "animationName" [@@bs.set]
    external animationDuration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationDuration" [@@bs.get] 
    external setAnimationDuration : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationDuration:string ->  unit = "animationDuration" [@@bs.set]
    external animationTimingFunction : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationTimingFunction" [@@bs.get] 
    external setAnimationTimingFunction : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationTimingFunction:string ->  unit = "animationTimingFunction" [@@bs.set]
    external animationIterationCount : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationIterationCount" [@@bs.get] 
    external setAnimationIterationCount : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationIterationCount:string ->  unit = "animationIterationCount" [@@bs.set]
    external animationDirection : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationDirection" [@@bs.get] 
    external setAnimationDirection : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationDirection:string ->  unit = "animationDirection" [@@bs.set]
    external animationPlayState : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationPlayState" [@@bs.get] 
    external setAnimationPlayState : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationPlayState:string ->  unit = "animationPlayState" [@@bs.set]
    external animationFillMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationFillMode" [@@bs.get] 
    external setAnimationFillMode : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationFillMode:string ->  unit = "animationFillMode" [@@bs.set]
    external animationDelay : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like ->  string = "animationDelay" [@@bs.get] 
    external setAnimationDelay : cSSStyleDeclaration:('own) _CSSStyleDeclaration_like -> animationDelay:string ->  unit = "animationDelay" [@@bs.set]
    external getPropertyPriority : property:string ->  string = "getPropertyPriority" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external getPropertyValue : property:string ->  string = "getPropertyValue" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external item : index:int ->  string = "item" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external removeProperty : property:string ->  string = "removeProperty" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external setProperty : property:string -> value:string -> ?priority:string Js.undefined ->  unit = "setProperty" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external setPropertyPriority : property:string -> priority:string ->  unit = "setPropertyPriority" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    external setPropertyValue : property:string -> value:string ->  unit = "setPropertyValue" [@@bs.send.pipe: ('own) _CSSStyleDeclaration_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSStyleDeclaration) in
      (return:(_) _CSSStyleDeclaration_like)
    
    let cast_to_Dom_cssStyleDeclaration x =
      let return = Obj.magic (x:_CSSStyleDeclaration) in
      (return:Dom.cssStyleDeclaration)
    
    let cast_from_Dom_cssStyleDeclaration x =
      let return = Obj.magic (x:Dom.cssStyleDeclaration) in
      (return:_CSSStyleDeclaration)
    
    let setProperty ~property ~value ?priority cSSStyleDeclaration =
      let conv_priority = Js_undefined.from_opt in
      let priority = conv_priority priority in
      setProperty ~property ~value ~priority cSSStyleDeclaration
    
end
 module DOMQuad = struct
    
    
    external p1 : dOMQuad:('own) _DOMQuad_like ->  _DOMPoint = "p1" [@@bs.get] 
    external p2 : dOMQuad:('own) _DOMQuad_like ->  _DOMPoint = "p2" [@@bs.get] 
    external p3 : dOMQuad:('own) _DOMQuad_like ->  _DOMPoint = "p3" [@@bs.get] 
    external p4 : dOMQuad:('own) _DOMQuad_like ->  _DOMPoint = "p4" [@@bs.get] 
    external fromQuad : ?other:(_) _DOMQuadInit_like Js.undefined ->  _DOMQuad = "fromQuad" [@@bs.send.pipe: ('own) _DOMQuad_like] 
    external fromRect : ?other:(_) _DOMRectInit_like Js.undefined ->  _DOMQuad = "fromRect" [@@bs.send.pipe: ('own) _DOMQuad_like] 
    external getBounds :  _DOMRect = "getBounds" [@@bs.send.pipe: ('own) _DOMQuad_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMQuad) in
      (return:(_) _DOMQuad_like)
    
    let fromQuad ?other dOMQuad =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromQuad ~other dOMQuad
    
    let fromRect ?other dOMQuad =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromRect ~other dOMQuad
    
end
 module Request = struct
    
    
    external bodyUsed : request:('own) _Request_like ->  bool = "bodyUsed" [@@bs.get] 
    external method_ : request:('own) _Request_like ->  string = "method" [@@bs.get] 
    external url : request:('own) _Request_like ->  string = "url" [@@bs.get] 
    external headers : request:('own) _Request_like ->  _Headers = "headers" [@@bs.get] 
    external type_ : request:('own) _Request_like ->  string = "type" [@@bs.get] 
    external destination : request:('own) _Request_like ->  string = "destination" [@@bs.get] 
    external referrer : request:('own) _Request_like ->  string = "referrer" [@@bs.get] 
    external referrerPolicy : request:('own) _Request_like ->  string = "referrerPolicy" [@@bs.get] 
    external mode : request:('own) _Request_like ->  string = "mode" [@@bs.get] 
    external credentials : request:('own) _Request_like ->  string = "credentials" [@@bs.get] 
    external cache : request:('own) _Request_like ->  string = "cache" [@@bs.get] 
    external redirect : request:('own) _Request_like ->  string = "redirect" [@@bs.get] 
    external integrity : request:('own) _Request_like ->  string = "integrity" [@@bs.get] 
    external blob :  _Blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) _Request_like] 
    external clone :  _Request = "clone" [@@bs.send.pipe: ('own) _Request_like] 
    external formData :  _FormData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) _Request_like] 
    external json :  'a238 Js.Promise.t = "json" [@@bs.send.pipe: ('own) _Request_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) _Request_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Request) in
      (return:(_) _Request_like)
    
end
 module DOMTokenList = struct
    
    
    external length : dOMTokenList:('own) _DOMTokenList_like ->  int = "length" [@@bs.get] 
    external value : dOMTokenList:('own) _DOMTokenList_like ->  string = "value" [@@bs.get] 
    external setValue : dOMTokenList:('own) _DOMTokenList_like -> value:string ->  unit = "value" [@@bs.set]
    external add : dOMTokenList:('own) _DOMTokenList_like ->  (('own) _DOMTokenList_like, unit, (string)) variadic_func = "add" [@@bs.get]
    external contains : token:string ->  bool = "contains" [@@bs.send.pipe: ('own) _DOMTokenList_like] 
    external item : index:int ->  string option = "item" [@@bs.send.pipe: ('own) _DOMTokenList_like] [@@bs.return null_to_opt]
    external remove : dOMTokenList:('own) _DOMTokenList_like ->  (('own) _DOMTokenList_like, unit, (string)) variadic_func = "remove" [@@bs.get]
    external replace : token:string -> newToken:string ->  unit = "replace" [@@bs.send.pipe: ('own) _DOMTokenList_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _DOMTokenList_like] 
    external toggle : token:string -> ?force:Js.boolean Js.undefined ->  bool = "toggle" [@@bs.send.pipe: ('own) _DOMTokenList_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMTokenList) in
      (return:(_) _DOMTokenList_like)
    
    let cast_to_Dom_domTokenList x =
      let return = Obj.magic (x:_DOMTokenList) in
      (return:Dom.domTokenList)
    
    let cast_from_Dom_domTokenList x =
      let return = Obj.magic (x:Dom.domTokenList) in
      (return:_DOMTokenList)
    
    let add ~tokens dOMTokenList =
      let func = add dOMTokenList in
      let args = to_arg tokens in
      apply func dOMTokenList args
    
    let remove ~tokens dOMTokenList =
      let func = remove dOMTokenList in
      let args = to_arg tokens in
      apply func dOMTokenList args
    
    let toggle ~token ?force dOMTokenList =
      let conv_force = Js_undefined.from_opt in
      let force = conv_force force in
      toggle ~token ~force dOMTokenList
    
end
 module Promise = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:__Promise) in
      (return:(_) __Promise_like)
    
end
 module VRPose = struct
    
    
    external position : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "position" [@@bs.get] [@@bs.return null_to_opt]
    external linearVelocity : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "linearVelocity" [@@bs.get] [@@bs.return null_to_opt]
    external linearAcceleration : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "linearAcceleration" [@@bs.get] [@@bs.return null_to_opt]
    external orientation : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "orientation" [@@bs.get] [@@bs.return null_to_opt]
    external angularVelocity : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "angularVelocity" [@@bs.get] [@@bs.return null_to_opt]
    external angularAcceleration : vRPose:('own) _VRPose_like ->  Js_typed_array.Float32Array.t option = "angularAcceleration" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_VRPose) in
      (return:(_) _VRPose_like)
    
end
 module GamepadButtonList = struct
    
    
    external length : gamepadButtonList:('own) _GamepadButtonList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _GamepadButton option = "item" [@@bs.send.pipe: ('own) _GamepadButtonList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_GamepadButtonList) in
      (return:(_) _GamepadButtonList_like)
    
end
 module DOMPointReadOnly = struct
    
    
    external x : dOMPointReadOnly:('own) _DOMPointReadOnly_like ->  float = "x" [@@bs.get] 
    external y : dOMPointReadOnly:('own) _DOMPointReadOnly_like ->  float = "y" [@@bs.get] 
    external z : dOMPointReadOnly:('own) _DOMPointReadOnly_like ->  float = "z" [@@bs.get] 
    external w : dOMPointReadOnly:('own) _DOMPointReadOnly_like ->  float = "w" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMPointReadOnly) in
      (return:(_) _DOMPointReadOnly_like)
    
end
 module Client = struct
    
    
    external url : client:('own) _Client_like ->  string = "url" [@@bs.get] 
    external frameType : client:('own) _Client_like ->  string = "frameType" [@@bs.get] 
    external id : client:('own) _Client_like ->  string = "id" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_Client) in
      (return:(_) _Client_like)
    
end
 module OESTextureFloatLinear = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_OESTextureFloatLinear) in
      (return:(_) _OESTextureFloatLinear_like)
    
end
 module WebGLShaderPrecisionFormat = struct
    
    
    external rangeMin : webGLShaderPrecisionFormat:('own) _WebGLShaderPrecisionFormat_like ->  int = "rangeMin" [@@bs.get] 
    external rangeMax : webGLShaderPrecisionFormat:('own) _WebGLShaderPrecisionFormat_like ->  int = "rangeMax" [@@bs.get] 
    external precision : webGLShaderPrecisionFormat:('own) _WebGLShaderPrecisionFormat_like ->  int = "precision" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_WebGLShaderPrecisionFormat) in
      (return:(_) _WebGLShaderPrecisionFormat_like)
    
end
 module Response = struct
    
    
    external bodyUsed : response:('own) _Response_like ->  bool = "bodyUsed" [@@bs.get] 
    external type_ : response:('own) _Response_like ->  string = "type" [@@bs.get] 
    external url : response:('own) _Response_like ->  string = "url" [@@bs.get] 
    external redirected : response:('own) _Response_like ->  bool = "redirected" [@@bs.get] 
    external status : response:('own) _Response_like ->  int = "status" [@@bs.get] 
    external ok : response:('own) _Response_like ->  bool = "ok" [@@bs.get] 
    external statusText : response:('own) _Response_like ->  string = "statusText" [@@bs.get] 
    external headers : response:('own) _Response_like ->  _Headers = "headers" [@@bs.get] 
    external blob :  _Blob Js.Promise.t = "blob" [@@bs.send.pipe: ('own) _Response_like] 
    external clone :  _Response = "clone" [@@bs.send.pipe: ('own) _Response_like] 
    external error :  _Response = "error" [@@bs.send.pipe: ('own) _Response_like] 
    external formData :  _FormData Js.Promise.t = "formData" [@@bs.send.pipe: ('own) _Response_like] 
    external json :  'a239 Js.Promise.t = "json" [@@bs.send.pipe: ('own) _Response_like] 
    external redirect : url:string -> ?status:int Js.undefined ->  _Response = "redirect" [@@bs.send.pipe: ('own) _Response_like] 
    external text :  string Js.Promise.t = "text" [@@bs.send.pipe: ('own) _Response_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Response) in
      (return:(_) _Response_like)
    
    let redirect ~url ?status response =
      let conv_status = Js_undefined.from_opt in
      let status = conv_status status in
      redirect ~url ~status response
    
end
 module MediaError = struct
    
    
    external code : mediaError:('own) _MediaError_like ->  int = "code" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_MediaError) in
      (return:(_) _MediaError_like)
    
    let _MEDIA_ERR_ABORTED  =
      
      1
    
    let _MEDIA_ERR_NETWORK  =
      
      2
    
    let _MEDIA_ERR_DECODE  =
      
      3
    
    let _MEDIA_ERR_SRC_NOT_SUPPORTED  =
      
      4
    
end
 module VRStageParameters = struct
    
    
    external sittingToStandingTransform : vRStageParameters:('own) _VRStageParameters_like ->  Js_typed_array.Float32Array.t = "sittingToStandingTransform" [@@bs.get] 
    external sizeX : vRStageParameters:('own) _VRStageParameters_like ->  float = "sizeX" [@@bs.get] 
    external sizeZ : vRStageParameters:('own) _VRStageParameters_like ->  float = "sizeZ" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_VRStageParameters) in
      (return:(_) _VRStageParameters_like)
    
end
 module AbstractWorker = struct
    
    
    external onerror : abstractWorker:('own) _AbstractWorker_like ->  (_Event -> 'a240 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : abstractWorker:('own) _AbstractWorker_like -> onerror:(_Event -> 'a241 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_AbstractWorker) in
      (return:(_) _AbstractWorker_like)
    
end
 module TestWorklet = struct
    
    
    external addModule : moduleURL:string -> ?options:(_) _WorkletOptions_like Js.undefined ->  unit Js.Promise.t = "addModule" [@@bs.send.pipe: ('own) _TestWorklet_like] 
    external lookup : key:string ->  string option = "lookup" [@@bs.send.pipe: ('own) _TestWorklet_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_TestWorklet) in
      (return:(_) _TestWorklet_like)
    
    let addModule ~moduleURL ?options testWorklet =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      addModule ~moduleURL ~options testWorklet
    
end
 module CSSRule = struct
    
    
    external type_ : cSSRule:('own) _CSSRule_like ->  int = "type" [@@bs.get] 
    external cssText : cSSRule:('own) _CSSRule_like ->  string = "cssText" [@@bs.get] 
    external setCssText : cSSRule:('own) _CSSRule_like -> cssText:string ->  unit = "cssText" [@@bs.set]
    external parentStyleSheet : cSSRule:('own) _CSSRule_like ->  _CSSStyleSheet option = "parentStyleSheet" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_CSSRule) in
      (return:(_) _CSSRule_like)
    
    let _STYLE_RULE  =
      
      1
    
    let _CHARSET_RULE  =
      
      2
    
    let _IMPORT_RULE  =
      
      3
    
    let _MEDIA_RULE  =
      
      4
    
    let _FONT_FACE_RULE  =
      
      5
    
    let _PAGE_RULE  =
      
      6
    
    let _MARGIN_RULE  =
      
      9
    
    let _NAMESPACE_RULE  =
      
      10
    
    let _KEYFRAMES_RULE  =
      
      7
    
    let _KEYFRAME_RULE  =
      
      8
    
    let _VIEWPORT_RULE  =
      
      15
    
    let _SUPPORTS_RULE  =
      
      12
    
end
 module BluetoothUUID = struct
    
    
    external canonicalUUID : alias:int ->  string = "canonicalUUID" [@@bs.send.pipe: ('own) _BluetoothUUID_like] 
    external getCharacteristic : name:'a242 ->  string = "getCharacteristic" [@@bs.send.pipe: ('own) _BluetoothUUID_like] 
    external getDescriptor : name:'a243 ->  string = "getDescriptor" [@@bs.send.pipe: ('own) _BluetoothUUID_like] 
    external getService : name:'a244 ->  string = "getService" [@@bs.send.pipe: ('own) _BluetoothUUID_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothUUID) in
      (return:(_) _BluetoothUUID_like)
    
    let getCharacteristic ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getCharacteristic ~name bluetoothUUID in
      return
    
    let getDescriptor ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getDescriptor ~name bluetoothUUID in
      return
    
    let getService ~name bluetoothUUID =
      let conv_name = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let name = conv_name name in
      let return = getService ~name bluetoothUUID in
      return
    
end
 module CanvasRenderingContext2D = struct
    
    
    external lineWidth : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "lineWidth" [@@bs.get] 
    external setLineWidth : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> lineWidth:float ->  unit = "lineWidth" [@@bs.set]
    external lineCap : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  string = "lineCap" [@@bs.get] 
    external setLineCap : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> lineCap:string ->  unit = "lineCap" [@@bs.set]
    external lineJoin : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  string = "lineJoin" [@@bs.get] 
    external setLineJoin : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> lineJoin:string ->  unit = "lineJoin" [@@bs.set]
    external miterLimit : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "miterLimit" [@@bs.get] 
    external setMiterLimit : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> miterLimit:float ->  unit = "miterLimit" [@@bs.set]
    external shadowOffsetX : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "shadowOffsetX" [@@bs.get] 
    external setShadowOffsetX : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> shadowOffsetX:float ->  unit = "shadowOffsetX" [@@bs.set]
    external shadowOffsetY : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "shadowOffsetY" [@@bs.get] 
    external setShadowOffsetY : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> shadowOffsetY:float ->  unit = "shadowOffsetY" [@@bs.set]
    external shadowBlur : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "shadowBlur" [@@bs.get] 
    external setShadowBlur : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> shadowBlur:float ->  unit = "shadowBlur" [@@bs.set]
    external shadowColor : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  string = "shadowColor" [@@bs.get] 
    external setShadowColor : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> shadowColor:string ->  unit = "shadowColor" [@@bs.set]
    external strokeStyle : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  'a245 = "strokeStyle" [@@bs.get] 
    external setStrokeStyle : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> strokeStyle:'a246 ->  unit = "strokeStyle" [@@bs.set]
    external fillStyle : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  'a247 = "fillStyle" [@@bs.get] 
    external setFillStyle : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> fillStyle:'a248 ->  unit = "fillStyle" [@@bs.set]
    external imageSmoothingEnabled : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  bool = "imageSmoothingEnabled" [@@bs.get] 
    external setImageSmoothingEnabled : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> imageSmoothingEnabled:Js.boolean ->  unit = "imageSmoothingEnabled" [@@bs.set]
    external globalAlpha : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  float = "globalAlpha" [@@bs.get] 
    external setGlobalAlpha : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> globalAlpha:float ->  unit = "globalAlpha" [@@bs.set]
    external globalCompositeOperation : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  string = "globalCompositeOperation" [@@bs.get] 
    external setGlobalCompositeOperation : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like -> globalCompositeOperation:string ->  unit = "globalCompositeOperation" [@@bs.set]
    external canvas : canvasRenderingContext2D:('own) _CanvasRenderingContext2D_like ->  _HTMLCanvasElement = "canvas" [@@bs.get] 
    external arc : x:float -> y:float -> radius:float -> startAngle:float -> endAngle:float -> ?anticlockwise:Js.boolean Js.undefined ->  unit = "arc" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external arcTo : x1:float -> y1:float -> x2:float -> y2:float -> radius:float ->  unit = "arcTo" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external beginPath :  unit = "beginPath" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external bezierCurveTo : cp1x:float -> cp1y:float -> cp2x:float -> cp2y:float -> x:float -> y:float ->  unit = "bezierCurveTo" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external clearRect : x:float -> y:float -> w:float -> h:float ->  unit = "clearRect" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external clip : ?fillRule:string Js.undefined ->  unit = "clip" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external closePath :  unit = "closePath" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external createImageData : sw:float -> sh:float ->  _ImageData = "createImageData" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external createLinearGradient : x0:float -> y0:float -> x1:float -> y1:float ->  _CanvasGradient = "createLinearGradient" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external createPattern : image:'a249 -> repetition:string ->  _CanvasPattern = "createPattern" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external createRadialGradient : x0:float -> y0:float -> r0:float -> x1:float -> y1:float -> r1:float ->  _CanvasGradient = "createRadialGradient" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external drawImage : image:'a250 -> dx:float -> dy:float ->  unit = "drawImage" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external fill : ?fillRule:string Js.undefined ->  unit = "fill" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external fillRect : x:float -> y:float -> w:float -> h:float ->  unit = "fillRect" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external getImageData : sx:float -> sy:float -> sw:float -> sh:float ->  _ImageData = "getImageData" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external isPointInPath : x:float -> y:float -> ?fillRule:string Js.undefined ->  bool = "isPointInPath" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external lineTo : x:float -> y:float ->  unit = "lineTo" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external moveTo : x:float -> y:float ->  unit = "moveTo" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external putImageData : imagedata:(_) _ImageData_like -> dx:float -> dy:float ->  unit = "putImageData" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external quadraticCurveTo : cpx:float -> cpy:float -> x:float -> y:float ->  unit = "quadraticCurveTo" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external rect : x:float -> y:float -> w:float -> h:float ->  unit = "rect" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external resetTransform :  unit = "resetTransform" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external restore :  unit = "restore" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external rotate : angle:float ->  unit = "rotate" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external save :  unit = "save" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external scale : x:float -> y:float ->  unit = "scale" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external setTransform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "setTransform" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external stroke :  unit = "stroke" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external strokeRect : x:float -> y:float -> w:float -> h:float ->  unit = "strokeRect" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external transform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "transform" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    external translate : x:float -> y:float ->  unit = "translate" [@@bs.send.pipe: ('own) _CanvasRenderingContext2D_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasRenderingContext2D) in
      (return:(_) _CanvasRenderingContext2D_like)
    
    let arc ~x ~y ~radius ~startAngle ~endAngle ?anticlockwise canvasRenderingContext2D =
      let conv_anticlockwise = Js_undefined.from_opt in
      let anticlockwise = conv_anticlockwise anticlockwise in
      arc ~x ~y ~radius ~startAngle ~endAngle ~anticlockwise canvasRenderingContext2D
    
    let clip ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = clip ~fillRule canvasRenderingContext2D in
      return
    
    let clip ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      clip ~fillRule canvasRenderingContext2D
    
    let createPattern ~image ~repetition canvasRenderingContext2D =
      let conv_image = function
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) _CanvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = createPattern ~image ~repetition canvasRenderingContext2D in
      return
    
    let drawImage ~image ~dx ~dy canvasRenderingContext2D =
      let conv_image = function
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) _CanvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = drawImage ~image ~dx ~dy canvasRenderingContext2D in
      return
    
    let fill ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = fill ~fillRule canvasRenderingContext2D in
      return
    
    let fill ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      fill ~fillRule canvasRenderingContext2D
    
    let isPointInPath ~x ~y ~fillRule canvasRenderingContext2D =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = isPointInPath ~x ~y ~fillRule canvasRenderingContext2D in
      return
    
    let isPointInPath ~x ~y ?fillRule canvasRenderingContext2D =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      isPointInPath ~x ~y ~fillRule canvasRenderingContext2D
    
end
 module CanvasState = struct
    
    
    external restore :  unit = "restore" [@@bs.send.pipe: ('own) _CanvasState_like] 
    external save :  unit = "save" [@@bs.send.pipe: ('own) _CanvasState_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasState) in
      (return:(_) _CanvasState_like)
    
end
 module CanvasTransform = struct
    
    
    external resetTransform :  unit = "resetTransform" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    external rotate : angle:float ->  unit = "rotate" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    external scale : x:float -> y:float ->  unit = "scale" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    external setTransform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "setTransform" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    external transform : a:float -> b:float -> c:float -> d:float -> e:float -> f:float ->  unit = "transform" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    external translate : x:float -> y:float ->  unit = "translate" [@@bs.send.pipe: ('own) _CanvasTransform_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasTransform) in
      (return:(_) _CanvasTransform_like)
    
end
 module CanvasCompositing = struct
    
    
    external globalAlpha : canvasCompositing:('own) _CanvasCompositing_like ->  float = "globalAlpha" [@@bs.get] 
    external setGlobalAlpha : canvasCompositing:('own) _CanvasCompositing_like -> globalAlpha:float ->  unit = "globalAlpha" [@@bs.set]
    external globalCompositeOperation : canvasCompositing:('own) _CanvasCompositing_like ->  string = "globalCompositeOperation" [@@bs.get] 
    external setGlobalCompositeOperation : canvasCompositing:('own) _CanvasCompositing_like -> globalCompositeOperation:string ->  unit = "globalCompositeOperation" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CanvasCompositing) in
      (return:(_) _CanvasCompositing_like)
    
end
 module CanvasImageSmoothing = struct
    
    
    external imageSmoothingEnabled : canvasImageSmoothing:('own) _CanvasImageSmoothing_like ->  bool = "imageSmoothingEnabled" [@@bs.get] 
    external setImageSmoothingEnabled : canvasImageSmoothing:('own) _CanvasImageSmoothing_like -> imageSmoothingEnabled:Js.boolean ->  unit = "imageSmoothingEnabled" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CanvasImageSmoothing) in
      (return:(_) _CanvasImageSmoothing_like)
    
end
 module CanvasFillStrokeStyles = struct
    
    
    external strokeStyle : canvasFillStrokeStyles:('own) _CanvasFillStrokeStyles_like ->  'a251 = "strokeStyle" [@@bs.get] 
    external setStrokeStyle : canvasFillStrokeStyles:('own) _CanvasFillStrokeStyles_like -> strokeStyle:'a252 ->  unit = "strokeStyle" [@@bs.set]
    external fillStyle : canvasFillStrokeStyles:('own) _CanvasFillStrokeStyles_like ->  'a253 = "fillStyle" [@@bs.get] 
    external setFillStyle : canvasFillStrokeStyles:('own) _CanvasFillStrokeStyles_like -> fillStyle:'a254 ->  unit = "fillStyle" [@@bs.set]
    external createLinearGradient : x0:float -> y0:float -> x1:float -> y1:float ->  _CanvasGradient = "createLinearGradient" [@@bs.send.pipe: ('own) _CanvasFillStrokeStyles_like] 
    external createPattern : image:'a255 -> repetition:string ->  _CanvasPattern = "createPattern" [@@bs.send.pipe: ('own) _CanvasFillStrokeStyles_like] 
    external createRadialGradient : x0:float -> y0:float -> r0:float -> x1:float -> y1:float -> r1:float ->  _CanvasGradient = "createRadialGradient" [@@bs.send.pipe: ('own) _CanvasFillStrokeStyles_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasFillStrokeStyles) in
      (return:(_) _CanvasFillStrokeStyles_like)
    
    let createPattern ~image ~repetition canvasFillStrokeStyles =
      let conv_image = function
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) _CanvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = createPattern ~image ~repetition canvasFillStrokeStyles in
      return
    
end
 module CanvasShadowStyles = struct
    
    
    external shadowOffsetX : canvasShadowStyles:('own) _CanvasShadowStyles_like ->  float = "shadowOffsetX" [@@bs.get] 
    external setShadowOffsetX : canvasShadowStyles:('own) _CanvasShadowStyles_like -> shadowOffsetX:float ->  unit = "shadowOffsetX" [@@bs.set]
    external shadowOffsetY : canvasShadowStyles:('own) _CanvasShadowStyles_like ->  float = "shadowOffsetY" [@@bs.get] 
    external setShadowOffsetY : canvasShadowStyles:('own) _CanvasShadowStyles_like -> shadowOffsetY:float ->  unit = "shadowOffsetY" [@@bs.set]
    external shadowBlur : canvasShadowStyles:('own) _CanvasShadowStyles_like ->  float = "shadowBlur" [@@bs.get] 
    external setShadowBlur : canvasShadowStyles:('own) _CanvasShadowStyles_like -> shadowBlur:float ->  unit = "shadowBlur" [@@bs.set]
    external shadowColor : canvasShadowStyles:('own) _CanvasShadowStyles_like ->  string = "shadowColor" [@@bs.get] 
    external setShadowColor : canvasShadowStyles:('own) _CanvasShadowStyles_like -> shadowColor:string ->  unit = "shadowColor" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CanvasShadowStyles) in
      (return:(_) _CanvasShadowStyles_like)
    
end
 module CanvasRect = struct
    
    
    external clearRect : x:float -> y:float -> w:float -> h:float ->  unit = "clearRect" [@@bs.send.pipe: ('own) _CanvasRect_like] 
    external fillRect : x:float -> y:float -> w:float -> h:float ->  unit = "fillRect" [@@bs.send.pipe: ('own) _CanvasRect_like] 
    external strokeRect : x:float -> y:float -> w:float -> h:float ->  unit = "strokeRect" [@@bs.send.pipe: ('own) _CanvasRect_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasRect) in
      (return:(_) _CanvasRect_like)
    
end
 module CanvasDrawPath = struct
    
    
    external beginPath :  unit = "beginPath" [@@bs.send.pipe: ('own) _CanvasDrawPath_like] 
    external clip : ?fillRule:string Js.undefined ->  unit = "clip" [@@bs.send.pipe: ('own) _CanvasDrawPath_like] 
    external fill : ?fillRule:string Js.undefined ->  unit = "fill" [@@bs.send.pipe: ('own) _CanvasDrawPath_like] 
    external isPointInPath : x:float -> y:float -> ?fillRule:string Js.undefined ->  bool = "isPointInPath" [@@bs.send.pipe: ('own) _CanvasDrawPath_like] 
    external stroke :  unit = "stroke" [@@bs.send.pipe: ('own) _CanvasDrawPath_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasDrawPath) in
      (return:(_) _CanvasDrawPath_like)
    
    let clip ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = clip ~fillRule canvasDrawPath in
      return
    
    let clip ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      clip ~fillRule canvasDrawPath
    
    let fill ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = fill ~fillRule canvasDrawPath in
      return
    
    let fill ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      fill ~fillRule canvasDrawPath
    
    let isPointInPath ~x ~y ~fillRule canvasDrawPath =
      let conv_fillRule = function
        | `nonzero -> "nonzero"
        | `evenodd -> "evenodd"
         in
      let conv_fillRule = access_undef conv_fillRule in
      let fillRule = conv_fillRule fillRule in
      let return = isPointInPath ~x ~y ~fillRule canvasDrawPath in
      return
    
    let isPointInPath ~x ~y ?fillRule canvasDrawPath =
      let conv_fillRule = Js_undefined.from_opt in
      let fillRule = conv_fillRule fillRule in
      isPointInPath ~x ~y ~fillRule canvasDrawPath
    
end
 module CanvasUserInterface = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CanvasUserInterface) in
      (return:(_) _CanvasUserInterface_like)
    
end
 module CanvasText = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CanvasText) in
      (return:(_) _CanvasText_like)
    
end
 module CanvasDrawImage = struct
    
    
    external drawImage : image:'a256 -> dx:float -> dy:float ->  unit = "drawImage" [@@bs.send.pipe: ('own) _CanvasDrawImage_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasDrawImage) in
      (return:(_) _CanvasDrawImage_like)
    
    let drawImage ~image ~dx ~dy canvasDrawImage =
      let conv_image = function
        | `HTMLImageElement (x: (_) _HTMLImageElement_like) -> Obj.magic x
        | `HTMLCanvasElement (x: (_) _HTMLCanvasElement_like) -> Obj.magic x
        | `CanvasRenderingContext2D (x: (_) _CanvasRenderingContext2D_like) -> 
        Obj.magic x
         in
      let image = conv_image image in
      let return = drawImage ~image ~dx ~dy canvasDrawImage in
      return
    
end
 module CanvasHitRegion = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CanvasHitRegion) in
      (return:(_) _CanvasHitRegion_like)
    
end
 module CanvasImageData = struct
    
    
    external createImageData : sw:float -> sh:float ->  _ImageData = "createImageData" [@@bs.send.pipe: ('own) _CanvasImageData_like] 
    external getImageData : sx:float -> sy:float -> sw:float -> sh:float ->  _ImageData = "getImageData" [@@bs.send.pipe: ('own) _CanvasImageData_like] 
    external putImageData : imagedata:(_) _ImageData_like -> dx:float -> dy:float ->  unit = "putImageData" [@@bs.send.pipe: ('own) _CanvasImageData_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasImageData) in
      (return:(_) _CanvasImageData_like)
    
end
 module CanvasPathDrawingStyles = struct
    
    
    external lineWidth : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like ->  float = "lineWidth" [@@bs.get] 
    external setLineWidth : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like -> lineWidth:float ->  unit = "lineWidth" [@@bs.set]
    external lineCap : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like ->  string = "lineCap" [@@bs.get] 
    external setLineCap : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like -> lineCap:string ->  unit = "lineCap" [@@bs.set]
    external lineJoin : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like ->  string = "lineJoin" [@@bs.get] 
    external setLineJoin : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like -> lineJoin:string ->  unit = "lineJoin" [@@bs.set]
    external miterLimit : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like ->  float = "miterLimit" [@@bs.get] 
    external setMiterLimit : canvasPathDrawingStyles:('own) _CanvasPathDrawingStyles_like -> miterLimit:float ->  unit = "miterLimit" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CanvasPathDrawingStyles) in
      (return:(_) _CanvasPathDrawingStyles_like)
    
end
 module CanvasTextDrawingStyles = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CanvasTextDrawingStyles) in
      (return:(_) _CanvasTextDrawingStyles_like)
    
end
 module CanvasPath = struct
    
    
    external arc : x:float -> y:float -> radius:float -> startAngle:float -> endAngle:float -> ?anticlockwise:Js.boolean Js.undefined ->  unit = "arc" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external arcTo : x1:float -> y1:float -> x2:float -> y2:float -> radius:float ->  unit = "arcTo" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external bezierCurveTo : cp1x:float -> cp1y:float -> cp2x:float -> cp2y:float -> x:float -> y:float ->  unit = "bezierCurveTo" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external closePath :  unit = "closePath" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external lineTo : x:float -> y:float ->  unit = "lineTo" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external moveTo : x:float -> y:float ->  unit = "moveTo" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external quadraticCurveTo : cpx:float -> cpy:float -> x:float -> y:float ->  unit = "quadraticCurveTo" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    external rect : x:float -> y:float -> w:float -> h:float ->  unit = "rect" [@@bs.send.pipe: ('own) _CanvasPath_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CanvasPath) in
      (return:(_) _CanvasPath_like)
    
    let arc ~x ~y ~radius ~startAngle ~endAngle ?anticlockwise canvasPath =
      let conv_anticlockwise = Js_undefined.from_opt in
      let anticlockwise = conv_anticlockwise anticlockwise in
      arc ~x ~y ~radius ~startAngle ~endAngle ~anticlockwise canvasPath
    
end
 module MediaList = struct
    
    
    external mediaText : mediaList:('own) _MediaList_like ->  string = "mediaText" [@@bs.get] 
    external setMediaText : mediaList:('own) _MediaList_like -> mediaText:string ->  unit = "mediaText" [@@bs.set]
    external length : mediaList:('own) _MediaList_like ->  int = "length" [@@bs.get] 
    external appendMedium : medium:string ->  unit = "appendMedium" [@@bs.send.pipe: ('own) _MediaList_like] 
    external deleteMedium : medium:string ->  unit = "deleteMedium" [@@bs.send.pipe: ('own) _MediaList_like] 
    external item : index:int ->  string option = "item" [@@bs.send.pipe: ('own) _MediaList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_MediaList) in
      (return:(_) _MediaList_like)
    
end
 module OESTextureFloat = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_OESTextureFloat) in
      (return:(_) _OESTextureFloat_like)
    
end
 module Permissions = struct
    
    
    external query : permissionDesc:'a257 ->  _PermissionStatus Js.Promise.t = "query" [@@bs.send.pipe: ('own) _Permissions_like] 
    external request : permissionDesc:'a258 ->  _PermissionStatus Js.Promise.t = "request" [@@bs.send.pipe: ('own) _Permissions_like] 
    external revoke : permissionDesc:'a259 ->  _PermissionStatus Js.Promise.t = "revoke" [@@bs.send.pipe: ('own) _Permissions_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Permissions) in
      (return:(_) _Permissions_like)
    
end
 module CanvasPattern = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CanvasPattern) in
      (return:(_) _CanvasPattern_like)
    
end
 module MutationRecord = struct
    
    
    external type_ : mutationRecord:('own) _MutationRecord_like ->  string = "type" [@@bs.get] 
    external target : mutationRecord:('own) _MutationRecord_like ->  _Node = "target" [@@bs.get] 
    external addedNodes : mutationRecord:('own) _MutationRecord_like ->  _NodeList = "addedNodes" [@@bs.get] 
    external removedNodes : mutationRecord:('own) _MutationRecord_like ->  _NodeList = "removedNodes" [@@bs.get] 
    external previousSibling : mutationRecord:('own) _MutationRecord_like ->  _Node option = "previousSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextSibling : mutationRecord:('own) _MutationRecord_like ->  _Node option = "nextSibling" [@@bs.get] [@@bs.return null_to_opt]
    external attributeName : mutationRecord:('own) _MutationRecord_like ->  string option = "attributeName" [@@bs.get] [@@bs.return null_to_opt]
    external attributeNamespace : mutationRecord:('own) _MutationRecord_like ->  string option = "attributeNamespace" [@@bs.get] [@@bs.return null_to_opt]
    external oldValue : mutationRecord:('own) _MutationRecord_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_MutationRecord) in
      (return:(_) _MutationRecord_like)
    
    let cast_to_Dom_mutationRecord x =
      let return = Obj.magic (x:_MutationRecord) in
      (return:Dom.mutationRecord)
    
    let cast_from_Dom_mutationRecord x =
      let return = Obj.magic (x:Dom.mutationRecord) in
      (return:_MutationRecord)
    
end
 module Storage = struct
    
    
    external length : storage:('own) _Storage_like ->  int = "length" [@@bs.get] 
    external clear :  unit = "clear" [@@bs.send.pipe: ('own) _Storage_like] 
    external getItem : name:string ->  string option = "getItem" [@@bs.send.pipe: ('own) _Storage_like] [@@bs.return null_to_opt]
    external key : index:int ->  string option = "key" [@@bs.send.pipe: ('own) _Storage_like] [@@bs.return null_to_opt]
    external removeItem : name:string ->  unit = "removeItem" [@@bs.send.pipe: ('own) _Storage_like] 
    external setItem : name:string -> value:string ->  unit = "setItem" [@@bs.send.pipe: ('own) _Storage_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Storage) in
      (return:(_) _Storage_like)
    
end
 module MutationObserver = struct
    
    
    external observe : target:(_) _Node_like -> ?options:(_) _MutationObserverInit_like Js.undefined ->  unit = "observe" [@@bs.send.pipe: ('own) _MutationObserver_like] 
    
    let downcast x =
      let return = Obj.magic (x:_MutationObserver) in
      (return:(_) _MutationObserver_like)
    
    let cast_to_Dom_mutationObserver x =
      let return = Obj.magic (x:_MutationObserver) in
      (return:Dom.mutationObserver)
    
    let cast_from_Dom_mutationObserver x =
      let return = Obj.magic (x:Dom.mutationObserver) in
      (return:_MutationObserver)
    
    let observe ~target ?options mutationObserver =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      observe ~target ~options mutationObserver
    
end
 module TestBindingIterable = struct
    
    
    external length : testBindingIterable:('own) _TestBindingIterable_like ->  int = "length" [@@bs.get] 
    external add : arg:string ->  unit = "add" [@@bs.send.pipe: ('own) _TestBindingIterable_like] 
    external getItem : index:int ->  string = "getItem" [@@bs.send.pipe: ('own) _TestBindingIterable_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestBindingIterable) in
      (return:(_) _TestBindingIterable_like)
    
end
 module ServiceEventHandlers = struct
    
    
    external onserviceadded : serviceEventHandlers:('own) _ServiceEventHandlers_like ->  (_Event -> 'a260 [@bs]) option = "onserviceadded" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceadded : serviceEventHandlers:('own) _ServiceEventHandlers_like -> onserviceadded:(_Event -> 'a261 [@bs]) Js.null ->  unit = "onserviceadded" [@@bs.set]
    external onservicechanged : serviceEventHandlers:('own) _ServiceEventHandlers_like ->  (_Event -> 'a262 [@bs]) option = "onservicechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnservicechanged : serviceEventHandlers:('own) _ServiceEventHandlers_like -> onservicechanged:(_Event -> 'a263 [@bs]) Js.null ->  unit = "onservicechanged" [@@bs.set]
    external onserviceremoved : serviceEventHandlers:('own) _ServiceEventHandlers_like ->  (_Event -> 'a264 [@bs]) option = "onserviceremoved" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceremoved : serviceEventHandlers:('own) _ServiceEventHandlers_like -> onserviceremoved:(_Event -> 'a265 [@bs]) Js.null ->  unit = "onserviceremoved" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ServiceEventHandlers) in
      (return:(_) _ServiceEventHandlers_like)
    
end
 module TextEncoder = struct
    
    
    external encoding : textEncoder:('own) _TextEncoder_like ->  string = "encoding" [@@bs.get] 
    external encode : ?input:string Js.undefined ->  Js_typed_array.Uint8Array.t = "encode" [@@bs.send.pipe: ('own) _TextEncoder_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TextEncoder) in
      (return:(_) _TextEncoder_like)
    
    let encode ?input textEncoder =
      let conv_input = Js_undefined.from_opt in
      let input = conv_input input in
      encode ~input textEncoder
    
end
 module Event = struct
    
    
    external type_ : event:('own) _Event_like ->  string = "type" [@@bs.get] 
    external target : event:('own) _Event_like ->  _EventTarget option = "target" [@@bs.get] [@@bs.return null_to_opt]
    external currentTarget : event:('own) _Event_like ->  _EventTarget option = "currentTarget" [@@bs.get] [@@bs.return null_to_opt]
    external eventPhase : event:('own) _Event_like ->  int = "eventPhase" [@@bs.get] 
    external bubbles : event:('own) _Event_like ->  bool = "bubbles" [@@bs.get] 
    external cancelable : event:('own) _Event_like ->  bool = "cancelable" [@@bs.get] 
    external defaultPrevented : event:('own) _Event_like ->  bool = "defaultPrevented" [@@bs.get] 
    external isTrusted : event:('own) _Event_like ->  bool = "isTrusted" [@@bs.get] 
    external timeStamp : event:('own) _Event_like ->  int = "timeStamp" [@@bs.get] 
    external initEvent : type_:string -> bubbles:Js.boolean -> cancelable:Js.boolean ->  unit = "initEvent" [@@bs.send.pipe: ('own) _Event_like] 
    external preventDefault :  unit = "preventDefault" [@@bs.send.pipe: ('own) _Event_like] 
    external stopImmediatePropagation :  unit = "stopImmediatePropagation" [@@bs.send.pipe: ('own) _Event_like] 
    external stopPropagation :  unit = "stopPropagation" [@@bs.send.pipe: ('own) _Event_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Event) in
      (return:(_) _Event_like)
    
    let cast_to_Dom_event x =
      let return = Obj.magic (x:_Event) in
      (return:Dom.event)
    
    let cast_from_Dom_event x =
      let return = Obj.magic (x:Dom.event) in
      (return:_Event)
    
    let _NONE  =
      
      0
    
    let _CAPTURING_PHASE  =
      
      1
    
    let _AT_TARGET  =
      
      2
    
    let _BUBBLING_PHASE  =
      
      3
    
end
 module ValidityState = struct
    
    
    external valueMissing : validityState:('own) _ValidityState_like ->  bool = "valueMissing" [@@bs.get] 
    external typeMismatch : validityState:('own) _ValidityState_like ->  bool = "typeMismatch" [@@bs.get] 
    external patternMismatch : validityState:('own) _ValidityState_like ->  bool = "patternMismatch" [@@bs.get] 
    external tooLong : validityState:('own) _ValidityState_like ->  bool = "tooLong" [@@bs.get] 
    external tooShort : validityState:('own) _ValidityState_like ->  bool = "tooShort" [@@bs.get] 
    external rangeUnderflow : validityState:('own) _ValidityState_like ->  bool = "rangeUnderflow" [@@bs.get] 
    external rangeOverflow : validityState:('own) _ValidityState_like ->  bool = "rangeOverflow" [@@bs.get] 
    external stepMismatch : validityState:('own) _ValidityState_like ->  bool = "stepMismatch" [@@bs.get] 
    external badInput : validityState:('own) _ValidityState_like ->  bool = "badInput" [@@bs.get] 
    external customError : validityState:('own) _ValidityState_like ->  bool = "customError" [@@bs.get] 
    external valid : validityState:('own) _ValidityState_like ->  bool = "valid" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ValidityState) in
      (return:(_) _ValidityState_like)
    
end
 module WindowProxy = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WindowProxy) in
      (return:(_) _WindowProxy_like)
    
end
 module WindowTimers = struct
    
    
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) _WindowTimers_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) _WindowTimers_like] 
    external setInterval : windowTimers:('own) _WindowTimers_like ->  (('own) _WindowTimers_like, int, ('a266*(int Js.undefined*('a267)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : windowTimers:('own) _WindowTimers_like ->  (('own) _WindowTimers_like, int, ('a268*(int Js.undefined*('a269)))) variadic_func = "setTimeout" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_WindowTimers) in
      (return:(_) _WindowTimers_like)
    
    let clearInterval ?handle windowTimers =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle windowTimers
    
    let clearTimeout ?handle windowTimers =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle windowTimers
    
    let setInterval ~handler ~timeout ~arguments windowTimers =
      let func = setInterval windowTimers in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func windowTimers args
    
    let setInterval ~handler ~timeout ~arguments windowTimers =
      let conv_handler = function
        | `Callback (x: ('a270, 'a271, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments windowTimers in
      return
    
    let setInterval ~handler ?timeout ~arguments windowTimers =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments windowTimers
    
    let setTimeout ~handler ~timeout ~arguments windowTimers =
      let func = setTimeout windowTimers in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func windowTimers args
    
    let setTimeout ~handler ~timeout ~arguments windowTimers =
      let conv_handler = function
        | `Callback (x: ('a272, 'a273, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments windowTimers in
      return
    
    let setTimeout ~handler ?timeout ~arguments windowTimers =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments windowTimers
    
end
 module WindowBase64 = struct
    
    
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) _WindowBase64_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) _WindowBase64_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WindowBase64) in
      (return:(_) _WindowBase64_like)
    
end
 module WindowSessionStorage = struct
    
    
    external sessionStorage : windowSessionStorage:('own) _WindowSessionStorage_like ->  _Storage = "sessionStorage" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_WindowSessionStorage) in
      (return:(_) _WindowSessionStorage_like)
    
end
 module WindowLocalStorage = struct
    
    
    external localStorage : windowLocalStorage:('own) _WindowLocalStorage_like ->  _Storage = "localStorage" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_WindowLocalStorage) in
      (return:(_) _WindowLocalStorage_like)
    
end
 module DOMStringMap = struct
    
    
    external get : dOMStringMap:('own) _DOMStringMap_like -> name:string ->  string = "" [@@bs.get_index] 
    external set : dOMStringMap:('own) _DOMStringMap_like -> name:string -> value:string ->  unit = "" [@@bs.set_index] 
    external delete : dOMStringMap:('own) _DOMStringMap_like -> name:string ->  unit = "" [@@bs.get_index] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMStringMap) in
      (return:(_) _DOMStringMap_like)
    
    let cast_to_Dom_domStringMap x =
      let return = Obj.magic (x:_DOMStringMap) in
      (return:Dom.domStringMap)
    
    let cast_from_Dom_domStringMap x =
      let return = Obj.magic (x:Dom.domStringMap) in
      (return:_DOMStringMap)
    
end
 module GlobalEventHandlers = struct
    
    
    external onabort : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a274 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : globalEventHandlers:('own) _GlobalEventHandlers_like -> onabort:(_Event -> 'a275 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a276 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : globalEventHandlers:('own) _GlobalEventHandlers_like -> onblur:(_Event -> 'a277 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a278 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : globalEventHandlers:('own) _GlobalEventHandlers_like -> oncancel:(_Event -> 'a279 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a280 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : globalEventHandlers:('own) _GlobalEventHandlers_like -> oncanplay:(_Event -> 'a281 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a282 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : globalEventHandlers:('own) _GlobalEventHandlers_like -> oncanplaythrough:(_Event -> 'a283 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a284 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : globalEventHandlers:('own) _GlobalEventHandlers_like -> onchange:(_Event -> 'a285 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a286 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : globalEventHandlers:('own) _GlobalEventHandlers_like -> onclick:(_Event -> 'a287 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a288 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : globalEventHandlers:('own) _GlobalEventHandlers_like -> onclose:(_Event -> 'a289 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a290 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : globalEventHandlers:('own) _GlobalEventHandlers_like -> oncontextmenu:(_Event -> 'a291 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a292 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : globalEventHandlers:('own) _GlobalEventHandlers_like -> oncuechange:(_Event -> 'a293 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a294 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondblclick:(_Event -> 'a295 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a296 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondrag:(_Event -> 'a297 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a298 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragend:(_Event -> 'a299 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a300 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragenter:(_Event -> 'a301 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a302 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragexit:(_Event -> 'a303 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a304 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragleave:(_Event -> 'a305 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a306 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragover:(_Event -> 'a307 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a308 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondragstart:(_Event -> 'a309 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a310 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondrop:(_Event -> 'a311 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a312 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : globalEventHandlers:('own) _GlobalEventHandlers_like -> ondurationchange:(_Event -> 'a313 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a314 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : globalEventHandlers:('own) _GlobalEventHandlers_like -> onemptied:(_Event -> 'a315 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a316 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : globalEventHandlers:('own) _GlobalEventHandlers_like -> onended:(_Event -> 'a317 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : globalEventHandlers:('own) _GlobalEventHandlers_like ->  ('a318 -> string -> int -> int -> 'a319 -> 'a320 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : globalEventHandlers:('own) _GlobalEventHandlers_like -> onerror:('a321 -> string -> int -> int -> 'a322 -> 'a323 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a324 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : globalEventHandlers:('own) _GlobalEventHandlers_like -> onfocus:(_Event -> 'a325 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a326 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : globalEventHandlers:('own) _GlobalEventHandlers_like -> oninput:(_Event -> 'a327 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a328 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : globalEventHandlers:('own) _GlobalEventHandlers_like -> oninvalid:(_Event -> 'a329 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a330 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : globalEventHandlers:('own) _GlobalEventHandlers_like -> onkeydown:(_Event -> 'a331 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a332 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : globalEventHandlers:('own) _GlobalEventHandlers_like -> onkeypress:(_Event -> 'a333 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a334 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : globalEventHandlers:('own) _GlobalEventHandlers_like -> onkeyup:(_Event -> 'a335 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a336 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : globalEventHandlers:('own) _GlobalEventHandlers_like -> onload:(_Event -> 'a337 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a338 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : globalEventHandlers:('own) _GlobalEventHandlers_like -> onloadeddata:(_Event -> 'a339 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a340 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : globalEventHandlers:('own) _GlobalEventHandlers_like -> onloadedmetadata:(_Event -> 'a341 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a342 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : globalEventHandlers:('own) _GlobalEventHandlers_like -> onloadstart:(_Event -> 'a343 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a344 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmousedown:(_Event -> 'a345 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a346 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmouseenter:(_Event -> 'a347 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a348 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmouseleave:(_Event -> 'a349 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a350 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmousemove:(_Event -> 'a351 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a352 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmouseout:(_Event -> 'a353 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a354 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmouseover:(_Event -> 'a355 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a356 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : globalEventHandlers:('own) _GlobalEventHandlers_like -> onmouseup:(_Event -> 'a357 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a358 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : globalEventHandlers:('own) _GlobalEventHandlers_like -> onwheel:(_Event -> 'a359 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a360 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : globalEventHandlers:('own) _GlobalEventHandlers_like -> onpause:(_Event -> 'a361 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a362 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : globalEventHandlers:('own) _GlobalEventHandlers_like -> onplay:(_Event -> 'a363 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a364 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : globalEventHandlers:('own) _GlobalEventHandlers_like -> onplaying:(_Event -> 'a365 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a366 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : globalEventHandlers:('own) _GlobalEventHandlers_like -> onprogress:(_Event -> 'a367 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a368 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : globalEventHandlers:('own) _GlobalEventHandlers_like -> onratechange:(_Event -> 'a369 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a370 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : globalEventHandlers:('own) _GlobalEventHandlers_like -> onreset:(_Event -> 'a371 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a372 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : globalEventHandlers:('own) _GlobalEventHandlers_like -> onresize:(_Event -> 'a373 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a374 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : globalEventHandlers:('own) _GlobalEventHandlers_like -> onscroll:(_Event -> 'a375 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a376 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : globalEventHandlers:('own) _GlobalEventHandlers_like -> onseeked:(_Event -> 'a377 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a378 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : globalEventHandlers:('own) _GlobalEventHandlers_like -> onseeking:(_Event -> 'a379 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a380 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : globalEventHandlers:('own) _GlobalEventHandlers_like -> onselect:(_Event -> 'a381 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a382 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : globalEventHandlers:('own) _GlobalEventHandlers_like -> onshow:(_Event -> 'a383 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a384 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : globalEventHandlers:('own) _GlobalEventHandlers_like -> onstalled:(_Event -> 'a385 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a386 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : globalEventHandlers:('own) _GlobalEventHandlers_like -> onsubmit:(_Event -> 'a387 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a388 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : globalEventHandlers:('own) _GlobalEventHandlers_like -> onsuspend:(_Event -> 'a389 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a390 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : globalEventHandlers:('own) _GlobalEventHandlers_like -> ontimeupdate:(_Event -> 'a391 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a392 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : globalEventHandlers:('own) _GlobalEventHandlers_like -> ontoggle:(_Event -> 'a393 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a394 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : globalEventHandlers:('own) _GlobalEventHandlers_like -> onvolumechange:(_Event -> 'a395 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a396 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : globalEventHandlers:('own) _GlobalEventHandlers_like -> onwaiting:(_Event -> 'a397 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : globalEventHandlers:('own) _GlobalEventHandlers_like ->  (_Event -> 'a398 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : globalEventHandlers:('own) _GlobalEventHandlers_like -> ontransitionend:(_Event -> 'a399 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_GlobalEventHandlers) in
      (return:(_) _GlobalEventHandlers_like)
    
end
 module WindowEventHandlers = struct
    
    
    external onafterprint : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a400 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : windowEventHandlers:('own) _WindowEventHandlers_like -> onafterprint:(_Event -> 'a401 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a402 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : windowEventHandlers:('own) _WindowEventHandlers_like -> onbeforeprint:(_Event -> 'a403 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : windowEventHandlers:('own) _WindowEventHandlers_like -> onbeforeunload:(_Event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a404 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : windowEventHandlers:('own) _WindowEventHandlers_like -> onhashchange:(_Event -> 'a405 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a406 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : windowEventHandlers:('own) _WindowEventHandlers_like -> onlanguagechange:(_Event -> 'a407 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a408 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : windowEventHandlers:('own) _WindowEventHandlers_like -> onmessage:(_Event -> 'a409 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a410 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : windowEventHandlers:('own) _WindowEventHandlers_like -> onoffline:(_Event -> 'a411 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a412 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : windowEventHandlers:('own) _WindowEventHandlers_like -> ononline:(_Event -> 'a413 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a414 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : windowEventHandlers:('own) _WindowEventHandlers_like -> onpagehide:(_Event -> 'a415 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a416 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : windowEventHandlers:('own) _WindowEventHandlers_like -> onpageshow:(_Event -> 'a417 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a418 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : windowEventHandlers:('own) _WindowEventHandlers_like -> onpopstate:(_Event -> 'a419 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a420 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : windowEventHandlers:('own) _WindowEventHandlers_like -> onrejectionhandled:(_Event -> 'a421 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a422 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : windowEventHandlers:('own) _WindowEventHandlers_like -> onstorage:(_Event -> 'a423 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a424 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : windowEventHandlers:('own) _WindowEventHandlers_like -> onunhandledrejection:(_Event -> 'a425 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : windowEventHandlers:('own) _WindowEventHandlers_like ->  (_Event -> 'a426 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : windowEventHandlers:('own) _WindowEventHandlers_like -> onunload:(_Event -> 'a427 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_WindowEventHandlers) in
      (return:(_) _WindowEventHandlers_like)
    
end
 module DocumentAndElementEventHandlers = struct
    
    
    external oncopy : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like ->  (_Event -> 'a428 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like -> oncopy:(_Event -> 'a429 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like ->  (_Event -> 'a430 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like -> oncut:(_Event -> 'a431 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like ->  (_Event -> 'a432 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : documentAndElementEventHandlers:('own) _DocumentAndElementEventHandlers_like -> onpaste:(_Event -> 'a433 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DocumentAndElementEventHandlers) in
      (return:(_) _DocumentAndElementEventHandlers_like)
    
end
 module Blob = struct
    
    
    external size : blob:('own) _Blob_like ->  int = "size" [@@bs.get] 
    external type_ : blob:('own) _Blob_like ->  string = "type" [@@bs.get] 
    external slice : ?start:int Js.undefined -> ?end_:int Js.undefined -> ?contentType:string Js.undefined ->  _Blob = "slice" [@@bs.send.pipe: ('own) _Blob_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Blob) in
      (return:(_) _Blob_like)
    
    let slice ?start ?end_ ?contentType blob =
      let conv_start = Js_undefined.from_opt in
      let start = conv_start start in
      let conv_end = Js_undefined.from_opt in
      let end_ = conv_end end_ in
      let conv_contentType = Js_undefined.from_opt in
      let contentType = conv_contentType contentType in
      slice ~start ~end_ ~contentType blob
    
end
 module VRFrameData = struct
    
    
    external timestamp : vRFrameData:('own) _VRFrameData_like ->  float = "timestamp" [@@bs.get] 
    external leftProjectionMatrix : vRFrameData:('own) _VRFrameData_like ->  Js_typed_array.Float32Array.t = "leftProjectionMatrix" [@@bs.get] 
    external leftViewMatrix : vRFrameData:('own) _VRFrameData_like ->  Js_typed_array.Float32Array.t = "leftViewMatrix" [@@bs.get] 
    external rightProjectionMatrix : vRFrameData:('own) _VRFrameData_like ->  Js_typed_array.Float32Array.t = "rightProjectionMatrix" [@@bs.get] 
    external rightViewMatrix : vRFrameData:('own) _VRFrameData_like ->  Js_typed_array.Float32Array.t = "rightViewMatrix" [@@bs.get] 
    external pose : vRFrameData:('own) _VRFrameData_like ->  _VRPose = "pose" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_VRFrameData) in
      (return:(_) _VRFrameData_like)
    
end
 module ServoParser = struct
    
    
    
    
    let downcast x =
      let return = Obj.magic (x:_ServoParser) in
      (return:(_) _ServoParser_like)
    
end
 module Attr = struct
    
    
    external namespaceURI : attr:('own) _Attr_like ->  string option = "namespaceURI" [@@bs.get] [@@bs.return null_to_opt]
    external prefix : attr:('own) _Attr_like ->  string option = "prefix" [@@bs.get] [@@bs.return null_to_opt]
    external localName : attr:('own) _Attr_like ->  string = "localName" [@@bs.get] 
    external name : attr:('own) _Attr_like ->  string = "name" [@@bs.get] 
    external nodeName : attr:('own) _Attr_like ->  string = "nodeName" [@@bs.get] 
    external value : attr:('own) _Attr_like ->  string = "value" [@@bs.get] 
    external setValue : attr:('own) _Attr_like -> value:string ->  unit = "value" [@@bs.set]
    external textContent : attr:('own) _Attr_like ->  string = "textContent" [@@bs.get] 
    external setTextContent : attr:('own) _Attr_like -> textContent:string ->  unit = "textContent" [@@bs.set]
    external nodeValue : attr:('own) _Attr_like ->  string = "nodeValue" [@@bs.get] 
    external setNodeValue : attr:('own) _Attr_like -> nodeValue:string ->  unit = "nodeValue" [@@bs.set]
    external ownerElement : attr:('own) _Attr_like ->  _Element option = "ownerElement" [@@bs.get] [@@bs.return null_to_opt]
    external specified : attr:('own) _Attr_like ->  bool = "specified" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_Attr) in
      (return:(_) _Attr_like)
    
    let cast_to_Dom_attr x =
      let return = Obj.magic (x:_Attr) in
      (return:Dom.attr)
    
    let cast_from_Dom_attr x =
      let return = Obj.magic (x:Dom.attr) in
      (return:_Attr)
    
end
 module ActivatableElement = struct
    
    
    external enterFormalActivationState :  unit = "enterFormalActivationState" [@@bs.send.pipe: ('own) _ActivatableElement_like] 
    external exitFormalActivationState :  unit = "exitFormalActivationState" [@@bs.send.pipe: ('own) _ActivatableElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_ActivatableElement) in
      (return:(_) _ActivatableElement_like)
    
end
 module StyleSheetList = struct
    
    
    external length : styleSheetList:('own) _StyleSheetList_like ->  int = "length" [@@bs.get] 
    external item : index:int ->  _StyleSheet option = "item" [@@bs.send.pipe: ('own) _StyleSheetList_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_StyleSheetList) in
      (return:(_) _StyleSheetList_like)
    
end
 module EventSourceInit = struct
    
    
    external make : ?withCredentials:Js.boolean -> unit ->  _EventSourceInit = "" [@@bs.obj]
    external withCredentials : eventSourceInit:('own) _EventSourceInit_like ->  bool = "withCredentials" [@@bs.get] 
    external setWithCredentials : eventSourceInit:('own) _EventSourceInit_like -> withCredentials:Js.boolean ->  unit = "withCredentials" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_EventSourceInit) in
      (return:(_) _EventSourceInit_like)
    
end
 module ElementDefinitionOptions = struct
    
    
    external make : ?extends:string -> unit ->  _ElementDefinitionOptions = "" [@@bs.obj]
    external extends : elementDefinitionOptions:('own) _ElementDefinitionOptions_like ->  string = "extends" [@@bs.get] 
    external setExtends : elementDefinitionOptions:('own) _ElementDefinitionOptions_like -> extends:string ->  unit = "extends" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ElementDefinitionOptions) in
      (return:(_) _ElementDefinitionOptions_like)
    
end
 module DOMMatrixInit = struct
    
    
    external make : ?a:float -> ?b:float -> ?c:float -> ?d:float -> ?e:float -> ?f:float -> ?m11:float -> ?m12:float -> ?m13:float -> ?m14:float -> ?m21:float -> ?m22:float -> ?m23:float -> ?m24:float -> ?m31:float -> ?m32:float -> ?m33:float -> ?m34:float -> ?m41:float -> ?m42:float -> ?m43:float -> ?m44:float -> ?is2D:Js.boolean -> unit ->  _DOMMatrixInit = "" [@@bs.obj]
    external a : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "a" [@@bs.get] 
    external setA : dOMMatrixInit:('own) _DOMMatrixInit_like -> a:float ->  unit = "a" [@@bs.set]
    external b : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "b" [@@bs.get] 
    external setB : dOMMatrixInit:('own) _DOMMatrixInit_like -> b:float ->  unit = "b" [@@bs.set]
    external c : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "c" [@@bs.get] 
    external setC : dOMMatrixInit:('own) _DOMMatrixInit_like -> c:float ->  unit = "c" [@@bs.set]
    external d : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "d" [@@bs.get] 
    external setD : dOMMatrixInit:('own) _DOMMatrixInit_like -> d:float ->  unit = "d" [@@bs.set]
    external e : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "e" [@@bs.get] 
    external setE : dOMMatrixInit:('own) _DOMMatrixInit_like -> e:float ->  unit = "e" [@@bs.set]
    external f : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "f" [@@bs.get] 
    external setF : dOMMatrixInit:('own) _DOMMatrixInit_like -> f:float ->  unit = "f" [@@bs.set]
    external m11 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m11" [@@bs.get] 
    external setM11 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m11:float ->  unit = "m11" [@@bs.set]
    external m12 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m12" [@@bs.get] 
    external setM12 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m12:float ->  unit = "m12" [@@bs.set]
    external m13 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m13" [@@bs.get] 
    external setM13 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m13:float ->  unit = "m13" [@@bs.set]
    external m14 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m14" [@@bs.get] 
    external setM14 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m14:float ->  unit = "m14" [@@bs.set]
    external m21 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m21" [@@bs.get] 
    external setM21 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m21:float ->  unit = "m21" [@@bs.set]
    external m22 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m22" [@@bs.get] 
    external setM22 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m22:float ->  unit = "m22" [@@bs.set]
    external m23 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m23" [@@bs.get] 
    external setM23 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m23:float ->  unit = "m23" [@@bs.set]
    external m24 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m24" [@@bs.get] 
    external setM24 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m24:float ->  unit = "m24" [@@bs.set]
    external m31 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m31" [@@bs.get] 
    external setM31 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m31:float ->  unit = "m31" [@@bs.set]
    external m32 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m32" [@@bs.get] 
    external setM32 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m32:float ->  unit = "m32" [@@bs.set]
    external m33 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m33" [@@bs.get] 
    external setM33 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m33:float ->  unit = "m33" [@@bs.set]
    external m34 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m34" [@@bs.get] 
    external setM34 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m34:float ->  unit = "m34" [@@bs.set]
    external m41 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m41" [@@bs.get] 
    external setM41 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m41:float ->  unit = "m41" [@@bs.set]
    external m42 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m42" [@@bs.get] 
    external setM42 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m42:float ->  unit = "m42" [@@bs.set]
    external m43 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m43" [@@bs.get] 
    external setM43 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m43:float ->  unit = "m43" [@@bs.set]
    external m44 : dOMMatrixInit:('own) _DOMMatrixInit_like ->  float = "m44" [@@bs.get] 
    external setM44 : dOMMatrixInit:('own) _DOMMatrixInit_like -> m44:float ->  unit = "m44" [@@bs.set]
    external is2D : dOMMatrixInit:('own) _DOMMatrixInit_like ->  bool = "is2D" [@@bs.get] 
    external setIs2D : dOMMatrixInit:('own) _DOMMatrixInit_like -> is2D:Js.boolean ->  unit = "is2D" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMMatrixInit) in
      (return:(_) _DOMMatrixInit_like)
    
end
 module VRLayer = struct
    
    
    external make : ?source:(_) _HTMLCanvasElement_like -> ?leftBounds:float array -> ?rightBounds:float array -> unit ->  _VRLayer = "" [@@bs.obj]
    external source : vRLayer:('own) _VRLayer_like ->  _HTMLCanvasElement = "source" [@@bs.get] 
    external setSource : vRLayer:('own) _VRLayer_like -> source:_HTMLCanvasElement ->  unit = "source" [@@bs.set]
    external leftBounds : vRLayer:('own) _VRLayer_like ->  float array = "leftBounds" [@@bs.get] 
    external setLeftBounds : vRLayer:('own) _VRLayer_like -> leftBounds:float array ->  unit = "leftBounds" [@@bs.set]
    external rightBounds : vRLayer:('own) _VRLayer_like ->  float array = "rightBounds" [@@bs.get] 
    external setRightBounds : vRLayer:('own) _VRLayer_like -> rightBounds:float array ->  unit = "rightBounds" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_VRLayer) in
      (return:(_) _VRLayer_like)
    
end
 module IterableKeyOrValueResult = struct
    
    
    external make : ?value:'a434 -> ?done_:Js.boolean -> unit ->  _IterableKeyOrValueResult = "" [@@bs.obj]
    external value : iterableKeyOrValueResult:('own) _IterableKeyOrValueResult_like ->  'a435 = "value" [@@bs.get] 
    external setValue : iterableKeyOrValueResult:('own) _IterableKeyOrValueResult_like -> value:'a436 ->  unit = "value" [@@bs.set]
    external done_ : iterableKeyOrValueResult:('own) _IterableKeyOrValueResult_like ->  bool = "done" [@@bs.get] 
    external setDone : iterableKeyOrValueResult:('own) _IterableKeyOrValueResult_like -> done_:Js.boolean ->  unit = "done" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_IterableKeyOrValueResult) in
      (return:(_) _IterableKeyOrValueResult_like)
    
end
 module IterableKeyAndValueResult = struct
    
    
    external make : ?value:'a437 array -> ?done_:Js.boolean -> unit ->  _IterableKeyAndValueResult = "" [@@bs.obj]
    external value : iterableKeyAndValueResult:('own) _IterableKeyAndValueResult_like ->  'a438 array = "value" [@@bs.get] 
    external setValue : iterableKeyAndValueResult:('own) _IterableKeyAndValueResult_like -> value:'a439 array ->  unit = "value" [@@bs.set]
    external done_ : iterableKeyAndValueResult:('own) _IterableKeyAndValueResult_like ->  bool = "done" [@@bs.get] 
    external setDone : iterableKeyAndValueResult:('own) _IterableKeyAndValueResult_like -> done_:Js.boolean ->  unit = "done" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_IterableKeyAndValueResult) in
      (return:(_) _IterableKeyAndValueResult_like)
    
end
 module RegistrationOptions = struct
    
    
    external make : ?scope:string -> unit ->  _RegistrationOptions = "" [@@bs.obj]
    external scope : registrationOptions:('own) _RegistrationOptions_like ->  string = "scope" [@@bs.get] 
    external setScope : registrationOptions:('own) _RegistrationOptions_like -> scope:string ->  unit = "scope" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_RegistrationOptions) in
      (return:(_) _RegistrationOptions_like)
    
end
 module PermissionDescriptor = struct
    
    
    external make : name:string -> unit ->  _PermissionDescriptor = "" [@@bs.obj]
    external name : permissionDescriptor:('own) _PermissionDescriptor_like ->  string = "name" [@@bs.get] 
    external setName : permissionDescriptor:('own) _PermissionDescriptor_like -> name:string ->  unit = "name" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_PermissionDescriptor) in
      (return:(_) _PermissionDescriptor_like)
    
end
 module WebGLContextAttributes = struct
    
    
    external make : ?alpha:Js.boolean -> ?depth:Js.boolean -> ?stencil:Js.boolean -> ?antialias:Js.boolean -> ?premultipliedAlpha:Js.boolean -> ?preserveDrawingBuffer:Js.boolean -> ?preferLowPowerToHighPerformance:Js.boolean -> ?failIfMajorPerformanceCaveat:Js.boolean -> unit ->  _WebGLContextAttributes = "" [@@bs.obj]
    external alpha : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "alpha" [@@bs.get] 
    external setAlpha : webGLContextAttributes:('own) _WebGLContextAttributes_like -> alpha:Js.boolean ->  unit = "alpha" [@@bs.set]
    external depth : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "depth" [@@bs.get] 
    external setDepth : webGLContextAttributes:('own) _WebGLContextAttributes_like -> depth:Js.boolean ->  unit = "depth" [@@bs.set]
    external stencil : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "stencil" [@@bs.get] 
    external setStencil : webGLContextAttributes:('own) _WebGLContextAttributes_like -> stencil:Js.boolean ->  unit = "stencil" [@@bs.set]
    external antialias : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "antialias" [@@bs.get] 
    external setAntialias : webGLContextAttributes:('own) _WebGLContextAttributes_like -> antialias:Js.boolean ->  unit = "antialias" [@@bs.set]
    external premultipliedAlpha : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "premultipliedAlpha" [@@bs.get] 
    external setPremultipliedAlpha : webGLContextAttributes:('own) _WebGLContextAttributes_like -> premultipliedAlpha:Js.boolean ->  unit = "premultipliedAlpha" [@@bs.set]
    external preserveDrawingBuffer : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "preserveDrawingBuffer" [@@bs.get] 
    external setPreserveDrawingBuffer : webGLContextAttributes:('own) _WebGLContextAttributes_like -> preserveDrawingBuffer:Js.boolean ->  unit = "preserveDrawingBuffer" [@@bs.set]
    external preferLowPowerToHighPerformance : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "preferLowPowerToHighPerformance" [@@bs.get] 
    external setPreferLowPowerToHighPerformance : webGLContextAttributes:('own) _WebGLContextAttributes_like -> preferLowPowerToHighPerformance:Js.boolean ->  unit = "preferLowPowerToHighPerformance" [@@bs.set]
    external failIfMajorPerformanceCaveat : webGLContextAttributes:('own) _WebGLContextAttributes_like ->  bool = "failIfMajorPerformanceCaveat" [@@bs.get] 
    external setFailIfMajorPerformanceCaveat : webGLContextAttributes:('own) _WebGLContextAttributes_like -> failIfMajorPerformanceCaveat:Js.boolean ->  unit = "failIfMajorPerformanceCaveat" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_WebGLContextAttributes) in
      (return:(_) _WebGLContextAttributes_like)
    
end
 module DOMRectInit = struct
    
    
    external make : ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit ->  _DOMRectInit = "" [@@bs.obj]
    external x : dOMRectInit:('own) _DOMRectInit_like ->  float = "x" [@@bs.get] 
    external setX : dOMRectInit:('own) _DOMRectInit_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMRectInit:('own) _DOMRectInit_like ->  float = "y" [@@bs.get] 
    external setY : dOMRectInit:('own) _DOMRectInit_like -> y:float ->  unit = "y" [@@bs.set]
    external width : dOMRectInit:('own) _DOMRectInit_like ->  float = "width" [@@bs.get] 
    external setWidth : dOMRectInit:('own) _DOMRectInit_like -> width:float ->  unit = "width" [@@bs.set]
    external height : dOMRectInit:('own) _DOMRectInit_like ->  float = "height" [@@bs.get] 
    external setHeight : dOMRectInit:('own) _DOMRectInit_like -> height:float ->  unit = "height" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMRectInit) in
      (return:(_) _DOMRectInit_like)
    
end
 module BrowserElementSecurityChangeDetail = struct
    
    
    external make : ?state:string -> ?trackingState:string -> ?mixedState:string -> ?extendedValidation:Js.boolean -> ?trackingContent:Js.boolean -> ?mixedContent:Js.boolean -> unit ->  _BrowserElementSecurityChangeDetail = "" [@@bs.obj]
    external state : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  string = "state" [@@bs.get] 
    external setState : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> state:string ->  unit = "state" [@@bs.set]
    external trackingState : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  string = "trackingState" [@@bs.get] 
    external setTrackingState : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> trackingState:string ->  unit = "trackingState" [@@bs.set]
    external mixedState : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  string = "mixedState" [@@bs.get] 
    external setMixedState : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> mixedState:string ->  unit = "mixedState" [@@bs.set]
    external extendedValidation : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  bool = "extendedValidation" [@@bs.get] 
    external setExtendedValidation : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> extendedValidation:Js.boolean ->  unit = "extendedValidation" [@@bs.set]
    external trackingContent : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  bool = "trackingContent" [@@bs.get] 
    external setTrackingContent : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> trackingContent:Js.boolean ->  unit = "trackingContent" [@@bs.set]
    external mixedContent : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like ->  bool = "mixedContent" [@@bs.get] 
    external setMixedContent : browserElementSecurityChangeDetail:('own) _BrowserElementSecurityChangeDetail_like -> mixedContent:Js.boolean ->  unit = "mixedContent" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementSecurityChangeDetail) in
      (return:(_) _BrowserElementSecurityChangeDetail_like)
    
end
 module BrowserElementErrorEventDetail = struct
    
    
    external make : ?type_:string -> ?description:string -> ?report:string -> ?version:string -> unit ->  _BrowserElementErrorEventDetail = "" [@@bs.obj]
    external type_ : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like ->  string = "type" [@@bs.get] 
    external setType : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like -> type_:string ->  unit = "type" [@@bs.set]
    external description : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like ->  string = "description" [@@bs.get] 
    external setDescription : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like -> description:string ->  unit = "description" [@@bs.set]
    external report : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like ->  string = "report" [@@bs.get] 
    external setReport : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like -> report:string ->  unit = "report" [@@bs.set]
    external version : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like ->  string = "version" [@@bs.get] 
    external setVersion : browserElementErrorEventDetail:('own) _BrowserElementErrorEventDetail_like -> version:string ->  unit = "version" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementErrorEventDetail) in
      (return:(_) _BrowserElementErrorEventDetail_like)
    
end
 module BrowserElementLocationChangeEventDetail = struct
    
    
    external make : ?url:string -> ?canGoBack:Js.boolean -> ?canGoForward:Js.boolean -> unit ->  _BrowserElementLocationChangeEventDetail = "" [@@bs.obj]
    external url : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    external canGoBack : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like ->  bool = "canGoBack" [@@bs.get] 
    external setCanGoBack : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like -> canGoBack:Js.boolean ->  unit = "canGoBack" [@@bs.set]
    external canGoForward : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like ->  bool = "canGoForward" [@@bs.get] 
    external setCanGoForward : browserElementLocationChangeEventDetail:('own) _BrowserElementLocationChangeEventDetail_like -> canGoForward:Js.boolean ->  unit = "canGoForward" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementLocationChangeEventDetail) in
      (return:(_) _BrowserElementLocationChangeEventDetail_like)
    
end
 module BrowserElementIconChangeEventDetail = struct
    
    
    external make : ?rel:string -> ?href:string -> ?sizes:string -> unit ->  _BrowserElementIconChangeEventDetail = "" [@@bs.obj]
    external rel : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like ->  string = "rel" [@@bs.get] 
    external setRel : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like -> rel:string ->  unit = "rel" [@@bs.set]
    external href : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like ->  string = "href" [@@bs.get] 
    external setHref : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like -> href:string ->  unit = "href" [@@bs.set]
    external sizes : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like ->  string = "sizes" [@@bs.get] 
    external setSizes : browserElementIconChangeEventDetail:('own) _BrowserElementIconChangeEventDetail_like -> sizes:string ->  unit = "sizes" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementIconChangeEventDetail) in
      (return:(_) _BrowserElementIconChangeEventDetail_like)
    
end
 module BrowserShowModalPromptEventDetail = struct
    
    
    external make : ?promptType:string -> ?title:string -> ?message:string -> ?returnValue:string -> unit ->  _BrowserShowModalPromptEventDetail = "" [@@bs.obj]
    external promptType : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like ->  string = "promptType" [@@bs.get] 
    external setPromptType : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like -> promptType:string ->  unit = "promptType" [@@bs.set]
    external title : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like ->  string = "title" [@@bs.get] 
    external setTitle : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like -> title:string ->  unit = "title" [@@bs.set]
    external message : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like ->  string = "message" [@@bs.get] 
    external setMessage : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like -> message:string ->  unit = "message" [@@bs.set]
    external returnValue : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : browserShowModalPromptEventDetail:('own) _BrowserShowModalPromptEventDetail_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserShowModalPromptEventDetail) in
      (return:(_) _BrowserShowModalPromptEventDetail_like)
    
end
 module BrowserElementOpenTabEventDetail = struct
    
    
    external make : ?url:string -> unit ->  _BrowserElementOpenTabEventDetail = "" [@@bs.obj]
    external url : browserElementOpenTabEventDetail:('own) _BrowserElementOpenTabEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementOpenTabEventDetail:('own) _BrowserElementOpenTabEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementOpenTabEventDetail) in
      (return:(_) _BrowserElementOpenTabEventDetail_like)
    
end
 module BrowserElementOpenWindowEventDetail = struct
    
    
    external make : ?url:string -> ?target:string -> ?features:string -> unit ->  _BrowserElementOpenWindowEventDetail = "" [@@bs.obj]
    external url : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like ->  string = "url" [@@bs.get] 
    external setUrl : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like -> url:string ->  unit = "url" [@@bs.set]
    external target : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like ->  string = "target" [@@bs.get] 
    external setTarget : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like -> target:string ->  unit = "target" [@@bs.set]
    external features : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like ->  string = "features" [@@bs.get] 
    external setFeatures : browserElementOpenWindowEventDetail:('own) _BrowserElementOpenWindowEventDetail_like -> features:string ->  unit = "features" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementOpenWindowEventDetail) in
      (return:(_) _BrowserElementOpenWindowEventDetail_like)
    
end
 module BrowserElementVisibilityChangeEventDetail = struct
    
    
    external make : ?visible:Js.boolean -> unit ->  _BrowserElementVisibilityChangeEventDetail = "" [@@bs.obj]
    external visible : browserElementVisibilityChangeEventDetail:('own) _BrowserElementVisibilityChangeEventDetail_like ->  bool = "visible" [@@bs.get] 
    external setVisible : browserElementVisibilityChangeEventDetail:('own) _BrowserElementVisibilityChangeEventDetail_like -> visible:Js.boolean ->  unit = "visible" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BrowserElementVisibilityChangeEventDetail) in
      (return:(_) _BrowserElementVisibilityChangeEventDetail_like)
    
end
 module TestDictionary = struct
    
    
    external make : requiredValue:Js.boolean -> ?booleanValue:Js.boolean -> ?byteValue:int -> ?octetValue:int -> ?shortValue:int -> ?unsignedShortValue:int -> ?longValue:int -> ?unsignedLongValue:int -> ?longLongValue:int -> ?unsignedLongLongValue:int -> ?unrestrictedFloatValue:float -> ?floatValue:float -> ?unrestrictedDoubleValue:float -> ?doubleValue:float -> ?stringValue:string -> ?usvstringValue:string -> ?enumValue:string -> ?interfaceValue:(_) _Blob_like -> ?anyValue:'a440 -> ?objectValue:'a441 -> ?dict:(_) _TestDictionaryDefaults_like -> ?seqDict:(_) _TestDictionaryDefaults_like array -> ?type_:string -> ?nonRequiredNullable:string Js.null -> ?nonRequiredNullable2:string Js.null -> unit ->  _TestDictionary = "" [@@bs.obj]
    external requiredValue : testDictionary:('own) _TestDictionary_like ->  bool = "requiredValue" [@@bs.get] 
    external setRequiredValue : testDictionary:('own) _TestDictionary_like -> requiredValue:Js.boolean ->  unit = "requiredValue" [@@bs.set]
    external booleanValue : testDictionary:('own) _TestDictionary_like ->  bool = "booleanValue" [@@bs.get] 
    external setBooleanValue : testDictionary:('own) _TestDictionary_like -> booleanValue:Js.boolean ->  unit = "booleanValue" [@@bs.set]
    external byteValue : testDictionary:('own) _TestDictionary_like ->  int = "byteValue" [@@bs.get] 
    external setByteValue : testDictionary:('own) _TestDictionary_like -> byteValue:int ->  unit = "byteValue" [@@bs.set]
    external octetValue : testDictionary:('own) _TestDictionary_like ->  int = "octetValue" [@@bs.get] 
    external setOctetValue : testDictionary:('own) _TestDictionary_like -> octetValue:int ->  unit = "octetValue" [@@bs.set]
    external shortValue : testDictionary:('own) _TestDictionary_like ->  int = "shortValue" [@@bs.get] 
    external setShortValue : testDictionary:('own) _TestDictionary_like -> shortValue:int ->  unit = "shortValue" [@@bs.set]
    external unsignedShortValue : testDictionary:('own) _TestDictionary_like ->  int = "unsignedShortValue" [@@bs.get] 
    external setUnsignedShortValue : testDictionary:('own) _TestDictionary_like -> unsignedShortValue:int ->  unit = "unsignedShortValue" [@@bs.set]
    external longValue : testDictionary:('own) _TestDictionary_like ->  int = "longValue" [@@bs.get] 
    external setLongValue : testDictionary:('own) _TestDictionary_like -> longValue:int ->  unit = "longValue" [@@bs.set]
    external unsignedLongValue : testDictionary:('own) _TestDictionary_like ->  int = "unsignedLongValue" [@@bs.get] 
    external setUnsignedLongValue : testDictionary:('own) _TestDictionary_like -> unsignedLongValue:int ->  unit = "unsignedLongValue" [@@bs.set]
    external longLongValue : testDictionary:('own) _TestDictionary_like ->  int = "longLongValue" [@@bs.get] 
    external setLongLongValue : testDictionary:('own) _TestDictionary_like -> longLongValue:int ->  unit = "longLongValue" [@@bs.set]
    external unsignedLongLongValue : testDictionary:('own) _TestDictionary_like ->  int = "unsignedLongLongValue" [@@bs.get] 
    external setUnsignedLongLongValue : testDictionary:('own) _TestDictionary_like -> unsignedLongLongValue:int ->  unit = "unsignedLongLongValue" [@@bs.set]
    external unrestrictedFloatValue : testDictionary:('own) _TestDictionary_like ->  float = "unrestrictedFloatValue" [@@bs.get] 
    external setUnrestrictedFloatValue : testDictionary:('own) _TestDictionary_like -> unrestrictedFloatValue:float ->  unit = "unrestrictedFloatValue" [@@bs.set]
    external floatValue : testDictionary:('own) _TestDictionary_like ->  float = "floatValue" [@@bs.get] 
    external setFloatValue : testDictionary:('own) _TestDictionary_like -> floatValue:float ->  unit = "floatValue" [@@bs.set]
    external unrestrictedDoubleValue : testDictionary:('own) _TestDictionary_like ->  float = "unrestrictedDoubleValue" [@@bs.get] 
    external setUnrestrictedDoubleValue : testDictionary:('own) _TestDictionary_like -> unrestrictedDoubleValue:float ->  unit = "unrestrictedDoubleValue" [@@bs.set]
    external doubleValue : testDictionary:('own) _TestDictionary_like ->  float = "doubleValue" [@@bs.get] 
    external setDoubleValue : testDictionary:('own) _TestDictionary_like -> doubleValue:float ->  unit = "doubleValue" [@@bs.set]
    external stringValue : testDictionary:('own) _TestDictionary_like ->  string = "stringValue" [@@bs.get] 
    external setStringValue : testDictionary:('own) _TestDictionary_like -> stringValue:string ->  unit = "stringValue" [@@bs.set]
    external usvstringValue : testDictionary:('own) _TestDictionary_like ->  string = "usvstringValue" [@@bs.get] 
    external setUsvstringValue : testDictionary:('own) _TestDictionary_like -> usvstringValue:string ->  unit = "usvstringValue" [@@bs.set]
    external enumValue : testDictionary:('own) _TestDictionary_like ->  string = "enumValue" [@@bs.get] 
    external setEnumValue : testDictionary:('own) _TestDictionary_like -> enumValue:string ->  unit = "enumValue" [@@bs.set]
    external interfaceValue : testDictionary:('own) _TestDictionary_like ->  _Blob = "interfaceValue" [@@bs.get] 
    external setInterfaceValue : testDictionary:('own) _TestDictionary_like -> interfaceValue:_Blob ->  unit = "interfaceValue" [@@bs.set]
    external anyValue : testDictionary:('own) _TestDictionary_like ->  'a442 = "anyValue" [@@bs.get] 
    external setAnyValue : testDictionary:('own) _TestDictionary_like -> anyValue:'a443 ->  unit = "anyValue" [@@bs.set]
    external objectValue : testDictionary:('own) _TestDictionary_like ->  'a444 = "objectValue" [@@bs.get] 
    external setObjectValue : testDictionary:('own) _TestDictionary_like -> objectValue:'a445 ->  unit = "objectValue" [@@bs.set]
    external dict : testDictionary:('own) _TestDictionary_like ->  _TestDictionaryDefaults = "dict" [@@bs.get] 
    external setDict : testDictionary:('own) _TestDictionary_like -> dict:_TestDictionaryDefaults ->  unit = "dict" [@@bs.set]
    external seqDict : testDictionary:('own) _TestDictionary_like ->  _TestDictionaryDefaults array = "seqDict" [@@bs.get] 
    external setSeqDict : testDictionary:('own) _TestDictionary_like -> seqDict:_TestDictionaryDefaults array ->  unit = "seqDict" [@@bs.set]
    external type_ : testDictionary:('own) _TestDictionary_like ->  string = "type" [@@bs.get] 
    external setType : testDictionary:('own) _TestDictionary_like -> type_:string ->  unit = "type" [@@bs.set]
    external nonRequiredNullable : testDictionary:('own) _TestDictionary_like ->  string option = "nonRequiredNullable" [@@bs.get] [@@bs.return null_to_opt]
    external setNonRequiredNullable : testDictionary:('own) _TestDictionary_like -> nonRequiredNullable:string Js.null ->  unit = "nonRequiredNullable" [@@bs.set]
    external nonRequiredNullable2 : testDictionary:('own) _TestDictionary_like ->  string option = "nonRequiredNullable2" [@@bs.get] [@@bs.return null_to_opt]
    external setNonRequiredNullable2 : testDictionary:('own) _TestDictionary_like -> nonRequiredNullable2:string Js.null ->  unit = "nonRequiredNullable2" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_TestDictionary) in
      (return:(_) _TestDictionary_like)
    
end
 module TestDictionaryDefaults = struct
    
    
    external make : ?booleanValue:Js.boolean -> ?byteValue:int -> ?octetValue:int -> ?shortValue:int -> ?unsignedShortValue:int -> ?longValue:int -> ?unsignedLongValue:int -> ?longLongValue:int -> ?unsignedLongLongValue:int -> ?unrestrictedFloatValue:float -> ?floatValue:float -> ?unrestrictedDoubleValue:float -> ?doubleValue:float -> ?bytestringValue:string -> ?stringValue:string -> ?usvstringValue:string -> ?enumValue:string -> ?anyValue:'a446 -> ?nullableBooleanValue:Js.boolean Js.null -> ?nullableByteValue:int Js.null -> ?nullableOctetValue:int Js.null -> ?nullableShortValue:int Js.null -> ?nullableUnsignedShortValue:int Js.null -> ?nullableLongValue:int Js.null -> ?nullableUnsignedLongValue:int Js.null -> ?nullableLongLongValue:int Js.null -> ?nullableUnsignedLongLongValue:int Js.null -> ?nullableUnrestrictedFloatValue:float Js.null -> ?nullableFloatValue:float Js.null -> ?nullableUnrestrictedDoubleValue:float Js.null -> ?nullableDoubleValue:float Js.null -> ?nullableBytestringValue:string Js.null -> ?nullableStringValue:string Js.null -> ?nullableUsvstringValue:string Js.null -> ?nullableObjectValue:'a447 Js.null -> unit ->  _TestDictionaryDefaults = "" [@@bs.obj]
    external booleanValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  bool = "booleanValue" [@@bs.get] 
    external setBooleanValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> booleanValue:Js.boolean ->  unit = "booleanValue" [@@bs.set]
    external byteValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "byteValue" [@@bs.get] 
    external setByteValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> byteValue:int ->  unit = "byteValue" [@@bs.set]
    external octetValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "octetValue" [@@bs.get] 
    external setOctetValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> octetValue:int ->  unit = "octetValue" [@@bs.set]
    external shortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "shortValue" [@@bs.get] 
    external setShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> shortValue:int ->  unit = "shortValue" [@@bs.set]
    external unsignedShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "unsignedShortValue" [@@bs.get] 
    external setUnsignedShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> unsignedShortValue:int ->  unit = "unsignedShortValue" [@@bs.set]
    external longValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "longValue" [@@bs.get] 
    external setLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> longValue:int ->  unit = "longValue" [@@bs.set]
    external unsignedLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "unsignedLongValue" [@@bs.get] 
    external setUnsignedLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> unsignedLongValue:int ->  unit = "unsignedLongValue" [@@bs.set]
    external longLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "longLongValue" [@@bs.get] 
    external setLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> longLongValue:int ->  unit = "longLongValue" [@@bs.set]
    external unsignedLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int = "unsignedLongLongValue" [@@bs.get] 
    external setUnsignedLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> unsignedLongLongValue:int ->  unit = "unsignedLongLongValue" [@@bs.set]
    external unrestrictedFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float = "unrestrictedFloatValue" [@@bs.get] 
    external setUnrestrictedFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> unrestrictedFloatValue:float ->  unit = "unrestrictedFloatValue" [@@bs.set]
    external floatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float = "floatValue" [@@bs.get] 
    external setFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> floatValue:float ->  unit = "floatValue" [@@bs.set]
    external unrestrictedDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float = "UnrestrictedDoubleValue" [@@bs.get] 
    external setUnrestrictedDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> unrestrictedDoubleValue:float ->  unit = "UnrestrictedDoubleValue" [@@bs.set]
    external doubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float = "doubleValue" [@@bs.get] 
    external setDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> doubleValue:float ->  unit = "doubleValue" [@@bs.set]
    external bytestringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string = "bytestringValue" [@@bs.get] 
    external setBytestringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> bytestringValue:string ->  unit = "bytestringValue" [@@bs.set]
    external stringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string = "stringValue" [@@bs.get] 
    external setStringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> stringValue:string ->  unit = "stringValue" [@@bs.set]
    external usvstringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string = "usvstringValue" [@@bs.get] 
    external setUsvstringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> usvstringValue:string ->  unit = "usvstringValue" [@@bs.set]
    external enumValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string = "enumValue" [@@bs.get] 
    external setEnumValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> enumValue:string ->  unit = "enumValue" [@@bs.set]
    external anyValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  'a448 = "anyValue" [@@bs.get] 
    external setAnyValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> anyValue:'a449 ->  unit = "anyValue" [@@bs.set]
    external nullableBooleanValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  Js.boolean option = "nullableBooleanValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableBooleanValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableBooleanValue:Js.boolean Js.null ->  unit = "nullableBooleanValue" [@@bs.set]
    external nullableByteValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableByteValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableByteValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableByteValue:int Js.null ->  unit = "nullableByteValue" [@@bs.set]
    external nullableOctetValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableOctetValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableOctetValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableOctetValue:int Js.null ->  unit = "nullableOctetValue" [@@bs.set]
    external nullableShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableShortValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableShortValue:int Js.null ->  unit = "nullableShortValue" [@@bs.set]
    external nullableUnsignedShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableUnsignedShortValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedShortValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUnsignedShortValue:int Js.null ->  unit = "nullableUnsignedShortValue" [@@bs.set]
    external nullableLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableLongValue:int Js.null ->  unit = "nullableLongValue" [@@bs.set]
    external nullableUnsignedLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableUnsignedLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUnsignedLongValue:int Js.null ->  unit = "nullableUnsignedLongValue" [@@bs.set]
    external nullableLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableLongLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableLongLongValue:int Js.null ->  unit = "nullableLongLongValue" [@@bs.set]
    external nullableUnsignedLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  int option = "nullableUnsignedLongLongValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnsignedLongLongValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUnsignedLongLongValue:int Js.null ->  unit = "nullableUnsignedLongLongValue" [@@bs.set]
    external nullableUnrestrictedFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float option = "nullableUnrestrictedFloatValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnrestrictedFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUnrestrictedFloatValue:float Js.null ->  unit = "nullableUnrestrictedFloatValue" [@@bs.set]
    external nullableFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float option = "nullableFloatValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableFloatValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableFloatValue:float Js.null ->  unit = "nullableFloatValue" [@@bs.set]
    external nullableUnrestrictedDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float option = "nullableUnrestrictedDoubleValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUnrestrictedDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUnrestrictedDoubleValue:float Js.null ->  unit = "nullableUnrestrictedDoubleValue" [@@bs.set]
    external nullableDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  float option = "nullableDoubleValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableDoubleValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableDoubleValue:float Js.null ->  unit = "nullableDoubleValue" [@@bs.set]
    external nullableBytestringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string option = "nullableBytestringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableBytestringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableBytestringValue:string Js.null ->  unit = "nullableBytestringValue" [@@bs.set]
    external nullableStringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string option = "nullableStringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableStringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableStringValue:string Js.null ->  unit = "nullableStringValue" [@@bs.set]
    external nullableUsvstringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  string option = "nullableUsvstringValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableUsvstringValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableUsvstringValue:string Js.null ->  unit = "nullableUsvstringValue" [@@bs.set]
    external nullableObjectValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like ->  'a450 option = "nullableObjectValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNullableObjectValue : testDictionaryDefaults:('own) _TestDictionaryDefaults_like -> nullableObjectValue:'a451 Js.null ->  unit = "nullableObjectValue" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_TestDictionaryDefaults) in
      (return:(_) _TestDictionaryDefaults_like)
    
end
 module TextDecoderOptions = struct
    
    
    external make : ?fatal:Js.boolean -> unit ->  _TextDecoderOptions = "" [@@bs.obj]
    external fatal : textDecoderOptions:('own) _TextDecoderOptions_like ->  bool = "fatal" [@@bs.get] 
    external setFatal : textDecoderOptions:('own) _TextDecoderOptions_like -> fatal:Js.boolean ->  unit = "fatal" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_TextDecoderOptions) in
      (return:(_) _TextDecoderOptions_like)
    
end
 module WorkletOptions = struct
    
    
    external make : ?credentials:string -> unit ->  _WorkletOptions = "" [@@bs.obj]
    external credentials : workletOptions:('own) _WorkletOptions_like ->  string = "credentials" [@@bs.get] 
    external setCredentials : workletOptions:('own) _WorkletOptions_like -> credentials:string ->  unit = "credentials" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_WorkletOptions) in
      (return:(_) _WorkletOptions_like)
    
end
 module DOMPointInit = struct
    
    
    external make : ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit ->  _DOMPointInit = "" [@@bs.obj]
    external x : dOMPointInit:('own) _DOMPointInit_like ->  float = "x" [@@bs.get] 
    external setX : dOMPointInit:('own) _DOMPointInit_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMPointInit:('own) _DOMPointInit_like ->  float = "y" [@@bs.get] 
    external setY : dOMPointInit:('own) _DOMPointInit_like -> y:float ->  unit = "y" [@@bs.set]
    external z : dOMPointInit:('own) _DOMPointInit_like ->  float = "z" [@@bs.get] 
    external setZ : dOMPointInit:('own) _DOMPointInit_like -> z:float ->  unit = "z" [@@bs.set]
    external w : dOMPointInit:('own) _DOMPointInit_like ->  float = "w" [@@bs.get] 
    external setW : dOMPointInit:('own) _DOMPointInit_like -> w:float ->  unit = "w" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMPointInit) in
      (return:(_) _DOMPointInit_like)
    
end
 module DOMQuadInit = struct
    
    
    external make : ?p1:(_) _DOMPointInit_like -> ?p2:(_) _DOMPointInit_like -> ?p3:(_) _DOMPointInit_like -> ?p4:(_) _DOMPointInit_like -> unit ->  _DOMQuadInit = "" [@@bs.obj]
    external p1 : dOMQuadInit:('own) _DOMQuadInit_like ->  _DOMPointInit = "p1" [@@bs.get] 
    external setP1 : dOMQuadInit:('own) _DOMQuadInit_like -> p1:_DOMPointInit ->  unit = "p1" [@@bs.set]
    external p2 : dOMQuadInit:('own) _DOMQuadInit_like ->  _DOMPointInit = "p2" [@@bs.get] 
    external setP2 : dOMQuadInit:('own) _DOMQuadInit_like -> p2:_DOMPointInit ->  unit = "p2" [@@bs.set]
    external p3 : dOMQuadInit:('own) _DOMQuadInit_like ->  _DOMPointInit = "p3" [@@bs.get] 
    external setP3 : dOMQuadInit:('own) _DOMQuadInit_like -> p3:_DOMPointInit ->  unit = "p3" [@@bs.set]
    external p4 : dOMQuadInit:('own) _DOMQuadInit_like ->  _DOMPointInit = "p4" [@@bs.get] 
    external setP4 : dOMQuadInit:('own) _DOMQuadInit_like -> p4:_DOMPointInit ->  unit = "p4" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMQuadInit) in
      (return:(_) _DOMQuadInit_like)
    
end
 module RequestInit = struct
    
    
    external make : ?method_:string -> ?headers:'a452 -> ?body:'a453 Js.null -> ?referrer:string -> ?referrerPolicy:string -> ?mode:string -> ?credentials:string -> ?cache:string -> ?redirect:string -> ?integrity:string -> ?window:'a454 -> unit ->  _RequestInit = "" [@@bs.obj]
    external method_ : requestInit:('own) _RequestInit_like ->  string = "method" [@@bs.get] 
    external setMethod : requestInit:('own) _RequestInit_like -> method_:string ->  unit = "method" [@@bs.set]
    external headers : requestInit:('own) _RequestInit_like ->  'a455 = "headers" [@@bs.get] 
    external setHeaders : requestInit:('own) _RequestInit_like -> headers:'a456 ->  unit = "headers" [@@bs.set]
    external body : requestInit:('own) _RequestInit_like ->  'a457 option = "body" [@@bs.get] [@@bs.return null_to_opt]
    external setBody : requestInit:('own) _RequestInit_like -> body:'a458 Js.null ->  unit = "body" [@@bs.set]
    external referrer : requestInit:('own) _RequestInit_like ->  string = "referrer" [@@bs.get] 
    external setReferrer : requestInit:('own) _RequestInit_like -> referrer:string ->  unit = "referrer" [@@bs.set]
    external referrerPolicy : requestInit:('own) _RequestInit_like ->  string = "referrerPolicy" [@@bs.get] 
    external setReferrerPolicy : requestInit:('own) _RequestInit_like -> referrerPolicy:string ->  unit = "referrerPolicy" [@@bs.set]
    external mode : requestInit:('own) _RequestInit_like ->  string = "mode" [@@bs.get] 
    external setMode : requestInit:('own) _RequestInit_like -> mode:string ->  unit = "mode" [@@bs.set]
    external credentials : requestInit:('own) _RequestInit_like ->  string = "credentials" [@@bs.get] 
    external setCredentials : requestInit:('own) _RequestInit_like -> credentials:string ->  unit = "credentials" [@@bs.set]
    external cache : requestInit:('own) _RequestInit_like ->  string = "cache" [@@bs.get] 
    external setCache : requestInit:('own) _RequestInit_like -> cache:string ->  unit = "cache" [@@bs.set]
    external redirect : requestInit:('own) _RequestInit_like ->  string = "redirect" [@@bs.get] 
    external setRedirect : requestInit:('own) _RequestInit_like -> redirect:string ->  unit = "redirect" [@@bs.set]
    external integrity : requestInit:('own) _RequestInit_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : requestInit:('own) _RequestInit_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external window : requestInit:('own) _RequestInit_like ->  'a459 = "window" [@@bs.get] 
    external setWindow : requestInit:('own) _RequestInit_like -> window:'a460 ->  unit = "window" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_RequestInit) in
      (return:(_) _RequestInit_like)
    
end
 module ElementCreationOptions = struct
    
    
    external make : ?is:string -> unit ->  _ElementCreationOptions = "" [@@bs.obj]
    external is : elementCreationOptions:('own) _ElementCreationOptions_like ->  string = "is" [@@bs.get] 
    external setIs : elementCreationOptions:('own) _ElementCreationOptions_like -> is:string ->  unit = "is" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ElementCreationOptions) in
      (return:(_) _ElementCreationOptions_like)
    
end
 module ResponseInit = struct
    
    
    external make : ?status:int -> ?statusText:string -> ?headers:'a461 -> unit ->  _ResponseInit = "" [@@bs.obj]
    external status : responseInit:('own) _ResponseInit_like ->  int = "status" [@@bs.get] 
    external setStatus : responseInit:('own) _ResponseInit_like -> status:int ->  unit = "status" [@@bs.set]
    external statusText : responseInit:('own) _ResponseInit_like ->  string = "statusText" [@@bs.get] 
    external setStatusText : responseInit:('own) _ResponseInit_like -> statusText:string ->  unit = "statusText" [@@bs.set]
    external headers : responseInit:('own) _ResponseInit_like ->  'a462 = "headers" [@@bs.get] 
    external setHeaders : responseInit:('own) _ResponseInit_like -> headers:'a463 ->  unit = "headers" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ResponseInit) in
      (return:(_) _ResponseInit_like)
    
end
 module BluetoothDataFilterInit = struct
    
    
    external make : ?dataPrefix:int array -> ?mask:int array -> unit ->  _BluetoothDataFilterInit = "" [@@bs.obj]
    external dataPrefix : bluetoothDataFilterInit:('own) _BluetoothDataFilterInit_like ->  int array = "dataPrefix" [@@bs.get] 
    external setDataPrefix : bluetoothDataFilterInit:('own) _BluetoothDataFilterInit_like -> dataPrefix:int array ->  unit = "dataPrefix" [@@bs.set]
    external mask : bluetoothDataFilterInit:('own) _BluetoothDataFilterInit_like ->  int array = "mask" [@@bs.get] 
    external setMask : bluetoothDataFilterInit:('own) _BluetoothDataFilterInit_like -> mask:int array ->  unit = "mask" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothDataFilterInit) in
      (return:(_) _BluetoothDataFilterInit_like)
    
end
 module BluetoothLEScanFilterInit = struct
    
    
    external make : ?services:'a464 array -> ?name:string -> ?namePrefix:string -> ?manufacturerData:'a465 -> ?serviceData:'a466 -> unit ->  _BluetoothLEScanFilterInit = "" [@@bs.obj]
    external services : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like ->  'a467 array = "services" [@@bs.get] 
    external setServices : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like -> services:'a468 array ->  unit = "services" [@@bs.set]
    external name : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like ->  string = "name" [@@bs.get] 
    external setName : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like -> name:string ->  unit = "name" [@@bs.set]
    external namePrefix : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like ->  string = "namePrefix" [@@bs.get] 
    external setNamePrefix : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like -> namePrefix:string ->  unit = "namePrefix" [@@bs.set]
    external manufacturerData : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like ->  'a469 = "manufacturerData" [@@bs.get] 
    external setManufacturerData : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like -> manufacturerData:'a470 ->  unit = "manufacturerData" [@@bs.set]
    external serviceData : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like ->  'a471 = "serviceData" [@@bs.get] 
    external setServiceData : bluetoothLEScanFilterInit:('own) _BluetoothLEScanFilterInit_like -> serviceData:'a472 ->  unit = "serviceData" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothLEScanFilterInit) in
      (return:(_) _BluetoothLEScanFilterInit_like)
    
end
 module RequestDeviceOptions = struct
    
    
    external make : ?filters:(_) _BluetoothLEScanFilterInit_like array -> ?optionalServices:'a473 array -> ?acceptAllDevices:Js.boolean -> unit ->  _RequestDeviceOptions = "" [@@bs.obj]
    external filters : requestDeviceOptions:('own) _RequestDeviceOptions_like ->  _BluetoothLEScanFilterInit array = "filters" [@@bs.get] 
    external setFilters : requestDeviceOptions:('own) _RequestDeviceOptions_like -> filters:_BluetoothLEScanFilterInit array ->  unit = "filters" [@@bs.set]
    external optionalServices : requestDeviceOptions:('own) _RequestDeviceOptions_like ->  'a474 array = "optionalServices" [@@bs.get] 
    external setOptionalServices : requestDeviceOptions:('own) _RequestDeviceOptions_like -> optionalServices:'a475 array ->  unit = "optionalServices" [@@bs.set]
    external acceptAllDevices : requestDeviceOptions:('own) _RequestDeviceOptions_like ->  bool = "acceptAllDevices" [@@bs.get] 
    external setAcceptAllDevices : requestDeviceOptions:('own) _RequestDeviceOptions_like -> acceptAllDevices:Js.boolean ->  unit = "acceptAllDevices" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_RequestDeviceOptions) in
      (return:(_) _RequestDeviceOptions_like)
    
end
 module MutationObserverInit = struct
    
    
    external make : ?childList:Js.boolean -> ?attributes:Js.boolean -> ?characterData:Js.boolean -> ?subtree:Js.boolean -> ?attributeOldValue:Js.boolean -> ?characterDataOldValue:Js.boolean -> ?attributeFilter:string array -> unit ->  _MutationObserverInit = "" [@@bs.obj]
    external childList : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "childList" [@@bs.get] 
    external setChildList : mutationObserverInit:('own) _MutationObserverInit_like -> childList:Js.boolean ->  unit = "childList" [@@bs.set]
    external attributes : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "attributes" [@@bs.get] 
    external setAttributes : mutationObserverInit:('own) _MutationObserverInit_like -> attributes:Js.boolean ->  unit = "attributes" [@@bs.set]
    external characterData : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "characterData" [@@bs.get] 
    external setCharacterData : mutationObserverInit:('own) _MutationObserverInit_like -> characterData:Js.boolean ->  unit = "characterData" [@@bs.set]
    external subtree : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "subtree" [@@bs.get] 
    external setSubtree : mutationObserverInit:('own) _MutationObserverInit_like -> subtree:Js.boolean ->  unit = "subtree" [@@bs.set]
    external attributeOldValue : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "attributeOldValue" [@@bs.get] 
    external setAttributeOldValue : mutationObserverInit:('own) _MutationObserverInit_like -> attributeOldValue:Js.boolean ->  unit = "attributeOldValue" [@@bs.set]
    external characterDataOldValue : mutationObserverInit:('own) _MutationObserverInit_like ->  bool = "characterDataOldValue" [@@bs.get] 
    external setCharacterDataOldValue : mutationObserverInit:('own) _MutationObserverInit_like -> characterDataOldValue:Js.boolean ->  unit = "characterDataOldValue" [@@bs.set]
    external attributeFilter : mutationObserverInit:('own) _MutationObserverInit_like ->  string array = "attributeFilter" [@@bs.get] 
    external setAttributeFilter : mutationObserverInit:('own) _MutationObserverInit_like -> attributeFilter:string array ->  unit = "attributeFilter" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_MutationObserverInit) in
      (return:(_) _MutationObserverInit_like)
    
end
 module EventInit = struct
    
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> unit ->  _EventInit = "" [@@bs.obj]
    external bubbles : eventInit:('own) _EventInit_like ->  bool = "bubbles" [@@bs.get] 
    external setBubbles : eventInit:('own) _EventInit_like -> bubbles:Js.boolean ->  unit = "bubbles" [@@bs.set]
    external cancelable : eventInit:('own) _EventInit_like ->  bool = "cancelable" [@@bs.get] 
    external setCancelable : eventInit:('own) _EventInit_like -> cancelable:Js.boolean ->  unit = "cancelable" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_EventInit) in
      (return:(_) _EventInit_like)
    
end
 module ScrollOptions = struct
    
    
    external make : ?behavior:string -> unit ->  _ScrollOptions = "" [@@bs.obj]
    external behavior : scrollOptions:('own) _ScrollOptions_like ->  string = "behavior" [@@bs.get] 
    external setBehavior : scrollOptions:('own) _ScrollOptions_like -> behavior:string ->  unit = "behavior" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ScrollOptions) in
      (return:(_) _ScrollOptions_like)
    
end
 module BlobPropertyBag = struct
    
    
    external make : ?type_:string -> unit ->  _BlobPropertyBag = "" [@@bs.obj]
    external type_ : blobPropertyBag:('own) _BlobPropertyBag_like ->  string = "type" [@@bs.get] 
    external setType : blobPropertyBag:('own) _BlobPropertyBag_like -> type_:string ->  unit = "type" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BlobPropertyBag) in
      (return:(_) _BlobPropertyBag_like)
    
end
 module NodeFilter = struct
    
    
    external make : acceptNode:((_) _Node_like -> int [@bs]) -> unit ->  _NodeFilter = "" [@@bs.obj]
    external acceptNode : node:(_) _Node_like ->  int = "acceptNode" [@@bs.send.pipe: ('own) _NodeFilter_like] 
    
    let downcast x =
      let return = Obj.magic (x:_NodeFilter) in
      (return:(_) _NodeFilter_like)
    
    let _FILTER_ACCEPT  =
      
      1
    
    let _FILTER_REJECT  =
      
      2
    
    let _FILTER_SKIP  =
      
      3
    
    let _SHOW_ALL  =
      
      4294967295
    
    let _SHOW_ELEMENT  =
      
      1
    
    let _SHOW_ATTRIBUTE  =
      
      2
    
    let _SHOW_TEXT  =
      
      4
    
    let _SHOW_CDATA_SECTION  =
      
      8
    
    let _SHOW_ENTITY_REFERENCE  =
      
      16
    
    let _SHOW_ENTITY  =
      
      32
    
    let _SHOW_PROCESSING_INSTRUCTION  =
      
      64
    
    let _SHOW_COMMENT  =
      
      128
    
    let _SHOW_DOCUMENT  =
      
      256
    
    let _SHOW_DOCUMENT_TYPE  =
      
      512
    
    let _SHOW_DOCUMENT_FRAGMENT  =
      
      1024
    
    let _SHOW_NOTATION  =
      
      2048
    
end
 module EventListener = struct
    
    
    external make : handleEvent:((_) _Event_like -> unit [@bs]) -> unit ->  _EventListener = "" [@@bs.obj]
    external handleEvent : event:(_) _Event_like ->  unit = "handleEvent" [@@bs.send.pipe: ('own) _EventListener_like] 
    
    let downcast x =
      let return = Obj.magic (x:_EventListener) in
      (return:(_) _EventListener_like)
    
end
 module EventSource = struct
    include EventTarget
    
    external url : eventSource:('own) _EventSource_like ->  string = "url" [@@bs.get] 
    external withCredentials : eventSource:('own) _EventSource_like ->  bool = "withCredentials" [@@bs.get] 
    external readyState : eventSource:('own) _EventSource_like ->  int = "readyState" [@@bs.get] 
    external onopen : eventSource:('own) _EventSource_like ->  (_Event -> 'a476 [@bs]) option = "onopen" [@@bs.get] [@@bs.return null_to_opt]
    external setOnopen : eventSource:('own) _EventSource_like -> onopen:(_Event -> 'a477 [@bs]) Js.null ->  unit = "onopen" [@@bs.set]
    external onmessage : eventSource:('own) _EventSource_like ->  (_Event -> 'a478 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : eventSource:('own) _EventSource_like -> onmessage:(_Event -> 'a479 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onerror : eventSource:('own) _EventSource_like ->  (_Event -> 'a480 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : eventSource:('own) _EventSource_like -> onerror:(_Event -> 'a481 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external close :  unit = "close" [@@bs.send.pipe: ('own) _EventSource_like] 
    
    let downcast x =
      let return = Obj.magic (x:_EventSource) in
      (return:(_) _EventSource_like)
    
    let _CONNECTING  =
      
      0
    
    let _OPEN  =
      
      1
    
    let _CLOSED  =
      
      2
    
end
 module CSSStyleRule = struct
    include CSSRule
    
    external style : cSSStyleRule:('own) _CSSStyleRule_like ->  _CSSStyleDeclaration = "style" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSStyleRule) in
      (return:(_) _CSSStyleRule_like)
    
end
 module CSSFontFaceRule = struct
    include CSSRule
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CSSFontFaceRule) in
      (return:(_) _CSSFontFaceRule_like)
    
end
 module UIEvent = struct
    include Event
    
    external view : uIEvent:('own) _UIEvent_like ->  _Window option = "view" [@@bs.get] [@@bs.return null_to_opt]
    external detail : uIEvent:('own) _UIEvent_like ->  int = "detail" [@@bs.get] 
    external initUIEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) _Window_like Js.null -> detailArg:int ->  unit = "initUIEvent" [@@bs.send.pipe: ('own) _UIEvent_like] 
    
    let downcast x =
      let return = Obj.magic (x:_UIEvent) in
      (return:(_) _UIEvent_like)
    
    let cast_to_Dom_uiEvent x =
      let return = Obj.magic (x:_UIEvent) in
      (return:Dom.uiEvent)
    
    let cast_from_Dom_uiEvent x =
      let return = Obj.magic (x:Dom.uiEvent) in
      (return:_UIEvent)
    
end
 module GamepadEvent = struct
    include Event
    
    external gamepad : gamepadEvent:('own) _GamepadEvent_like ->  _Gamepad = "gamepad" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_GamepadEvent) in
      (return:(_) _GamepadEvent_like)
    
end
 module HTMLOptionsCollection = struct
    include HTMLCollection
    
    external length : hTMLOptionsCollection:('own) _HTMLOptionsCollection_like ->  int = "length" [@@bs.get] 
    external setLength : hTMLOptionsCollection:('own) _HTMLOptionsCollection_like -> length:int ->  unit = "length" [@@bs.set]
    external selectedIndex : hTMLOptionsCollection:('own) _HTMLOptionsCollection_like ->  int = "selectedIndex" [@@bs.get] 
    external setSelectedIndex : hTMLOptionsCollection:('own) _HTMLOptionsCollection_like -> selectedIndex:int ->  unit = "selectedIndex" [@@bs.set]
    external set : hTMLOptionsCollection:('own) _HTMLOptionsCollection_like -> index:int -> option:(_) _HTMLOptionElement_like Js.null ->  unit = "" [@@bs.set_index] 
    external add : element:'a482 -> ?before:'a483 Js.undefined ->  unit = "add" [@@bs.send.pipe: ('own) _HTMLOptionsCollection_like] 
    external remove : index:int ->  unit = "remove" [@@bs.send.pipe: ('own) _HTMLOptionsCollection_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLOptionsCollection) in
      (return:(_) _HTMLOptionsCollection_like)
    
    let add ~element ~before hTMLOptionsCollection =
      let conv_element = function
        | `HTMLOptionElement (x: (_) _HTMLOptionElement_like) -> Obj.magic x
        | `HTMLOptGroupElement (x: (_) _HTMLOptGroupElement_like) -> 
        Obj.magic x
         in
      let element = conv_element element in
      let conv_before = function
        | `HTMLElement_Null (x: (_) _HTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_before = access_undef conv_before in
      let before = conv_before before in
      let return = add ~element ~before hTMLOptionsCollection in
      return
    
    let add ~element ?before hTMLOptionsCollection =
      let conv_before = Js_undefined.from_opt in
      let before = conv_before before in
      add ~element ~before hTMLOptionsCollection
    
end
 module DOMMatrix = struct
    include DOMMatrixReadOnly
    
    external a : dOMMatrix:('own) _DOMMatrix_like ->  float = "a" [@@bs.get] 
    external setA : dOMMatrix:('own) _DOMMatrix_like -> a:float ->  unit = "a" [@@bs.set]
    external b : dOMMatrix:('own) _DOMMatrix_like ->  float = "b" [@@bs.get] 
    external setB : dOMMatrix:('own) _DOMMatrix_like -> b:float ->  unit = "b" [@@bs.set]
    external c : dOMMatrix:('own) _DOMMatrix_like ->  float = "c" [@@bs.get] 
    external setC : dOMMatrix:('own) _DOMMatrix_like -> c:float ->  unit = "c" [@@bs.set]
    external d : dOMMatrix:('own) _DOMMatrix_like ->  float = "d" [@@bs.get] 
    external setD : dOMMatrix:('own) _DOMMatrix_like -> d:float ->  unit = "d" [@@bs.set]
    external e : dOMMatrix:('own) _DOMMatrix_like ->  float = "e" [@@bs.get] 
    external setE : dOMMatrix:('own) _DOMMatrix_like -> e:float ->  unit = "e" [@@bs.set]
    external f : dOMMatrix:('own) _DOMMatrix_like ->  float = "f" [@@bs.get] 
    external setF : dOMMatrix:('own) _DOMMatrix_like -> f:float ->  unit = "f" [@@bs.set]
    external m11 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m11" [@@bs.get] 
    external setM11 : dOMMatrix:('own) _DOMMatrix_like -> m11:float ->  unit = "m11" [@@bs.set]
    external m12 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m12" [@@bs.get] 
    external setM12 : dOMMatrix:('own) _DOMMatrix_like -> m12:float ->  unit = "m12" [@@bs.set]
    external m13 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m13" [@@bs.get] 
    external setM13 : dOMMatrix:('own) _DOMMatrix_like -> m13:float ->  unit = "m13" [@@bs.set]
    external m14 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m14" [@@bs.get] 
    external setM14 : dOMMatrix:('own) _DOMMatrix_like -> m14:float ->  unit = "m14" [@@bs.set]
    external m21 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m21" [@@bs.get] 
    external setM21 : dOMMatrix:('own) _DOMMatrix_like -> m21:float ->  unit = "m21" [@@bs.set]
    external m22 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m22" [@@bs.get] 
    external setM22 : dOMMatrix:('own) _DOMMatrix_like -> m22:float ->  unit = "m22" [@@bs.set]
    external m23 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m23" [@@bs.get] 
    external setM23 : dOMMatrix:('own) _DOMMatrix_like -> m23:float ->  unit = "m23" [@@bs.set]
    external m24 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m24" [@@bs.get] 
    external setM24 : dOMMatrix:('own) _DOMMatrix_like -> m24:float ->  unit = "m24" [@@bs.set]
    external m31 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m31" [@@bs.get] 
    external setM31 : dOMMatrix:('own) _DOMMatrix_like -> m31:float ->  unit = "m31" [@@bs.set]
    external m32 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m32" [@@bs.get] 
    external setM32 : dOMMatrix:('own) _DOMMatrix_like -> m32:float ->  unit = "m32" [@@bs.set]
    external m33 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m33" [@@bs.get] 
    external setM33 : dOMMatrix:('own) _DOMMatrix_like -> m33:float ->  unit = "m33" [@@bs.set]
    external m34 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m34" [@@bs.get] 
    external setM34 : dOMMatrix:('own) _DOMMatrix_like -> m34:float ->  unit = "m34" [@@bs.set]
    external m41 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m41" [@@bs.get] 
    external setM41 : dOMMatrix:('own) _DOMMatrix_like -> m41:float ->  unit = "m41" [@@bs.set]
    external m42 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m42" [@@bs.get] 
    external setM42 : dOMMatrix:('own) _DOMMatrix_like -> m42:float ->  unit = "m42" [@@bs.set]
    external m43 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m43" [@@bs.get] 
    external setM43 : dOMMatrix:('own) _DOMMatrix_like -> m43:float ->  unit = "m43" [@@bs.set]
    external m44 : dOMMatrix:('own) _DOMMatrix_like ->  float = "m44" [@@bs.get] 
    external setM44 : dOMMatrix:('own) _DOMMatrix_like -> m44:float ->  unit = "m44" [@@bs.set]
    external fromMatrix : ?other:(_) _DOMMatrixInit_like Js.undefined ->  _DOMMatrix = "fromMatrix" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external invertSelf :  _DOMMatrix = "invertSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external multiplySelf : ?other:(_) _DOMMatrixInit_like Js.undefined ->  _DOMMatrix = "multiplySelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external preMultiplySelf : ?other:(_) _DOMMatrixInit_like Js.undefined ->  _DOMMatrix = "preMultiplySelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external rotateAxisAngleSelf : ?x:float Js.undefined -> ?y:float Js.undefined -> ?z:float Js.undefined -> ?angle:float Js.undefined ->  _DOMMatrix = "rotateAxisAngleSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external rotateFromVectorSelf : ?x:float Js.undefined -> ?y:float Js.undefined ->  _DOMMatrix = "rotateFromVectorSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external rotateSelf : ?rotX:float Js.undefined -> ?rotY:float Js.undefined -> ?rotZ:float Js.undefined ->  _DOMMatrix = "rotateSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external scale3dSelf : ?scale:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  _DOMMatrix = "scale3dSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external scaleSelf : ?scaleX:float Js.undefined -> ?scaleY:float Js.undefined -> ?scaleZ:float Js.undefined -> ?originX:float Js.undefined -> ?originY:float Js.undefined -> ?originZ:float Js.undefined ->  _DOMMatrix = "scaleSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external skewXSelf : ?sx:float Js.undefined ->  _DOMMatrix = "skewXSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external skewYSelf : ?sy:float Js.undefined ->  _DOMMatrix = "skewYSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    external translateSelf : ?tx:float Js.undefined -> ?ty:float Js.undefined -> ?tz:float Js.undefined ->  _DOMMatrix = "translateSelf" [@@bs.send.pipe: ('own) _DOMMatrix_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DOMMatrix) in
      (return:(_) _DOMMatrix_like)
    
    let fromMatrix ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      fromMatrix ~other dOMMatrix
    
    let multiplySelf ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      multiplySelf ~other dOMMatrix
    
    let preMultiplySelf ?other dOMMatrix =
      let conv_other = Js_undefined.from_opt in
      let other = conv_other other in
      preMultiplySelf ~other dOMMatrix
    
    let rotateAxisAngleSelf ?x ?y ?z ?angle dOMMatrix =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      let conv_z = Js_undefined.from_opt in
      let z = conv_z z in
      let conv_angle = Js_undefined.from_opt in
      let angle = conv_angle angle in
      rotateAxisAngleSelf ~x ~y ~z ~angle dOMMatrix
    
    let rotateFromVectorSelf ?x ?y dOMMatrix =
      let conv_x = Js_undefined.from_opt in
      let x = conv_x x in
      let conv_y = Js_undefined.from_opt in
      let y = conv_y y in
      rotateFromVectorSelf ~x ~y dOMMatrix
    
    let rotateSelf ?rotX ?rotY ?rotZ dOMMatrix =
      let conv_rotX = Js_undefined.from_opt in
      let rotX = conv_rotX rotX in
      let conv_rotY = Js_undefined.from_opt in
      let rotY = conv_rotY rotY in
      let conv_rotZ = Js_undefined.from_opt in
      let rotZ = conv_rotZ rotZ in
      rotateSelf ~rotX ~rotY ~rotZ dOMMatrix
    
    let scale3dSelf ?scale ?originX ?originY ?originZ dOMMatrix =
      let conv_scale = Js_undefined.from_opt in
      let scale = conv_scale scale in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scale3dSelf ~scale ~originX ~originY ~originZ dOMMatrix
    
    let scaleSelf ?scaleX ?scaleY ?scaleZ ?originX ?originY ?originZ dOMMatrix =
      let conv_scaleX = Js_undefined.from_opt in
      let scaleX = conv_scaleX scaleX in
      let conv_scaleY = Js_undefined.from_opt in
      let scaleY = conv_scaleY scaleY in
      let conv_scaleZ = Js_undefined.from_opt in
      let scaleZ = conv_scaleZ scaleZ in
      let conv_originX = Js_undefined.from_opt in
      let originX = conv_originX originX in
      let conv_originY = Js_undefined.from_opt in
      let originY = conv_originY originY in
      let conv_originZ = Js_undefined.from_opt in
      let originZ = conv_originZ originZ in
      scaleSelf ~scaleX ~scaleY ~scaleZ ~originX ~originY ~originZ dOMMatrix
    
    let skewXSelf ?sx dOMMatrix =
      let conv_sx = Js_undefined.from_opt in
      let sx = conv_sx sx in
      skewXSelf ~sx dOMMatrix
    
    let skewYSelf ?sy dOMMatrix =
      let conv_sy = Js_undefined.from_opt in
      let sy = conv_sy sy in
      skewYSelf ~sy dOMMatrix
    
    let translateSelf ?tx ?ty ?tz dOMMatrix =
      let conv_tx = Js_undefined.from_opt in
      let tx = conv_tx tx in
      let conv_ty = Js_undefined.from_opt in
      let ty = conv_ty ty in
      let conv_tz = Js_undefined.from_opt in
      let tz = conv_tz tz in
      translateSelf ~tx ~ty ~tz dOMMatrix
    
end
 module WebGLFramebuffer = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLFramebuffer) in
      (return:(_) _WebGLFramebuffer_like)
    
end
 module ServiceWorkerRegistration = struct
    include EventTarget
    
    external installing : serviceWorkerRegistration:('own) _ServiceWorkerRegistration_like ->  _ServiceWorker option = "installing" [@@bs.get] [@@bs.return null_to_opt]
    external waiting : serviceWorkerRegistration:('own) _ServiceWorkerRegistration_like ->  _ServiceWorker option = "waiting" [@@bs.get] [@@bs.return null_to_opt]
    external active : serviceWorkerRegistration:('own) _ServiceWorkerRegistration_like ->  _ServiceWorker option = "active" [@@bs.get] [@@bs.return null_to_opt]
    external scope : serviceWorkerRegistration:('own) _ServiceWorkerRegistration_like ->  string = "scope" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ServiceWorkerRegistration) in
      (return:(_) _ServiceWorkerRegistration_like)
    
end
 module ServiceWorkerContainer = struct
    include EventTarget
    
    external controller : serviceWorkerContainer:('own) _ServiceWorkerContainer_like ->  _ServiceWorker option = "controller" [@@bs.get] [@@bs.return null_to_opt]
    external register : scriptURL:string -> ?options:(_) _RegistrationOptions_like Js.undefined ->  _ServiceWorkerRegistration Js.Promise.t = "register" [@@bs.send.pipe: ('own) _ServiceWorkerContainer_like] 
    
    let downcast x =
      let return = Obj.magic (x:_ServiceWorkerContainer) in
      (return:(_) _ServiceWorkerContainer_like)
    
    let register ~scriptURL ?options serviceWorkerContainer =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      register ~scriptURL ~options serviceWorkerContainer
    
end
 module ErrorEvent = struct
    include Event
    
    external message : errorEvent:('own) _ErrorEvent_like ->  string = "message" [@@bs.get] 
    external filename : errorEvent:('own) _ErrorEvent_like ->  string = "filename" [@@bs.get] 
    external lineno : errorEvent:('own) _ErrorEvent_like ->  int = "lineno" [@@bs.get] 
    external colno : errorEvent:('own) _ErrorEvent_like ->  int = "colno" [@@bs.get] 
    external error : errorEvent:('own) _ErrorEvent_like ->  'a484 = "error" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ErrorEvent) in
      (return:(_) _ErrorEvent_like)
    
    let cast_to_Dom_errorEvent x =
      let return = Obj.magic (x:_ErrorEvent) in
      (return:Dom.errorEvent)
    
    let cast_from_Dom_errorEvent x =
      let return = Obj.magic (x:Dom.errorEvent) in
      (return:_ErrorEvent)
    
end
 module PermissionStatus = struct
    include EventTarget
    
    external state : permissionStatus:('own) _PermissionStatus_like ->  string = "state" [@@bs.get] 
    external onchange : permissionStatus:('own) _PermissionStatus_like ->  (_Event -> 'a485 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : permissionStatus:('own) _PermissionStatus_like -> onchange:(_Event -> 'a486 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_PermissionStatus) in
      (return:(_) _PermissionStatus_like)
    
end
 module MessageEvent = struct
    include Event
    
    external data : messageEvent:('own) _MessageEvent_like ->  'a487 = "data" [@@bs.get] 
    external origin : messageEvent:('own) _MessageEvent_like ->  string = "origin" [@@bs.get] 
    external lastEventId : messageEvent:('own) _MessageEvent_like ->  string = "lastEventId" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_MessageEvent) in
      (return:(_) _MessageEvent_like)
    
end
 module BeforeUnloadEvent = struct
    include Event
    
    external returnValue : beforeUnloadEvent:('own) _BeforeUnloadEvent_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : beforeUnloadEvent:('own) _BeforeUnloadEvent_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BeforeUnloadEvent) in
      (return:(_) _BeforeUnloadEvent_like)
    
    let cast_to_Dom_beforeUnloadEvent x =
      let return = Obj.magic (x:_BeforeUnloadEvent) in
      (return:Dom.beforeUnloadEvent)
    
    let cast_from_Dom_beforeUnloadEvent x =
      let return = Obj.magic (x:Dom.beforeUnloadEvent) in
      (return:_BeforeUnloadEvent)
    
end
 module VR = struct
    include EventTarget
    
    external getDisplays :  _VRDisplay array Js.Promise.t = "getDisplays" [@@bs.send.pipe: ('own) _VR_like] 
    
    let downcast x =
      let return = Obj.magic (x:_VR) in
      (return:(_) _VR_like)
    
end
 module DOMRect = struct
    include DOMRectReadOnly
    
    external x : dOMRect:('own) _DOMRect_like ->  float = "x" [@@bs.get] 
    external setX : dOMRect:('own) _DOMRect_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMRect:('own) _DOMRect_like ->  float = "y" [@@bs.get] 
    external setY : dOMRect:('own) _DOMRect_like -> y:float ->  unit = "y" [@@bs.set]
    external width : dOMRect:('own) _DOMRect_like ->  float = "width" [@@bs.get] 
    external setWidth : dOMRect:('own) _DOMRect_like -> width:float ->  unit = "width" [@@bs.set]
    external height : dOMRect:('own) _DOMRect_like ->  float = "height" [@@bs.get] 
    external setHeight : dOMRect:('own) _DOMRect_like -> height:float ->  unit = "height" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMRect) in
      (return:(_) _DOMRect_like)
    
    let cast_to_Dom_domRect x =
      let return = Obj.magic (x:_DOMRect) in
      (return:Dom.domRect)
    
    let cast_from_Dom_domRect x =
      let return = Obj.magic (x:Dom.domRect) in
      (return:_DOMRect)
    
end
 module BluetoothDevice = struct
    include EventTarget
    
    external ongattserverdisconnected : bluetoothDevice:('own) _BluetoothDevice_like ->  (_Event -> 'a488 [@bs]) option = "ongattserverdisconnected" [@@bs.get] [@@bs.return null_to_opt]
    external setOngattserverdisconnected : bluetoothDevice:('own) _BluetoothDevice_like -> ongattserverdisconnected:(_Event -> 'a489 [@bs]) Js.null ->  unit = "ongattserverdisconnected" [@@bs.set]
    external id : bluetoothDevice:('own) _BluetoothDevice_like ->  string = "id" [@@bs.get] 
    external name : bluetoothDevice:('own) _BluetoothDevice_like ->  string option = "name" [@@bs.get] [@@bs.return null_to_opt]
    external gatt : bluetoothDevice:('own) _BluetoothDevice_like ->  _BluetoothRemoteGATTServer option = "gatt" [@@bs.get] [@@bs.return null_to_opt]
    external watchingAdvertisements : bluetoothDevice:('own) _BluetoothDevice_like ->  bool = "watchingAdvertisements" [@@bs.get] 
    external unwatchAdvertisements :  unit = "unwatchAdvertisements" [@@bs.send.pipe: ('own) _BluetoothDevice_like] 
    external watchAdvertisements :  unit Js.Promise.t = "watchAdvertisements" [@@bs.send.pipe: ('own) _BluetoothDevice_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothDevice) in
      (return:(_) _BluetoothDevice_like)
    
end
 module CSSImportRule = struct
    include CSSRule
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CSSImportRule) in
      (return:(_) _CSSImportRule_like)
    
end
 module RadioNodeList = struct
    include NodeList
    
    external value : radioNodeList:('own) _RadioNodeList_like ->  string = "value" [@@bs.get] 
    external setValue : radioNodeList:('own) _RadioNodeList_like -> value:string ->  unit = "value" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_RadioNodeList) in
      (return:(_) _RadioNodeList_like)
    
end
 module File = struct
    include Blob
    
    external name : file:('own) _File_like ->  string = "name" [@@bs.get] 
    external lastModified : file:('own) _File_like ->  int = "lastModified" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_File) in
      (return:(_) _File_like)
    
end
 module StorageEvent = struct
    include Event
    
    external key : storageEvent:('own) _StorageEvent_like ->  string option = "key" [@@bs.get] [@@bs.return null_to_opt]
    external oldValue : storageEvent:('own) _StorageEvent_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    external newValue : storageEvent:('own) _StorageEvent_like ->  string option = "newValue" [@@bs.get] [@@bs.return null_to_opt]
    external url : storageEvent:('own) _StorageEvent_like ->  string = "url" [@@bs.get] 
    external storageArea : storageEvent:('own) _StorageEvent_like ->  _Storage option = "storageArea" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_StorageEvent) in
      (return:(_) _StorageEvent_like)
    
    let cast_to_Dom_storageEvent x =
      let return = Obj.magic (x:_StorageEvent) in
      (return:Dom.storageEvent)
    
    let cast_from_Dom_storageEvent x =
      let return = Obj.magic (x:Dom.storageEvent) in
      (return:_StorageEvent)
    
end
 module Node = struct
    include EventTarget
    
    external nodeType : node:('own) _Node_like ->  int = "nodeType" [@@bs.get] 
    external nodeName : node:('own) _Node_like ->  string = "nodeName" [@@bs.get] 
    external baseURI : node:('own) _Node_like ->  string = "baseURI" [@@bs.get] 
    external ownerDocument : node:('own) _Node_like ->  _Document option = "ownerDocument" [@@bs.get] [@@bs.return null_to_opt]
    external parentNode : node:('own) _Node_like ->  _Node option = "parentNode" [@@bs.get] [@@bs.return null_to_opt]
    external parentElement : node:('own) _Node_like ->  _Element option = "parentElement" [@@bs.get] [@@bs.return null_to_opt]
    external childNodes : node:('own) _Node_like ->  _NodeList = "childNodes" [@@bs.get] 
    external firstChild : node:('own) _Node_like ->  _Node option = "firstChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastChild : node:('own) _Node_like ->  _Node option = "lastChild" [@@bs.get] [@@bs.return null_to_opt]
    external previousSibling : node:('own) _Node_like ->  _Node option = "previousSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextSibling : node:('own) _Node_like ->  _Node option = "nextSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nodeValue : node:('own) _Node_like ->  string option = "nodeValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNodeValue : node:('own) _Node_like -> nodeValue:string Js.null ->  unit = "nodeValue" [@@bs.set]
    external textContent : node:('own) _Node_like ->  string option = "textContent" [@@bs.get] [@@bs.return null_to_opt]
    external setTextContent : node:('own) _Node_like -> textContent:string Js.null ->  unit = "textContent" [@@bs.set]
    external appendChild : node:(_) _Node_like ->  _Node = "appendChild" [@@bs.send.pipe: ('own) _Node_like] 
    external cloneNode : ?deep:Js.boolean Js.undefined ->  _Node = "cloneNode" [@@bs.send.pipe: ('own) _Node_like] 
    external compareDocumentPosition : other:(_) _Node_like ->  int = "compareDocumentPosition" [@@bs.send.pipe: ('own) _Node_like] 
    external contains : other:(_) _Node_like Js.null ->  bool = "contains" [@@bs.send.pipe: ('own) _Node_like] 
    external getRootNode :  _Node = "getRootNode" [@@bs.send.pipe: ('own) _Node_like] 
    external hasChildNodes :  bool = "hasChildNodes" [@@bs.send.pipe: ('own) _Node_like] 
    external insertBefore : node:(_) _Node_like -> child:(_) _Node_like Js.null ->  _Node = "insertBefore" [@@bs.send.pipe: ('own) _Node_like] 
    external isDefaultNamespace : namespace:string Js.null ->  bool = "isDefaultNamespace" [@@bs.send.pipe: ('own) _Node_like] 
    external isEqualNode : node:(_) _Node_like Js.null ->  bool = "isEqualNode" [@@bs.send.pipe: ('own) _Node_like] 
    external isSameNode : otherNode:(_) _Node_like Js.null ->  bool = "isSameNode" [@@bs.send.pipe: ('own) _Node_like] 
    external lookupNamespaceURI : prefix:string Js.null ->  string option = "lookupNamespaceURI" [@@bs.send.pipe: ('own) _Node_like] [@@bs.return null_to_opt]
    external lookupPrefix : namespace:string Js.null ->  string option = "lookupPrefix" [@@bs.send.pipe: ('own) _Node_like] [@@bs.return null_to_opt]
    external normalize :  unit = "normalize" [@@bs.send.pipe: ('own) _Node_like] 
    external removeChild : child:(_) _Node_like ->  _Node = "removeChild" [@@bs.send.pipe: ('own) _Node_like] 
    external replaceChild : node:(_) _Node_like -> child:(_) _Node_like ->  _Node = "replaceChild" [@@bs.send.pipe: ('own) _Node_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Node) in
      (return:(_) _Node_like)
    
    let cast_to_Dom_node x =
      let return = Obj.magic (x:_Node) in
      (return:Dom.node)
    
    let cast_from_Dom_node x =
      let return = Obj.magic (x:Dom.node) in
      (return:_Node)
    
    let _ELEMENT_NODE  =
      
      1
    
    let _ATTRIBUTE_NODE  =
      
      2
    
    let _TEXT_NODE  =
      
      3
    
    let _CDATA_SECTION_NODE  =
      
      4
    
    let _ENTITY_REFERENCE_NODE  =
      
      5
    
    let _ENTITY_NODE  =
      
      6
    
    let _PROCESSING_INSTRUCTION_NODE  =
      
      7
    
    let _COMMENT_NODE  =
      
      8
    
    let _DOCUMENT_NODE  =
      
      9
    
    let _DOCUMENT_TYPE_NODE  =
      
      10
    
    let _DOCUMENT_FRAGMENT_NODE  =
      
      11
    
    let _NOTATION_NODE  =
      
      12
    
    let _DOCUMENT_POSITION_DISCONNECTED  =
      
      1
    
    let _DOCUMENT_POSITION_PRECEDING  =
      
      2
    
    let _DOCUMENT_POSITION_FOLLOWING  =
      
      4
    
    let _DOCUMENT_POSITION_CONTAINS  =
      
      8
    
    let _DOCUMENT_POSITION_CONTAINED_BY  =
      
      16
    
    let _DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC  =
      
      32
    
    let cloneNode ?deep node =
      let conv_deep = Js_undefined.from_opt in
      let deep = conv_deep deep in
      cloneNode ~deep node
    
end
 module VRDisplayEvent = struct
    include Event
    
    external display : vRDisplayEvent:('own) _VRDisplayEvent_like ->  _VRDisplay = "display" [@@bs.get] 
    external reason : vRDisplayEvent:('own) _VRDisplayEvent_like ->  string option = "reason" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_VRDisplayEvent) in
      (return:(_) _VRDisplayEvent_like)
    
end
 module PopStateEvent = struct
    include Event
    
    external state : popStateEvent:('own) _PopStateEvent_like ->  'a490 = "state" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_PopStateEvent) in
      (return:(_) _PopStateEvent_like)
    
    let cast_to_Dom_popStateEvent x =
      let return = Obj.magic (x:_PopStateEvent) in
      (return:Dom.popStateEvent)
    
    let cast_from_Dom_popStateEvent x =
      let return = Obj.magic (x:Dom.popStateEvent) in
      (return:_PopStateEvent)
    
end
 module VRDisplay = struct
    include EventTarget
    
    external isConnected : vRDisplay:('own) _VRDisplay_like ->  bool = "isConnected" [@@bs.get] 
    external isPresenting : vRDisplay:('own) _VRDisplay_like ->  bool = "isPresenting" [@@bs.get] 
    external capabilities : vRDisplay:('own) _VRDisplay_like ->  _VRDisplayCapabilities = "capabilities" [@@bs.get] 
    external stageParameters : vRDisplay:('own) _VRDisplay_like ->  _VRStageParameters option = "stageParameters" [@@bs.get] [@@bs.return null_to_opt]
    external displayId : vRDisplay:('own) _VRDisplay_like ->  int = "displayId" [@@bs.get] 
    external displayName : vRDisplay:('own) _VRDisplay_like ->  string = "displayName" [@@bs.get] 
    external depthNear : vRDisplay:('own) _VRDisplay_like ->  float = "depthNear" [@@bs.get] 
    external setDepthNear : vRDisplay:('own) _VRDisplay_like -> depthNear:float ->  unit = "depthNear" [@@bs.set]
    external depthFar : vRDisplay:('own) _VRDisplay_like ->  float = "depthFar" [@@bs.get] 
    external setDepthFar : vRDisplay:('own) _VRDisplay_like -> depthFar:float ->  unit = "depthFar" [@@bs.set]
    external cancelAnimationFrame : handle:int ->  unit = "cancelAnimationFrame" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external exitPresent :  unit Js.Promise.t = "exitPresent" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external getEyeParameters : whichEye:string ->  _VREyeParameters = "getEyeParameters" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external getFrameData : frameData:(_) _VRFrameData_like ->  bool = "getFrameData" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external getPose :  _VRPose = "getPose" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external requestAnimationFrame : callback:(float -> unit [@bs]) ->  int = "requestAnimationFrame" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external requestPresent : layers:(_) _VRLayer_like array ->  unit Js.Promise.t = "requestPresent" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external resetPose :  unit = "resetPose" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    external submitFrame :  unit = "submitFrame" [@@bs.send.pipe: ('own) _VRDisplay_like] 
    
    let downcast x =
      let return = Obj.magic (x:_VRDisplay) in
      (return:(_) _VRDisplay_like)
    
    let getEyeParameters ~whichEye vRDisplay =
      let conv_whichEye = function
        | `left -> "left"
        | `right -> "right"
         in
      let whichEye = conv_whichEye whichEye in
      let return = getEyeParameters ~whichEye vRDisplay in
      return
    
end
 module WebGLContextEvent = struct
    include Event
    
    external statusMessage : webGLContextEvent:('own) _WebGLContextEvent_like ->  string = "statusMessage" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_WebGLContextEvent) in
      (return:(_) _WebGLContextEvent_like)
    
    let cast_to_Dom_webGlContextEvent x =
      let return = Obj.magic (x:_WebGLContextEvent) in
      (return:Dom.webGlContextEvent)
    
    let cast_from_Dom_webGlContextEvent x =
      let return = Obj.magic (x:Dom.webGlContextEvent) in
      (return:_WebGLContextEvent)
    
end
 module WebGLProgram = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLProgram) in
      (return:(_) _WebGLProgram_like)
    
end
 module BluetoothRemoteGATTCharacteristic = struct
    include EventTarget
    
    external oncharacteristicvaluechanged : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like ->  (_Event -> 'a491 [@bs]) option = "oncharacteristicvaluechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOncharacteristicvaluechanged : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like -> oncharacteristicvaluechanged:(_Event -> 'a492 [@bs]) Js.null ->  unit = "oncharacteristicvaluechanged" [@@bs.set]
    external service : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like ->  _BluetoothRemoteGATTService = "service" [@@bs.get] 
    external uuid : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like ->  string = "uuid" [@@bs.get] 
    external properties : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like ->  _BluetoothCharacteristicProperties = "properties" [@@bs.get] 
    external value : bluetoothRemoteGATTCharacteristic:('own) _BluetoothRemoteGATTCharacteristic_like ->  string option = "value" [@@bs.get] [@@bs.return null_to_opt]
    external getDescriptor : descriptor:'a493 ->  _BluetoothRemoteGATTDescriptor Js.Promise.t = "getDescriptor" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    external getDescriptors : ?descriptor:'a494 Js.undefined ->  _BluetoothRemoteGATTDescriptor array Js.Promise.t = "getDescriptors" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    external readValue :  string Js.Promise.t = "readValue" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    external startNotifications :  _BluetoothRemoteGATTCharacteristic Js.Promise.t = "startNotifications" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    external stopNotifications :  _BluetoothRemoteGATTCharacteristic Js.Promise.t = "stopNotifications" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    external writeValue : value:int array ->  unit Js.Promise.t = "writeValue" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTCharacteristic_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothRemoteGATTCharacteristic) in
      (return:(_) _BluetoothRemoteGATTCharacteristic_like)
    
    let getDescriptor ~descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let descriptor = conv_descriptor descriptor in
      let return = getDescriptor ~descriptor bluetoothRemoteGATTCharacteristic in
      return
    
    let getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_descriptor = access_undef conv_descriptor in
      let descriptor = conv_descriptor descriptor in
      let return = getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic in
      return
    
    let getDescriptors ?descriptor bluetoothRemoteGATTCharacteristic =
      let conv_descriptor = Js_undefined.from_opt in
      let descriptor = conv_descriptor descriptor in
      getDescriptors ~descriptor bluetoothRemoteGATTCharacteristic
    
end
 module CSSKeyframeRule = struct
    include CSSRule
    
    external style : cSSKeyframeRule:('own) _CSSKeyframeRule_like ->  _CSSStyleDeclaration = "style" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSKeyframeRule) in
      (return:(_) _CSSKeyframeRule_like)
    
end
 module WebGLVertexArrayObjectOES = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLVertexArrayObjectOES) in
      (return:(_) _WebGLVertexArrayObjectOES_like)
    
end
 module WebGLShader = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLShader) in
      (return:(_) _WebGLShader_like)
    
end
 module GlobalScope = struct
    include EventTarget
    
    
    
    let downcast x =
      let return = Obj.magic (x:_GlobalScope) in
      (return:(_) _GlobalScope_like)
    
end
 module TestBindingProxy = struct
    include TestBinding
    
    external length : testBindingProxy:('own) _TestBindingProxy_like ->  int = "length" [@@bs.get] 
    external getItem : index:int ->  string = "getItem" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    external getNamedItem : item_name:string ->  string = "getNamedItem" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    external removeItem : name:string ->  unit = "removeItem" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    external setItem : index:int -> value:string ->  unit = "setItem" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    external setNamedItem : item_name:string -> value:string ->  unit = "setNamedItem" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _TestBindingProxy_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestBindingProxy) in
      (return:(_) _TestBindingProxy_like)
    
end
 module HTMLFormControlsCollection = struct
    include HTMLCollection
    
    external namedItem : name:string ->  'a495 = "namedItem" [@@bs.send.pipe: ('own) _HTMLFormControlsCollection_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFormControlsCollection) in
      (return:(_) _HTMLFormControlsCollection_like)
    
end
 module CustomEvent = struct
    include Event
    
    external detail : customEvent:('own) _CustomEvent_like ->  'a496 = "detail" [@@bs.get] 
    external initCustomEvent : type_:string -> bubbles:Js.boolean -> cancelable:Js.boolean -> detail:'a497 ->  unit = "initCustomEvent" [@@bs.send.pipe: ('own) _CustomEvent_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CustomEvent) in
      (return:(_) _CustomEvent_like)
    
    let cast_to_Dom_customEvent x =
      let return = Obj.magic (x:_CustomEvent) in
      (return:Dom.customEvent)
    
    let cast_from_Dom_customEvent x =
      let return = Obj.magic (x:Dom.customEvent) in
      (return:_CustomEvent)
    
end
 module DOMPoint = struct
    include DOMPointReadOnly
    
    external x : dOMPoint:('own) _DOMPoint_like ->  float = "x" [@@bs.get] 
    external setX : dOMPoint:('own) _DOMPoint_like -> x:float ->  unit = "x" [@@bs.set]
    external y : dOMPoint:('own) _DOMPoint_like ->  float = "y" [@@bs.get] 
    external setY : dOMPoint:('own) _DOMPoint_like -> y:float ->  unit = "y" [@@bs.set]
    external z : dOMPoint:('own) _DOMPoint_like ->  float = "z" [@@bs.get] 
    external setZ : dOMPoint:('own) _DOMPoint_like -> z:float ->  unit = "z" [@@bs.set]
    external w : dOMPoint:('own) _DOMPoint_like ->  float = "w" [@@bs.get] 
    external setW : dOMPoint:('own) _DOMPoint_like -> w:float ->  unit = "w" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DOMPoint) in
      (return:(_) _DOMPoint_like)
    
end
 module PageTransitionEvent = struct
    include Event
    
    external persisted : pageTransitionEvent:('own) _PageTransitionEvent_like ->  bool = "persisted" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_PageTransitionEvent) in
      (return:(_) _PageTransitionEvent_like)
    
    let cast_to_Dom_pageTransitionEvent x =
      let return = Obj.magic (x:_PageTransitionEvent) in
      (return:Dom.pageTransitionEvent)
    
    let cast_from_Dom_pageTransitionEvent x =
      let return = Obj.magic (x:Dom.pageTransitionEvent) in
      (return:_PageTransitionEvent)
    
end
 module ServiceWorker = struct
    include EventTarget
    
    external onerror : serviceWorker:('own) _ServiceWorker_like ->  (_Event -> 'a498 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : serviceWorker:('own) _ServiceWorker_like -> onerror:(_Event -> 'a499 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external scriptURL : serviceWorker:('own) _ServiceWorker_like ->  string = "scriptURL" [@@bs.get] 
    external state : serviceWorker:('own) _ServiceWorker_like ->  string = "state" [@@bs.get] 
    external onstatechange : serviceWorker:('own) _ServiceWorker_like ->  (_Event -> 'a500 [@bs]) option = "onstatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstatechange : serviceWorker:('own) _ServiceWorker_like -> onstatechange:(_Event -> 'a501 [@bs]) Js.null ->  unit = "onstatechange" [@@bs.set]
    external postMessage : message:'a502 ->  unit = "postMessage" [@@bs.send.pipe: ('own) _ServiceWorker_like] 
    
    let downcast x =
      let return = Obj.magic (x:_ServiceWorker) in
      (return:(_) _ServiceWorker_like)
    
end
 module CloseEvent = struct
    include Event
    
    external wasClean : closeEvent:('own) _CloseEvent_like ->  bool = "wasClean" [@@bs.get] 
    external code : closeEvent:('own) _CloseEvent_like ->  int = "code" [@@bs.get] 
    external reason : closeEvent:('own) _CloseEvent_like ->  string = "reason" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_CloseEvent) in
      (return:(_) _CloseEvent_like)
    
    let cast_to_Dom_closeEvent x =
      let return = Obj.magic (x:_CloseEvent) in
      (return:Dom.closeEvent)
    
    let cast_from_Dom_closeEvent x =
      let return = Obj.magic (x:Dom.closeEvent) in
      (return:_CloseEvent)
    
end
 module WebSocket = struct
    include EventTarget
    
    external url : webSocket:('own) _WebSocket_like ->  string = "url" [@@bs.get] 
    external readyState : webSocket:('own) _WebSocket_like ->  int = "readyState" [@@bs.get] 
    external bufferedAmount : webSocket:('own) _WebSocket_like ->  int = "bufferedAmount" [@@bs.get] 
    external onopen : webSocket:('own) _WebSocket_like ->  (_Event -> 'a503 [@bs]) option = "onopen" [@@bs.get] [@@bs.return null_to_opt]
    external setOnopen : webSocket:('own) _WebSocket_like -> onopen:(_Event -> 'a504 [@bs]) Js.null ->  unit = "onopen" [@@bs.set]
    external onerror : webSocket:('own) _WebSocket_like ->  (_Event -> 'a505 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : webSocket:('own) _WebSocket_like -> onerror:(_Event -> 'a506 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onclose : webSocket:('own) _WebSocket_like ->  (_Event -> 'a507 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : webSocket:('own) _WebSocket_like -> onclose:(_Event -> 'a508 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external protocol : webSocket:('own) _WebSocket_like ->  string = "protocol" [@@bs.get] 
    external onmessage : webSocket:('own) _WebSocket_like ->  (_Event -> 'a509 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : webSocket:('own) _WebSocket_like -> onmessage:(_Event -> 'a510 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external binaryType : webSocket:('own) _WebSocket_like ->  string = "binaryType" [@@bs.get] 
    external setBinaryType : webSocket:('own) _WebSocket_like -> binaryType:string ->  unit = "binaryType" [@@bs.set]
    external close : ?code:int Js.undefined -> ?reason:string Js.undefined ->  unit = "close" [@@bs.send.pipe: ('own) _WebSocket_like] 
    external send : data:'a511 ->  unit = "send" [@@bs.send.pipe: ('own) _WebSocket_like] 
    
    let downcast x =
      let return = Obj.magic (x:_WebSocket) in
      (return:(_) _WebSocket_like)
    
    let _CONNECTING  =
      
      0
    
    let _OPEN  =
      
      1
    
    let _CLOSING  =
      
      2
    
    let _CLOSED  =
      
      3
    
    let close ?code ?reason webSocket =
      let conv_code = Js_undefined.from_opt in
      let code = conv_code code in
      let conv_reason = Js_undefined.from_opt in
      let reason = conv_reason reason in
      close ~code ~reason webSocket
    
    let send ~data webSocket =
      let conv_data = function
        | `String (x: string) -> Obj.magic x
        | `Blob (x: (_) _Blob_like) -> Obj.magic x
         in
      let data = conv_data data in
      let return = send ~data webSocket in
      return
    
end
 module MediaQueryListEvent = struct
    include Event
    
    external media : mediaQueryListEvent:('own) _MediaQueryListEvent_like ->  string = "media" [@@bs.get] 
    external matches : mediaQueryListEvent:('own) _MediaQueryListEvent_like ->  bool = "matches" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_MediaQueryListEvent) in
      (return:(_) _MediaQueryListEvent_like)
    
end
 module WebGLBuffer = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLBuffer) in
      (return:(_) _WebGLBuffer_like)
    
end
 module CSSViewportRule = struct
    include CSSRule
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CSSViewportRule) in
      (return:(_) _CSSViewportRule_like)
    
end
 module ExtendableEvent = struct
    include Event
    
    external waitUntil : f:'a512 ->  unit = "waitUntil" [@@bs.send.pipe: ('own) _ExtendableEvent_like] 
    
    let downcast x =
      let return = Obj.magic (x:_ExtendableEvent) in
      (return:(_) _ExtendableEvent_like)
    
end
 module ProgressEvent = struct
    include Event
    
    external lengthComputable : progressEvent:('own) _ProgressEvent_like ->  bool = "lengthComputable" [@@bs.get] 
    external loaded : progressEvent:('own) _ProgressEvent_like ->  int = "loaded" [@@bs.get] 
    external total : progressEvent:('own) _ProgressEvent_like ->  int = "total" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ProgressEvent) in
      (return:(_) _ProgressEvent_like)
    
    let cast_to_Dom_progressEvent x =
      let return = Obj.magic (x:_ProgressEvent) in
      (return:Dom.progressEvent)
    
    let cast_from_Dom_progressEvent x =
      let return = Obj.magic (x:Dom.progressEvent) in
      (return:_ProgressEvent)
    
end
 module WebGLRenderbuffer = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLRenderbuffer) in
      (return:(_) _WebGLRenderbuffer_like)
    
end
 module Bluetooth = struct
    include EventTarget
    
    external onavailabilitychanged : bluetooth:('own) _Bluetooth_like ->  (_Event -> 'a513 [@bs]) option = "onavailabilitychanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnavailabilitychanged : bluetooth:('own) _Bluetooth_like -> onavailabilitychanged:(_Event -> 'a514 [@bs]) Js.null ->  unit = "onavailabilitychanged" [@@bs.set]
    external getAvailability :  Js.boolean Js.Promise.t = "getAvailability" [@@bs.send.pipe: ('own) _Bluetooth_like] 
    external requestDevice : ?options:(_) _RequestDeviceOptions_like Js.undefined ->  _BluetoothDevice Js.Promise.t = "requestDevice" [@@bs.send.pipe: ('own) _Bluetooth_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Bluetooth) in
      (return:(_) _Bluetooth_like)
    
    let requestDevice ?options bluetooth =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      requestDevice ~options bluetooth
    
end
 module Worker = struct
    include EventTarget
    
    external onerror : worker:('own) _Worker_like ->  (_Event -> 'a515 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : worker:('own) _Worker_like -> onerror:(_Event -> 'a516 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onmessage : worker:('own) _Worker_like ->  (_Event -> 'a517 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : worker:('own) _Worker_like -> onmessage:(_Event -> 'a518 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external postMessage : message:'a519 ->  unit = "postMessage" [@@bs.send.pipe: ('own) _Worker_like] 
    external terminate :  unit = "terminate" [@@bs.send.pipe: ('own) _Worker_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Worker) in
      (return:(_) _Worker_like)
    
end
 module TransitionEvent = struct
    include Event
    
    external propertyName : transitionEvent:('own) _TransitionEvent_like ->  string = "propertyName" [@@bs.get] 
    external elapsedTime : transitionEvent:('own) _TransitionEvent_like ->  float = "elapsedTime" [@@bs.get] 
    external pseudoElement : transitionEvent:('own) _TransitionEvent_like ->  string = "pseudoElement" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_TransitionEvent) in
      (return:(_) _TransitionEvent_like)
    
    let cast_to_Dom_transitionEvent x =
      let return = Obj.magic (x:_TransitionEvent) in
      (return:Dom.transitionEvent)
    
    let cast_from_Dom_transitionEvent x =
      let return = Obj.magic (x:Dom.transitionEvent) in
      (return:_TransitionEvent)
    
end
 module MediaQueryList = struct
    include EventTarget
    
    external media : mediaQueryList:('own) _MediaQueryList_like ->  string = "media" [@@bs.get] 
    external matches : mediaQueryList:('own) _MediaQueryList_like ->  bool = "matches" [@@bs.get] 
    external onchange : mediaQueryList:('own) _MediaQueryList_like ->  (_Event -> 'a520 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : mediaQueryList:('own) _MediaQueryList_like -> onchange:(_Event -> 'a521 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external addListener : listener:(_) _EventListener_like Js.null ->  unit = "addListener" [@@bs.send.pipe: ('own) _MediaQueryList_like] 
    external removeListener : listener:(_) _EventListener_like Js.null ->  unit = "removeListener" [@@bs.send.pipe: ('own) _MediaQueryList_like] 
    
    let downcast x =
      let return = Obj.magic (x:_MediaQueryList) in
      (return:(_) _MediaQueryList_like)
    
end
 module XMLHttpRequestEventTarget = struct
    include EventTarget
    
    external onloadstart : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a522 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onloadstart:(_Event -> 'a523 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onprogress : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a524 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onprogress:(_Event -> 'a525 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onabort : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a526 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onabort:(_Event -> 'a527 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onerror : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a528 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onerror:(_Event -> 'a529 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onload : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a530 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onload:(_Event -> 'a531 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external ontimeout : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a532 [@bs]) option = "ontimeout" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeout : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> ontimeout:(_Event -> 'a533 [@bs]) Js.null ->  unit = "ontimeout" [@@bs.set]
    external onloadend : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like ->  (_Event -> 'a534 [@bs]) option = "onloadend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadend : xMLHttpRequestEventTarget:('own) _XMLHttpRequestEventTarget_like -> onloadend:(_Event -> 'a535 [@bs]) Js.null ->  unit = "onloadend" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_XMLHttpRequestEventTarget) in
      (return:(_) _XMLHttpRequestEventTarget_like)
    
end
 module CSSKeyframesRule = struct
    include CSSRule
    
    external name : cSSKeyframesRule:('own) _CSSKeyframesRule_like ->  string = "name" [@@bs.get] 
    external setName : cSSKeyframesRule:('own) _CSSKeyframesRule_like -> name:string ->  unit = "name" [@@bs.set]
    external cssRules : cSSKeyframesRule:('own) _CSSKeyframesRule_like ->  _CSSRuleList = "cssRules" [@@bs.get] 
    external appendRule : rule:string ->  unit = "appendRule" [@@bs.send.pipe: ('own) _CSSKeyframesRule_like] 
    external deleteRule : select:string ->  unit = "deleteRule" [@@bs.send.pipe: ('own) _CSSKeyframesRule_like] 
    external findRule : select:string ->  _CSSKeyframeRule option = "findRule" [@@bs.send.pipe: ('own) _CSSKeyframesRule_like] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_CSSKeyframesRule) in
      (return:(_) _CSSKeyframesRule_like)
    
end
 module BluetoothAdvertisingEvent = struct
    include Event
    
    external device : bluetoothAdvertisingEvent:('own) _BluetoothAdvertisingEvent_like ->  _BluetoothDevice = "device" [@@bs.get] 
    external name : bluetoothAdvertisingEvent:('own) _BluetoothAdvertisingEvent_like ->  string option = "name" [@@bs.get] [@@bs.return null_to_opt]
    external appearance : bluetoothAdvertisingEvent:('own) _BluetoothAdvertisingEvent_like ->  int option = "appearance" [@@bs.get] [@@bs.return null_to_opt]
    external txPower : bluetoothAdvertisingEvent:('own) _BluetoothAdvertisingEvent_like ->  int option = "txPower" [@@bs.get] [@@bs.return null_to_opt]
    external rssi : bluetoothAdvertisingEvent:('own) _BluetoothAdvertisingEvent_like ->  int option = "rssi" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothAdvertisingEvent) in
      (return:(_) _BluetoothAdvertisingEvent_like)
    
end
 module CSSNamespaceRule = struct
    include CSSRule
    
    external namespaceURI : cSSNamespaceRule:('own) _CSSNamespaceRule_like ->  string = "namespaceURI" [@@bs.get] 
    external prefix : cSSNamespaceRule:('own) _CSSNamespaceRule_like ->  string = "prefix" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSNamespaceRule) in
      (return:(_) _CSSNamespaceRule_like)
    
end
 module HashChangeEvent = struct
    include Event
    
    external oldURL : hashChangeEvent:('own) _HashChangeEvent_like ->  string = "oldURL" [@@bs.get] 
    external newURL : hashChangeEvent:('own) _HashChangeEvent_like ->  string = "newURL" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HashChangeEvent) in
      (return:(_) _HashChangeEvent_like)
    
end
 module CSSGroupingRule = struct
    include CSSRule
    
    external cssRules : cSSGroupingRule:('own) _CSSGroupingRule_like ->  _CSSRuleList = "cssRules" [@@bs.get] 
    external deleteRule : index:int ->  unit = "deleteRule" [@@bs.send.pipe: ('own) _CSSGroupingRule_like] 
    external insertRule : rule:string -> index:int ->  int = "insertRule" [@@bs.send.pipe: ('own) _CSSGroupingRule_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSGroupingRule) in
      (return:(_) _CSSGroupingRule_like)
    
end
 module BluetoothRemoteGATTService = struct
    include EventTarget
    
    external onserviceadded : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  (_Event -> 'a536 [@bs]) option = "onserviceadded" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceadded : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like -> onserviceadded:(_Event -> 'a537 [@bs]) Js.null ->  unit = "onserviceadded" [@@bs.set]
    external onservicechanged : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  (_Event -> 'a538 [@bs]) option = "onservicechanged" [@@bs.get] [@@bs.return null_to_opt]
    external setOnservicechanged : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like -> onservicechanged:(_Event -> 'a539 [@bs]) Js.null ->  unit = "onservicechanged" [@@bs.set]
    external onserviceremoved : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  (_Event -> 'a540 [@bs]) option = "onserviceremoved" [@@bs.get] [@@bs.return null_to_opt]
    external setOnserviceremoved : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like -> onserviceremoved:(_Event -> 'a541 [@bs]) Js.null ->  unit = "onserviceremoved" [@@bs.set]
    external device : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  _BluetoothDevice = "device" [@@bs.get] 
    external uuid : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  string = "uuid" [@@bs.get] 
    external isPrimary : bluetoothRemoteGATTService:('own) _BluetoothRemoteGATTService_like ->  bool = "isPrimary" [@@bs.get] 
    external getCharacteristic : characteristic:'a542 ->  _BluetoothRemoteGATTCharacteristic Js.Promise.t = "getCharacteristic" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTService_like] 
    external getCharacteristics : ?characteristic:'a543 Js.undefined ->  _BluetoothRemoteGATTCharacteristic array Js.Promise.t = "getCharacteristics" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTService_like] 
    external getIncludedService : service:'a544 ->  _BluetoothRemoteGATTService Js.Promise.t = "getIncludedService" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTService_like] 
    external getIncludedServices : ?service:'a545 Js.undefined ->  _BluetoothRemoteGATTService array Js.Promise.t = "getIncludedServices" [@@bs.send.pipe: ('own) _BluetoothRemoteGATTService_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothRemoteGATTService) in
      (return:(_) _BluetoothRemoteGATTService_like)
    
    let getCharacteristic ~characteristic bluetoothRemoteGATTService =
      let conv_characteristic = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let characteristic = conv_characteristic characteristic in
      let return = getCharacteristic ~characteristic bluetoothRemoteGATTService in
      return
    
    let getCharacteristics ~characteristic bluetoothRemoteGATTService =
      let conv_characteristic = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_characteristic = access_undef conv_characteristic in
      let characteristic = conv_characteristic characteristic in
      let return = getCharacteristics ~characteristic bluetoothRemoteGATTService in
      return
    
    let getCharacteristics ?characteristic bluetoothRemoteGATTService =
      let conv_characteristic = Js_undefined.from_opt in
      let characteristic = conv_characteristic characteristic in
      getCharacteristics ~characteristic bluetoothRemoteGATTService
    
    let getIncludedService ~service bluetoothRemoteGATTService =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let service = conv_service service in
      let return = getIncludedService ~service bluetoothRemoteGATTService in
      return
    
    let getIncludedServices ~service bluetoothRemoteGATTService =
      let conv_service = function
        | `String (x: string) -> Obj.magic x
        | `Int (x: int) -> Obj.magic x
         in
      let conv_service = access_undef conv_service in
      let service = conv_service service in
      let return = getIncludedServices ~service bluetoothRemoteGATTService in
      return
    
    let getIncludedServices ?service bluetoothRemoteGATTService =
      let conv_service = Js_undefined.from_opt in
      let service = conv_service service in
      getIncludedServices ~service bluetoothRemoteGATTService
    
end
 module WebGLTexture = struct
    include WebGLObject
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WebGLTexture) in
      (return:(_) _WebGLTexture_like)
    
end
 module FileReader = struct
    include EventTarget
    
    external readyState : fileReader:('own) _FileReader_like ->  int = "readyState" [@@bs.get] 
    external result : fileReader:('own) _FileReader_like ->  'a546 option = "result" [@@bs.get] [@@bs.return null_to_opt]
    external error : fileReader:('own) _FileReader_like ->  'a547 option = "error" [@@bs.get] [@@bs.return null_to_opt]
    external onloadstart : fileReader:('own) _FileReader_like ->  (_Event -> 'a548 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : fileReader:('own) _FileReader_like -> onloadstart:(_Event -> 'a549 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onprogress : fileReader:('own) _FileReader_like ->  (_Event -> 'a550 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : fileReader:('own) _FileReader_like -> onprogress:(_Event -> 'a551 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onload : fileReader:('own) _FileReader_like ->  (_Event -> 'a552 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : fileReader:('own) _FileReader_like -> onload:(_Event -> 'a553 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onabort : fileReader:('own) _FileReader_like ->  (_Event -> 'a554 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : fileReader:('own) _FileReader_like -> onabort:(_Event -> 'a555 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onerror : fileReader:('own) _FileReader_like ->  (_Event -> 'a556 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : fileReader:('own) _FileReader_like -> onerror:(_Event -> 'a557 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onloadend : fileReader:('own) _FileReader_like ->  (_Event -> 'a558 [@bs]) option = "onloadend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadend : fileReader:('own) _FileReader_like -> onloadend:(_Event -> 'a559 [@bs]) Js.null ->  unit = "onloadend" [@@bs.set]
    external abort :  unit = "abort" [@@bs.send.pipe: ('own) _FileReader_like] 
    external readAsArrayBuffer : blob:(_) _Blob_like ->  unit = "readAsArrayBuffer" [@@bs.send.pipe: ('own) _FileReader_like] 
    external readAsDataURL : blob:(_) _Blob_like ->  unit = "readAsDataURL" [@@bs.send.pipe: ('own) _FileReader_like] 
    external readAsText : blob:(_) _Blob_like -> ?label:string Js.undefined ->  unit = "readAsText" [@@bs.send.pipe: ('own) _FileReader_like] 
    
    let downcast x =
      let return = Obj.magic (x:_FileReader) in
      (return:(_) _FileReader_like)
    
    let _EMPTY  =
      
      0
    
    let _LOADING  =
      
      1
    
    let _DONE  =
      
      2
    
    let readAsText ~blob ?label fileReader =
      let conv_label = Js_undefined.from_opt in
      let label = conv_label label in
      readAsText ~blob ~label fileReader
    
end
 module CSSStyleSheet = struct
    include StyleSheet
    
    external cssRules : cSSStyleSheet:('own) _CSSStyleSheet_like ->  _CSSRuleList = "cssRules" [@@bs.get] 
    external deleteRule : index:int ->  unit = "deleteRule" [@@bs.send.pipe: ('own) _CSSStyleSheet_like] 
    external insertRule : rule:string -> index:int ->  int = "insertRule" [@@bs.send.pipe: ('own) _CSSStyleSheet_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSStyleSheet) in
      (return:(_) _CSSStyleSheet_like)
    
    let cast_to_Dom_cssStyleSheet x =
      let return = Obj.magic (x:_CSSStyleSheet) in
      (return:Dom.cssStyleSheet)
    
    let cast_from_Dom_cssStyleSheet x =
      let return = Obj.magic (x:Dom.cssStyleSheet) in
      (return:_CSSStyleSheet)
    
end
 module UIEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) _Window_like Js.null -> ?detail:int -> unit ->  _UIEventInit = "" [@@bs.obj]
    external view : uIEventInit:('own) _UIEventInit_like ->  _Window option = "view" [@@bs.get] [@@bs.return null_to_opt]
    external setView : uIEventInit:('own) _UIEventInit_like -> view:_Window Js.null ->  unit = "view" [@@bs.set]
    external detail : uIEventInit:('own) _UIEventInit_like ->  int = "detail" [@@bs.get] 
    external setDetail : uIEventInit:('own) _UIEventInit_like -> detail:int ->  unit = "detail" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_UIEventInit) in
      (return:(_) _UIEventInit_like)
    
end
 module GamepadEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> gamepad:(_) _Gamepad_like -> unit ->  _GamepadEventInit = "" [@@bs.obj]
    external gamepad : gamepadEventInit:('own) _GamepadEventInit_like ->  _Gamepad = "gamepad" [@@bs.get] 
    external setGamepad : gamepadEventInit:('own) _GamepadEventInit_like -> gamepad:_Gamepad ->  unit = "gamepad" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_GamepadEventInit) in
      (return:(_) _GamepadEventInit_like)
    
end
 module BluetoothPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?deviceId:string -> ?filters:(_) _BluetoothLEScanFilterInit_like array -> ?optionalServices:'a560 array -> ?acceptAllDevices:Js.boolean -> unit ->  _BluetoothPermissionDescriptor = "" [@@bs.obj]
    external deviceId : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like ->  string = "deviceId" [@@bs.get] 
    external setDeviceId : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like -> deviceId:string ->  unit = "deviceId" [@@bs.set]
    external filters : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like ->  _BluetoothLEScanFilterInit array = "filters" [@@bs.get] 
    external setFilters : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like -> filters:_BluetoothLEScanFilterInit array ->  unit = "filters" [@@bs.set]
    external optionalServices : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like ->  'a561 array = "optionalServices" [@@bs.get] 
    external setOptionalServices : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like -> optionalServices:'a562 array ->  unit = "optionalServices" [@@bs.set]
    external acceptAllDevices : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like ->  bool = "acceptAllDevices" [@@bs.get] 
    external setAcceptAllDevices : bluetoothPermissionDescriptor:('own) _BluetoothPermissionDescriptor_like -> acceptAllDevices:Js.boolean ->  unit = "acceptAllDevices" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothPermissionDescriptor) in
      (return:(_) _BluetoothPermissionDescriptor_like)
    
end
 module ErrorEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?message:string -> ?filename:string -> ?lineno:int -> ?colno:int -> ?error:'a563 -> unit ->  _ErrorEventInit = "" [@@bs.obj]
    external message : errorEventInit:('own) _ErrorEventInit_like ->  string = "message" [@@bs.get] 
    external setMessage : errorEventInit:('own) _ErrorEventInit_like -> message:string ->  unit = "message" [@@bs.set]
    external filename : errorEventInit:('own) _ErrorEventInit_like ->  string = "filename" [@@bs.get] 
    external setFilename : errorEventInit:('own) _ErrorEventInit_like -> filename:string ->  unit = "filename" [@@bs.set]
    external lineno : errorEventInit:('own) _ErrorEventInit_like ->  int = "lineno" [@@bs.get] 
    external setLineno : errorEventInit:('own) _ErrorEventInit_like -> lineno:int ->  unit = "lineno" [@@bs.set]
    external colno : errorEventInit:('own) _ErrorEventInit_like ->  int = "colno" [@@bs.get] 
    external setColno : errorEventInit:('own) _ErrorEventInit_like -> colno:int ->  unit = "colno" [@@bs.set]
    external error : errorEventInit:('own) _ErrorEventInit_like ->  'a564 = "error" [@@bs.get] 
    external setError : errorEventInit:('own) _ErrorEventInit_like -> error:'a565 ->  unit = "error" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ErrorEventInit) in
      (return:(_) _ErrorEventInit_like)
    
end
 module PushPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?userVisibleOnly:Js.boolean -> unit ->  _PushPermissionDescriptor = "" [@@bs.obj]
    external userVisibleOnly : pushPermissionDescriptor:('own) _PushPermissionDescriptor_like ->  bool = "userVisibleOnly" [@@bs.get] 
    external setUserVisibleOnly : pushPermissionDescriptor:('own) _PushPermissionDescriptor_like -> userVisibleOnly:Js.boolean ->  unit = "userVisibleOnly" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_PushPermissionDescriptor) in
      (return:(_) _PushPermissionDescriptor_like)
    
end
 module MidiPermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?sysex:Js.boolean -> unit ->  _MidiPermissionDescriptor = "" [@@bs.obj]
    external sysex : midiPermissionDescriptor:('own) _MidiPermissionDescriptor_like ->  bool = "sysex" [@@bs.get] 
    external setSysex : midiPermissionDescriptor:('own) _MidiPermissionDescriptor_like -> sysex:Js.boolean ->  unit = "sysex" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_MidiPermissionDescriptor) in
      (return:(_) _MidiPermissionDescriptor_like)
    
end
 module DevicePermissionDescriptor = struct
    include PermissionDescriptor
    
    external make : name:string -> ?deviceId:string -> unit ->  _DevicePermissionDescriptor = "" [@@bs.obj]
    external deviceId : devicePermissionDescriptor:('own) _DevicePermissionDescriptor_like ->  string = "deviceId" [@@bs.get] 
    external setDeviceId : devicePermissionDescriptor:('own) _DevicePermissionDescriptor_like -> deviceId:string ->  unit = "deviceId" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_DevicePermissionDescriptor) in
      (return:(_) _DevicePermissionDescriptor_like)
    
end
 module MessageEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?data:'a566 -> ?origin:string -> ?lastEventId:string -> unit ->  _MessageEventInit = "" [@@bs.obj]
    external data : messageEventInit:('own) _MessageEventInit_like ->  'a567 = "data" [@@bs.get] 
    external setData : messageEventInit:('own) _MessageEventInit_like -> data:'a568 ->  unit = "data" [@@bs.set]
    external origin : messageEventInit:('own) _MessageEventInit_like ->  string = "origin" [@@bs.get] 
    external setOrigin : messageEventInit:('own) _MessageEventInit_like -> origin:string ->  unit = "origin" [@@bs.set]
    external lastEventId : messageEventInit:('own) _MessageEventInit_like ->  string = "lastEventId" [@@bs.get] 
    external setLastEventId : messageEventInit:('own) _MessageEventInit_like -> lastEventId:string ->  unit = "lastEventId" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_MessageEventInit) in
      (return:(_) _MessageEventInit_like)
    
end
 module FilePropertyBag = struct
    include BlobPropertyBag
    
    external make : ?type_:string -> ?lastModified:int -> unit ->  _FilePropertyBag = "" [@@bs.obj]
    external lastModified : filePropertyBag:('own) _FilePropertyBag_like ->  int = "lastModified" [@@bs.get] 
    external setLastModified : filePropertyBag:('own) _FilePropertyBag_like -> lastModified:int ->  unit = "lastModified" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_FilePropertyBag) in
      (return:(_) _FilePropertyBag_like)
    
end
 module StorageEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?key:string Js.null -> ?oldValue:string Js.null -> ?newValue:string Js.null -> ?url:string -> ?storageArea:(_) _Storage_like Js.null -> unit ->  _StorageEventInit = "" [@@bs.obj]
    external key : storageEventInit:('own) _StorageEventInit_like ->  string option = "key" [@@bs.get] [@@bs.return null_to_opt]
    external setKey : storageEventInit:('own) _StorageEventInit_like -> key:string Js.null ->  unit = "key" [@@bs.set]
    external oldValue : storageEventInit:('own) _StorageEventInit_like ->  string option = "oldValue" [@@bs.get] [@@bs.return null_to_opt]
    external setOldValue : storageEventInit:('own) _StorageEventInit_like -> oldValue:string Js.null ->  unit = "oldValue" [@@bs.set]
    external newValue : storageEventInit:('own) _StorageEventInit_like ->  string option = "newValue" [@@bs.get] [@@bs.return null_to_opt]
    external setNewValue : storageEventInit:('own) _StorageEventInit_like -> newValue:string Js.null ->  unit = "newValue" [@@bs.set]
    external url : storageEventInit:('own) _StorageEventInit_like ->  string = "url" [@@bs.get] 
    external setUrl : storageEventInit:('own) _StorageEventInit_like -> url:string ->  unit = "url" [@@bs.set]
    external storageArea : storageEventInit:('own) _StorageEventInit_like ->  _Storage option = "storageArea" [@@bs.get] [@@bs.return null_to_opt]
    external setStorageArea : storageEventInit:('own) _StorageEventInit_like -> storageArea:_Storage Js.null ->  unit = "storageArea" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_StorageEventInit) in
      (return:(_) _StorageEventInit_like)
    
end
 module VRDisplayEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> display:(_) _VRDisplay_like -> ?reason:string -> unit ->  _VRDisplayEventInit = "" [@@bs.obj]
    external display : vRDisplayEventInit:('own) _VRDisplayEventInit_like ->  _VRDisplay = "display" [@@bs.get] 
    external setDisplay : vRDisplayEventInit:('own) _VRDisplayEventInit_like -> display:_VRDisplay ->  unit = "display" [@@bs.set]
    external reason : vRDisplayEventInit:('own) _VRDisplayEventInit_like ->  string = "reason" [@@bs.get] 
    external setReason : vRDisplayEventInit:('own) _VRDisplayEventInit_like -> reason:string ->  unit = "reason" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_VRDisplayEventInit) in
      (return:(_) _VRDisplayEventInit_like)
    
end
 module PopStateEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?state:'a569 -> unit ->  _PopStateEventInit = "" [@@bs.obj]
    external state : popStateEventInit:('own) _PopStateEventInit_like ->  'a570 = "state" [@@bs.get] 
    external setState : popStateEventInit:('own) _PopStateEventInit_like -> state:'a571 ->  unit = "state" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_PopStateEventInit) in
      (return:(_) _PopStateEventInit_like)
    
end
 module WebGLContextEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?statusMessage:string -> unit ->  _WebGLContextEventInit = "" [@@bs.obj]
    external statusMessage : webGLContextEventInit:('own) _WebGLContextEventInit_like ->  string = "statusMessage" [@@bs.get] 
    external setStatusMessage : webGLContextEventInit:('own) _WebGLContextEventInit_like -> statusMessage:string ->  unit = "statusMessage" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_WebGLContextEventInit) in
      (return:(_) _WebGLContextEventInit_like)
    
end
 module CustomEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?detail:'a572 -> unit ->  _CustomEventInit = "" [@@bs.obj]
    external detail : customEventInit:('own) _CustomEventInit_like ->  'a573 = "detail" [@@bs.get] 
    external setDetail : customEventInit:('own) _CustomEventInit_like -> detail:'a574 ->  unit = "detail" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CustomEventInit) in
      (return:(_) _CustomEventInit_like)
    
end
 module PageTransitionEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?persisted:Js.boolean -> unit ->  _PageTransitionEventInit = "" [@@bs.obj]
    external persisted : pageTransitionEventInit:('own) _PageTransitionEventInit_like ->  bool = "persisted" [@@bs.get] 
    external setPersisted : pageTransitionEventInit:('own) _PageTransitionEventInit_like -> persisted:Js.boolean ->  unit = "persisted" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_PageTransitionEventInit) in
      (return:(_) _PageTransitionEventInit_like)
    
end
 module CloseEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?wasClean:Js.boolean -> ?code:int -> ?reason:string -> unit ->  _CloseEventInit = "" [@@bs.obj]
    external wasClean : closeEventInit:('own) _CloseEventInit_like ->  bool = "wasClean" [@@bs.get] 
    external setWasClean : closeEventInit:('own) _CloseEventInit_like -> wasClean:Js.boolean ->  unit = "wasClean" [@@bs.set]
    external code : closeEventInit:('own) _CloseEventInit_like ->  int = "code" [@@bs.get] 
    external setCode : closeEventInit:('own) _CloseEventInit_like -> code:int ->  unit = "code" [@@bs.set]
    external reason : closeEventInit:('own) _CloseEventInit_like ->  string = "reason" [@@bs.get] 
    external setReason : closeEventInit:('own) _CloseEventInit_like -> reason:string ->  unit = "reason" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CloseEventInit) in
      (return:(_) _CloseEventInit_like)
    
end
 module MediaQueryListEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?media:string -> ?matches:Js.boolean -> unit ->  _MediaQueryListEventInit = "" [@@bs.obj]
    external media : mediaQueryListEventInit:('own) _MediaQueryListEventInit_like ->  string = "media" [@@bs.get] 
    external setMedia : mediaQueryListEventInit:('own) _MediaQueryListEventInit_like -> media:string ->  unit = "media" [@@bs.set]
    external matches : mediaQueryListEventInit:('own) _MediaQueryListEventInit_like ->  bool = "matches" [@@bs.get] 
    external setMatches : mediaQueryListEventInit:('own) _MediaQueryListEventInit_like -> matches:Js.boolean ->  unit = "matches" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_MediaQueryListEventInit) in
      (return:(_) _MediaQueryListEventInit_like)
    
end
 module ExtendableEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> unit ->  _ExtendableEventInit = "" [@@bs.obj]
    
    let downcast x =
      let return = Obj.magic (x:_ExtendableEventInit) in
      (return:(_) _ExtendableEventInit_like)
    
end
 module ProgressEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?lengthComputable:Js.boolean -> ?loaded:int -> ?total:int -> unit ->  _ProgressEventInit = "" [@@bs.obj]
    external lengthComputable : progressEventInit:('own) _ProgressEventInit_like ->  bool = "lengthComputable" [@@bs.get] 
    external setLengthComputable : progressEventInit:('own) _ProgressEventInit_like -> lengthComputable:Js.boolean ->  unit = "lengthComputable" [@@bs.set]
    external loaded : progressEventInit:('own) _ProgressEventInit_like ->  int = "loaded" [@@bs.get] 
    external setLoaded : progressEventInit:('own) _ProgressEventInit_like -> loaded:int ->  unit = "loaded" [@@bs.set]
    external total : progressEventInit:('own) _ProgressEventInit_like ->  int = "total" [@@bs.get] 
    external setTotal : progressEventInit:('own) _ProgressEventInit_like -> total:int ->  unit = "total" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ProgressEventInit) in
      (return:(_) _ProgressEventInit_like)
    
end
 module TransitionEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?propertyName:string -> ?elapsedTime:float -> ?pseudoElement:string -> unit ->  _TransitionEventInit = "" [@@bs.obj]
    external propertyName : transitionEventInit:('own) _TransitionEventInit_like ->  string = "propertyName" [@@bs.get] 
    external setPropertyName : transitionEventInit:('own) _TransitionEventInit_like -> propertyName:string ->  unit = "propertyName" [@@bs.set]
    external elapsedTime : transitionEventInit:('own) _TransitionEventInit_like ->  float = "elapsedTime" [@@bs.get] 
    external setElapsedTime : transitionEventInit:('own) _TransitionEventInit_like -> elapsedTime:float ->  unit = "elapsedTime" [@@bs.set]
    external pseudoElement : transitionEventInit:('own) _TransitionEventInit_like ->  string = "pseudoElement" [@@bs.get] 
    external setPseudoElement : transitionEventInit:('own) _TransitionEventInit_like -> pseudoElement:string ->  unit = "pseudoElement" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_TransitionEventInit) in
      (return:(_) _TransitionEventInit_like)
    
end
 module BluetoothAdvertisingEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> device:(_) _BluetoothDevice_like -> ?name:string -> ?appearance:int -> ?txPower:int -> ?rssi:int -> unit ->  _BluetoothAdvertisingEventInit = "" [@@bs.obj]
    external device : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like ->  _BluetoothDevice = "device" [@@bs.get] 
    external setDevice : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like -> device:_BluetoothDevice ->  unit = "device" [@@bs.set]
    external name : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like ->  string = "name" [@@bs.get] 
    external setName : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like -> name:string ->  unit = "name" [@@bs.set]
    external appearance : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like ->  int = "appearance" [@@bs.get] 
    external setAppearance : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like -> appearance:int ->  unit = "appearance" [@@bs.set]
    external txPower : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like ->  int = "txPower" [@@bs.get] 
    external setTxPower : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like -> txPower:int ->  unit = "txPower" [@@bs.set]
    external rssi : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like ->  int = "rssi" [@@bs.get] 
    external setRssi : bluetoothAdvertisingEventInit:('own) _BluetoothAdvertisingEventInit_like -> rssi:int ->  unit = "rssi" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothAdvertisingEventInit) in
      (return:(_) _BluetoothAdvertisingEventInit_like)
    
end
 module HashChangeEventInit = struct
    include EventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?oldURL:string -> ?newURL:string -> unit ->  _HashChangeEventInit = "" [@@bs.obj]
    external oldURL : hashChangeEventInit:('own) _HashChangeEventInit_like ->  string = "oldURL" [@@bs.get] 
    external setOldURL : hashChangeEventInit:('own) _HashChangeEventInit_like -> oldURL:string ->  unit = "oldURL" [@@bs.set]
    external newURL : hashChangeEventInit:('own) _HashChangeEventInit_like ->  string = "newURL" [@@bs.get] 
    external setNewURL : hashChangeEventInit:('own) _HashChangeEventInit_like -> newURL:string ->  unit = "newURL" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HashChangeEventInit) in
      (return:(_) _HashChangeEventInit_like)
    
end
 module ScrollToOptions = struct
    include ScrollOptions
    
    external make : ?behavior:string -> ?left:float -> ?top:float -> unit ->  _ScrollToOptions = "" [@@bs.obj]
    external left : scrollToOptions:('own) _ScrollToOptions_like ->  float = "left" [@@bs.get] 
    external setLeft : scrollToOptions:('own) _ScrollToOptions_like -> left:float ->  unit = "left" [@@bs.set]
    external top : scrollToOptions:('own) _ScrollToOptions_like ->  float = "top" [@@bs.get] 
    external setTop : scrollToOptions:('own) _ScrollToOptions_like -> top:float ->  unit = "top" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ScrollToOptions) in
      (return:(_) _ScrollToOptions_like)
    
end
 module XMLHttpRequestUpload = struct
    include XMLHttpRequestEventTarget
    
    
    
    let downcast x =
      let return = Obj.magic (x:_XMLHttpRequestUpload) in
      (return:(_) _XMLHttpRequestUpload_like)
    
end
 module XMLHttpRequest = struct
    include XMLHttpRequestEventTarget
    
    external onreadystatechange : xMLHttpRequest:('own) _XMLHttpRequest_like ->  (_Event -> 'a575 [@bs]) option = "onreadystatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreadystatechange : xMLHttpRequest:('own) _XMLHttpRequest_like -> onreadystatechange:(_Event -> 'a576 [@bs]) Js.null ->  unit = "onreadystatechange" [@@bs.set]
    external readyState : xMLHttpRequest:('own) _XMLHttpRequest_like ->  int = "readyState" [@@bs.get] 
    external timeout : xMLHttpRequest:('own) _XMLHttpRequest_like ->  int = "timeout" [@@bs.get] 
    external setTimeout : xMLHttpRequest:('own) _XMLHttpRequest_like -> timeout:int ->  unit = "timeout" [@@bs.set]
    external withCredentials : xMLHttpRequest:('own) _XMLHttpRequest_like ->  bool = "withCredentials" [@@bs.get] 
    external setWithCredentials : xMLHttpRequest:('own) _XMLHttpRequest_like -> withCredentials:Js.boolean ->  unit = "withCredentials" [@@bs.set]
    external upload : xMLHttpRequest:('own) _XMLHttpRequest_like ->  _XMLHttpRequestUpload = "upload" [@@bs.get] 
    external responseURL : xMLHttpRequest:('own) _XMLHttpRequest_like ->  string = "responseURL" [@@bs.get] 
    external status : xMLHttpRequest:('own) _XMLHttpRequest_like ->  int = "status" [@@bs.get] 
    external statusText : xMLHttpRequest:('own) _XMLHttpRequest_like ->  string = "statusText" [@@bs.get] 
    external responseType : xMLHttpRequest:('own) _XMLHttpRequest_like ->  string = "responseType" [@@bs.get] 
    external setResponseType : xMLHttpRequest:('own) _XMLHttpRequest_like -> responseType:string ->  unit = "responseType" [@@bs.set]
    external response : xMLHttpRequest:('own) _XMLHttpRequest_like ->  'a577 = "response" [@@bs.get] 
    external responseText : xMLHttpRequest:('own) _XMLHttpRequest_like ->  string = "responseText" [@@bs.get] 
    external responseXML : xMLHttpRequest:('own) _XMLHttpRequest_like ->  _Document option = "responseXML" [@@bs.get] [@@bs.return null_to_opt]
    external abort :  unit = "abort" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    external getAllResponseHeaders :  string = "getAllResponseHeaders" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    external getResponseHeader : name:string ->  string option = "getResponseHeader" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] [@@bs.return null_to_opt]
    external open_ : method_:string -> url:string ->  unit = "open" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    external overrideMimeType : mime:string ->  unit = "overrideMimeType" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    external send : ?data:'a578 Js.undefined ->  unit = "send" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    external setRequestHeader : name:string -> value:string ->  unit = "setRequestHeader" [@@bs.send.pipe: ('own) _XMLHttpRequest_like] 
    
    let downcast x =
      let return = Obj.magic (x:_XMLHttpRequest) in
      (return:(_) _XMLHttpRequest_like)
    
    let _UNSENT  =
      
      0
    
    let _OPENED  =
      
      1
    
    let _HEADERS_RECEIVED  =
      
      2
    
    let _LOADING  =
      
      3
    
    let _DONE  =
      
      4
    
    let send ~data xMLHttpRequest =
      let conv_data = function
        | `Document_Null (x: (_) _Document_like Js.null) -> Obj.magic x
        | `Any_Null (x: 'a579 Js.null) -> Obj.magic x
         in
      let conv_data = access_undef conv_data in
      let data = conv_data data in
      let return = send ~data xMLHttpRequest in
      return
    
    let send ?data xMLHttpRequest =
      let conv_data = Js_undefined.from_opt in
      let data = conv_data data in
      send ~data xMLHttpRequest
    
end
 module BluetoothPermissionResult = struct
    include PermissionStatus
    
    external devices :  _BluetoothDevice array = "devices" [@@bs.send.pipe: ('own) _BluetoothPermissionResult_like] 
    
    let downcast x =
      let return = Obj.magic (x:_BluetoothPermissionResult) in
      (return:(_) _BluetoothPermissionResult_like)
    
end
 module ForceTouchEvent = struct
    include UIEvent
    
    external sERVO_FORCE_AT_MOUSE_DOWN : forceTouchEvent:('own) _ForceTouchEvent_like ->  float = "SERVO_FORCE_AT_MOUSE_DOWN" [@@bs.get] 
    external sERVO_FORCE_AT_FORCE_MOUSE_DOWN : forceTouchEvent:('own) _ForceTouchEvent_like ->  float = "SERVO_FORCE_AT_FORCE_MOUSE_DOWN" [@@bs.get] 
    external servoForce : forceTouchEvent:('own) _ForceTouchEvent_like ->  float = "servoForce" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ForceTouchEvent) in
      (return:(_) _ForceTouchEvent_like)
    
end
 module DissimilarOriginWindow = struct
    include GlobalScope
    
    external window : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _WindowProxy = "window" [@@bs.get] 
    external self : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _WindowProxy = "self" [@@bs.get] 
    external parent : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _WindowProxy option = "parent" [@@bs.get] [@@bs.return null_to_opt]
    external top : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _WindowProxy option = "top" [@@bs.get] [@@bs.return null_to_opt]
    external frames : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _WindowProxy = "frames" [@@bs.get] 
    external length : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  int = "length" [@@bs.get] 
    external location : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  _DissimilarOriginLocation = "location" [@@bs.get] 
    external closed_ : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  bool = "closed" [@@bs.get] 
    external opener : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like ->  'a580 = "opener" [@@bs.get] 
    external setOpener : dissimilarOriginWindow:('own) _DissimilarOriginWindow_like -> opener:'a581 ->  unit = "opener" [@@bs.set]
    external blur :  unit = "blur" [@@bs.send.pipe: ('own) _DissimilarOriginWindow_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) _DissimilarOriginWindow_like] 
    external focus :  unit = "focus" [@@bs.send.pipe: ('own) _DissimilarOriginWindow_like] 
    external postMessage : message:'a582 -> targetOrigin:string ->  unit = "postMessage" [@@bs.send.pipe: ('own) _DissimilarOriginWindow_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DissimilarOriginWindow) in
      (return:(_) _DissimilarOriginWindow_like)
    
end
 module KeyboardEvent = struct
    include UIEvent
    
    external key : keyboardEvent:('own) _KeyboardEvent_like ->  string = "key" [@@bs.get] 
    external code : keyboardEvent:('own) _KeyboardEvent_like ->  string = "code" [@@bs.get] 
    external location : keyboardEvent:('own) _KeyboardEvent_like ->  int = "location" [@@bs.get] 
    external ctrlKey : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "shiftKey" [@@bs.get] 
    external altKey : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "metaKey" [@@bs.get] 
    external repeat : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "repeat" [@@bs.get] 
    external isComposing : keyboardEvent:('own) _KeyboardEvent_like ->  bool = "isComposing" [@@bs.get] 
    external charCode : keyboardEvent:('own) _KeyboardEvent_like ->  int = "charCode" [@@bs.get] 
    external keyCode : keyboardEvent:('own) _KeyboardEvent_like ->  int = "keyCode" [@@bs.get] 
    external which : keyboardEvent:('own) _KeyboardEvent_like ->  int = "which" [@@bs.get] 
    external getModifierState : keyArg:string ->  bool = "getModifierState" [@@bs.send.pipe: ('own) _KeyboardEvent_like] 
    external initKeyboardEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) _Window_like Js.null -> keyArg:string -> locationArg:int -> modifiersListArg:string -> repeat:Js.boolean -> locale:string ->  unit = "initKeyboardEvent" [@@bs.send.pipe: ('own) _KeyboardEvent_like] 
    
    let downcast x =
      let return = Obj.magic (x:_KeyboardEvent) in
      (return:(_) _KeyboardEvent_like)
    
    let cast_to_Dom_keyboardEvent x =
      let return = Obj.magic (x:_KeyboardEvent) in
      (return:Dom.keyboardEvent)
    
    let cast_from_Dom_keyboardEvent x =
      let return = Obj.magic (x:Dom.keyboardEvent) in
      (return:_KeyboardEvent)
    
    let _DOM_KEY_LOCATION_STANDARD  =
      
      0
    
    let _DOM_KEY_LOCATION_LEFT  =
      
      1
    
    let _DOM_KEY_LOCATION_RIGHT  =
      
      2
    
    let _DOM_KEY_LOCATION_NUMPAD  =
      
      3
    
end
 module TouchEvent = struct
    include UIEvent
    
    external touches : touchEvent:('own) _TouchEvent_like ->  _TouchList = "touches" [@@bs.get] 
    external targetTouches : touchEvent:('own) _TouchEvent_like ->  _TouchList = "targetTouches" [@@bs.get] 
    external changedTouches : touchEvent:('own) _TouchEvent_like ->  _TouchList = "changedTouches" [@@bs.get] 
    external altKey : touchEvent:('own) _TouchEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : touchEvent:('own) _TouchEvent_like ->  bool = "metaKey" [@@bs.get] 
    external ctrlKey : touchEvent:('own) _TouchEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : touchEvent:('own) _TouchEvent_like ->  bool = "shiftKey" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_TouchEvent) in
      (return:(_) _TouchEvent_like)
    
    let cast_to_Dom_touchEvent x =
      let return = Obj.magic (x:_TouchEvent) in
      (return:Dom.touchEvent)
    
    let cast_from_Dom_touchEvent x =
      let return = Obj.magic (x:Dom.touchEvent) in
      (return:_TouchEvent)
    
end
 module DocumentFragment = struct
    include Node
    
    external children : documentFragment:('own) _DocumentFragment_like ->  _HTMLCollection = "children" [@@bs.get] 
    external firstElementChild : documentFragment:('own) _DocumentFragment_like ->  _Element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : documentFragment:('own) _DocumentFragment_like ->  _Element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : documentFragment:('own) _DocumentFragment_like ->  int = "childElementCount" [@@bs.get] 
    external append : documentFragment:('own) _DocumentFragment_like ->  (('own) _DocumentFragment_like, unit, ('a583)) variadic_func = "append" [@@bs.get]
    external getElementById : elementId:string ->  _Element option = "getElementById" [@@bs.send.pipe: ('own) _DocumentFragment_like] [@@bs.return null_to_opt]
    external prepend : documentFragment:('own) _DocumentFragment_like ->  (('own) _DocumentFragment_like, unit, ('a584)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  _Element option = "querySelector" [@@bs.send.pipe: ('own) _DocumentFragment_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  _NodeList = "querySelectorAll" [@@bs.send.pipe: ('own) _DocumentFragment_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DocumentFragment) in
      (return:(_) _DocumentFragment_like)
    
    let cast_to_Dom_documentFragment x =
      let return = Obj.magic (x:_DocumentFragment) in
      (return:Dom.documentFragment)
    
    let cast_from_Dom_documentFragment x =
      let return = Obj.magic (x:Dom.documentFragment) in
      (return:_DocumentFragment)
    
    let append ~nodes documentFragment =
      let func = append documentFragment in
      let args = to_arg nodes in
      apply func documentFragment args
    
    let append ~nodes documentFragment =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes documentFragment in
      return
    
    let prepend ~nodes documentFragment =
      let func = prepend documentFragment in
      let args = to_arg nodes in
      apply func documentFragment args
    
    let prepend ~nodes documentFragment =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes documentFragment in
      return
    
end
 module ExtendableMessageEvent = struct
    include ExtendableEvent
    
    external data : extendableMessageEvent:('own) _ExtendableMessageEvent_like ->  'a585 = "data" [@@bs.get] 
    external origin : extendableMessageEvent:('own) _ExtendableMessageEvent_like ->  string = "origin" [@@bs.get] 
    external lastEventId : extendableMessageEvent:('own) _ExtendableMessageEvent_like ->  string = "lastEventId" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ExtendableMessageEvent) in
      (return:(_) _ExtendableMessageEvent_like)
    
end
 module CSSConditionRule = struct
    include CSSGroupingRule
    
    external conditionText : cSSConditionRule:('own) _CSSConditionRule_like ->  string = "conditionText" [@@bs.get] 
    external setConditionText : cSSConditionRule:('own) _CSSConditionRule_like -> conditionText:string ->  unit = "conditionText" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_CSSConditionRule) in
      (return:(_) _CSSConditionRule_like)
    
end
 module DocumentType = struct
    include Node
    
    external name : documentType:('own) _DocumentType_like ->  string = "name" [@@bs.get] 
    external publicId : documentType:('own) _DocumentType_like ->  string = "publicId" [@@bs.get] 
    external systemId : documentType:('own) _DocumentType_like ->  string = "systemId" [@@bs.get] 
    external after : documentType:('own) _DocumentType_like ->  (('own) _DocumentType_like, unit, ('a586)) variadic_func = "after" [@@bs.get]
    external before : documentType:('own) _DocumentType_like ->  (('own) _DocumentType_like, unit, ('a587)) variadic_func = "before" [@@bs.get]
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) _DocumentType_like] 
    external replaceWith : documentType:('own) _DocumentType_like ->  (('own) _DocumentType_like, unit, ('a588)) variadic_func = "replaceWith" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_DocumentType) in
      (return:(_) _DocumentType_like)
    
    let cast_to_Dom_documentType x =
      let return = Obj.magic (x:_DocumentType) in
      (return:Dom.documentType)
    
    let cast_from_Dom_documentType x =
      let return = Obj.magic (x:Dom.documentType) in
      (return:_DocumentType)
    
    let after ~nodes documentType =
      let func = after documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let after ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes documentType in
      return
    
    let before ~nodes documentType =
      let func = before documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let before ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes documentType in
      return
    
    let replaceWith ~nodes documentType =
      let func = replaceWith documentType in
      let args = to_arg nodes in
      apply func documentType args
    
    let replaceWith ~nodes documentType =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes documentType in
      return
    
end
 module Document = struct
    include Node
    
    external oncopy : document:('own) _Document_like ->  (_Event -> 'a589 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : document:('own) _Document_like -> oncopy:(_Event -> 'a590 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : document:('own) _Document_like ->  (_Event -> 'a591 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : document:('own) _Document_like -> oncut:(_Event -> 'a592 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : document:('own) _Document_like ->  (_Event -> 'a593 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : document:('own) _Document_like -> onpaste:(_Event -> 'a594 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    external onabort : document:('own) _Document_like ->  (_Event -> 'a595 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : document:('own) _Document_like -> onabort:(_Event -> 'a596 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : document:('own) _Document_like ->  (_Event -> 'a597 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : document:('own) _Document_like -> onblur:(_Event -> 'a598 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : document:('own) _Document_like ->  (_Event -> 'a599 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : document:('own) _Document_like -> oncancel:(_Event -> 'a600 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : document:('own) _Document_like ->  (_Event -> 'a601 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : document:('own) _Document_like -> oncanplay:(_Event -> 'a602 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : document:('own) _Document_like ->  (_Event -> 'a603 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : document:('own) _Document_like -> oncanplaythrough:(_Event -> 'a604 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : document:('own) _Document_like ->  (_Event -> 'a605 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : document:('own) _Document_like -> onchange:(_Event -> 'a606 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : document:('own) _Document_like ->  (_Event -> 'a607 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : document:('own) _Document_like -> onclick:(_Event -> 'a608 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : document:('own) _Document_like ->  (_Event -> 'a609 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : document:('own) _Document_like -> onclose:(_Event -> 'a610 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : document:('own) _Document_like ->  (_Event -> 'a611 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : document:('own) _Document_like -> oncontextmenu:(_Event -> 'a612 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : document:('own) _Document_like ->  (_Event -> 'a613 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : document:('own) _Document_like -> oncuechange:(_Event -> 'a614 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : document:('own) _Document_like ->  (_Event -> 'a615 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : document:('own) _Document_like -> ondblclick:(_Event -> 'a616 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : document:('own) _Document_like ->  (_Event -> 'a617 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : document:('own) _Document_like -> ondrag:(_Event -> 'a618 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : document:('own) _Document_like ->  (_Event -> 'a619 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : document:('own) _Document_like -> ondragend:(_Event -> 'a620 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : document:('own) _Document_like ->  (_Event -> 'a621 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : document:('own) _Document_like -> ondragenter:(_Event -> 'a622 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : document:('own) _Document_like ->  (_Event -> 'a623 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : document:('own) _Document_like -> ondragexit:(_Event -> 'a624 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : document:('own) _Document_like ->  (_Event -> 'a625 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : document:('own) _Document_like -> ondragleave:(_Event -> 'a626 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : document:('own) _Document_like ->  (_Event -> 'a627 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : document:('own) _Document_like -> ondragover:(_Event -> 'a628 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : document:('own) _Document_like ->  (_Event -> 'a629 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : document:('own) _Document_like -> ondragstart:(_Event -> 'a630 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : document:('own) _Document_like ->  (_Event -> 'a631 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : document:('own) _Document_like -> ondrop:(_Event -> 'a632 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : document:('own) _Document_like ->  (_Event -> 'a633 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : document:('own) _Document_like -> ondurationchange:(_Event -> 'a634 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : document:('own) _Document_like ->  (_Event -> 'a635 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : document:('own) _Document_like -> onemptied:(_Event -> 'a636 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : document:('own) _Document_like ->  (_Event -> 'a637 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : document:('own) _Document_like -> onended:(_Event -> 'a638 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : document:('own) _Document_like ->  ('a639 -> string -> int -> int -> 'a640 -> 'a641 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : document:('own) _Document_like -> onerror:('a642 -> string -> int -> int -> 'a643 -> 'a644 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : document:('own) _Document_like ->  (_Event -> 'a645 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : document:('own) _Document_like -> onfocus:(_Event -> 'a646 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : document:('own) _Document_like ->  (_Event -> 'a647 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : document:('own) _Document_like -> oninput:(_Event -> 'a648 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : document:('own) _Document_like ->  (_Event -> 'a649 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : document:('own) _Document_like -> oninvalid:(_Event -> 'a650 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : document:('own) _Document_like ->  (_Event -> 'a651 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : document:('own) _Document_like -> onkeydown:(_Event -> 'a652 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : document:('own) _Document_like ->  (_Event -> 'a653 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : document:('own) _Document_like -> onkeypress:(_Event -> 'a654 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : document:('own) _Document_like ->  (_Event -> 'a655 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : document:('own) _Document_like -> onkeyup:(_Event -> 'a656 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : document:('own) _Document_like ->  (_Event -> 'a657 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : document:('own) _Document_like -> onload:(_Event -> 'a658 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : document:('own) _Document_like ->  (_Event -> 'a659 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : document:('own) _Document_like -> onloadeddata:(_Event -> 'a660 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : document:('own) _Document_like ->  (_Event -> 'a661 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : document:('own) _Document_like -> onloadedmetadata:(_Event -> 'a662 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : document:('own) _Document_like ->  (_Event -> 'a663 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : document:('own) _Document_like -> onloadstart:(_Event -> 'a664 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : document:('own) _Document_like ->  (_Event -> 'a665 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : document:('own) _Document_like -> onmousedown:(_Event -> 'a666 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : document:('own) _Document_like ->  (_Event -> 'a667 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : document:('own) _Document_like -> onmouseenter:(_Event -> 'a668 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : document:('own) _Document_like ->  (_Event -> 'a669 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : document:('own) _Document_like -> onmouseleave:(_Event -> 'a670 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : document:('own) _Document_like ->  (_Event -> 'a671 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : document:('own) _Document_like -> onmousemove:(_Event -> 'a672 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : document:('own) _Document_like ->  (_Event -> 'a673 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : document:('own) _Document_like -> onmouseout:(_Event -> 'a674 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : document:('own) _Document_like ->  (_Event -> 'a675 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : document:('own) _Document_like -> onmouseover:(_Event -> 'a676 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : document:('own) _Document_like ->  (_Event -> 'a677 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : document:('own) _Document_like -> onmouseup:(_Event -> 'a678 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : document:('own) _Document_like ->  (_Event -> 'a679 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : document:('own) _Document_like -> onwheel:(_Event -> 'a680 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : document:('own) _Document_like ->  (_Event -> 'a681 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : document:('own) _Document_like -> onpause:(_Event -> 'a682 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : document:('own) _Document_like ->  (_Event -> 'a683 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : document:('own) _Document_like -> onplay:(_Event -> 'a684 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : document:('own) _Document_like ->  (_Event -> 'a685 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : document:('own) _Document_like -> onplaying:(_Event -> 'a686 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : document:('own) _Document_like ->  (_Event -> 'a687 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : document:('own) _Document_like -> onprogress:(_Event -> 'a688 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : document:('own) _Document_like ->  (_Event -> 'a689 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : document:('own) _Document_like -> onratechange:(_Event -> 'a690 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : document:('own) _Document_like ->  (_Event -> 'a691 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : document:('own) _Document_like -> onreset:(_Event -> 'a692 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : document:('own) _Document_like ->  (_Event -> 'a693 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : document:('own) _Document_like -> onresize:(_Event -> 'a694 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : document:('own) _Document_like ->  (_Event -> 'a695 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : document:('own) _Document_like -> onscroll:(_Event -> 'a696 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : document:('own) _Document_like ->  (_Event -> 'a697 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : document:('own) _Document_like -> onseeked:(_Event -> 'a698 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : document:('own) _Document_like ->  (_Event -> 'a699 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : document:('own) _Document_like -> onseeking:(_Event -> 'a700 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : document:('own) _Document_like ->  (_Event -> 'a701 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : document:('own) _Document_like -> onselect:(_Event -> 'a702 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : document:('own) _Document_like ->  (_Event -> 'a703 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : document:('own) _Document_like -> onshow:(_Event -> 'a704 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : document:('own) _Document_like ->  (_Event -> 'a705 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : document:('own) _Document_like -> onstalled:(_Event -> 'a706 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : document:('own) _Document_like ->  (_Event -> 'a707 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : document:('own) _Document_like -> onsubmit:(_Event -> 'a708 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : document:('own) _Document_like ->  (_Event -> 'a709 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : document:('own) _Document_like -> onsuspend:(_Event -> 'a710 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : document:('own) _Document_like ->  (_Event -> 'a711 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : document:('own) _Document_like -> ontimeupdate:(_Event -> 'a712 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : document:('own) _Document_like ->  (_Event -> 'a713 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : document:('own) _Document_like -> ontoggle:(_Event -> 'a714 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : document:('own) _Document_like ->  (_Event -> 'a715 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : document:('own) _Document_like -> onvolumechange:(_Event -> 'a716 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : document:('own) _Document_like ->  (_Event -> 'a717 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : document:('own) _Document_like -> onwaiting:(_Event -> 'a718 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : document:('own) _Document_like ->  (_Event -> 'a719 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : document:('own) _Document_like -> ontransitionend:(_Event -> 'a720 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external children : document:('own) _Document_like ->  _HTMLCollection = "children" [@@bs.get] 
    external firstElementChild : document:('own) _Document_like ->  _Element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : document:('own) _Document_like ->  _Element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : document:('own) _Document_like ->  int = "childElementCount" [@@bs.get] 
    external implementation : document:('own) _Document_like ->  _DOMImplementation = "implementation" [@@bs.get] 
    external uRL : document:('own) _Document_like ->  string = "URL" [@@bs.get] 
    external documentURI : document:('own) _Document_like ->  string = "documentURI" [@@bs.get] 
    external compatMode : document:('own) _Document_like ->  string = "compatMode" [@@bs.get] 
    external characterSet : document:('own) _Document_like ->  string = "characterSet" [@@bs.get] 
    external charset : document:('own) _Document_like ->  string = "charset" [@@bs.get] 
    external inputEncoding : document:('own) _Document_like ->  string = "inputEncoding" [@@bs.get] 
    external contentType : document:('own) _Document_like ->  string = "contentType" [@@bs.get] 
    external doctype : document:('own) _Document_like ->  _DocumentType option = "doctype" [@@bs.get] [@@bs.return null_to_opt]
    external documentElement : document:('own) _Document_like ->  _Element option = "documentElement" [@@bs.get] [@@bs.return null_to_opt]
    external location : document:('own) _Document_like ->  _Location option = "location" [@@bs.get] [@@bs.return null_to_opt]
    external domain : document:('own) _Document_like ->  string = "domain" [@@bs.get] 
    external setDomain : document:('own) _Document_like -> domain:string ->  unit = "domain" [@@bs.set]
    external referrer : document:('own) _Document_like ->  string = "referrer" [@@bs.get] 
    external cookie : document:('own) _Document_like ->  string = "cookie" [@@bs.get] 
    external setCookie : document:('own) _Document_like -> cookie:string ->  unit = "cookie" [@@bs.set]
    external lastModified : document:('own) _Document_like ->  string = "lastModified" [@@bs.get] 
    external readyState : document:('own) _Document_like ->  string = "readyState" [@@bs.get] 
    external title : document:('own) _Document_like ->  string = "title" [@@bs.get] 
    external setTitle : document:('own) _Document_like -> title:string ->  unit = "title" [@@bs.set]
    external body : document:('own) _Document_like ->  _HTMLElement option = "body" [@@bs.get] [@@bs.return null_to_opt]
    external setBody : document:('own) _Document_like -> body:_HTMLElement Js.null ->  unit = "body" [@@bs.set]
    external head : document:('own) _Document_like ->  _HTMLHeadElement option = "head" [@@bs.get] [@@bs.return null_to_opt]
    external images : document:('own) _Document_like ->  _HTMLCollection = "images" [@@bs.get] 
    external embeds : document:('own) _Document_like ->  _HTMLCollection = "embeds" [@@bs.get] 
    external plugins : document:('own) _Document_like ->  _HTMLCollection = "plugins" [@@bs.get] 
    external links : document:('own) _Document_like ->  _HTMLCollection = "links" [@@bs.get] 
    external forms : document:('own) _Document_like ->  _HTMLCollection = "forms" [@@bs.get] 
    external scripts : document:('own) _Document_like ->  _HTMLCollection = "scripts" [@@bs.get] 
    external currentScript : document:('own) _Document_like ->  _HTMLScriptElement option = "currentScript" [@@bs.get] [@@bs.return null_to_opt]
    external defaultView : document:('own) _Document_like ->  _Window option = "defaultView" [@@bs.get] [@@bs.return null_to_opt]
    external activeElement : document:('own) _Document_like ->  _Element option = "activeElement" [@@bs.get] [@@bs.return null_to_opt]
    external onreadystatechange : document:('own) _Document_like ->  (_Event -> 'a721 [@bs]) option = "onreadystatechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreadystatechange : document:('own) _Document_like -> onreadystatechange:(_Event -> 'a722 [@bs]) Js.null ->  unit = "onreadystatechange" [@@bs.set]
    external fgColor : document:('own) _Document_like ->  string = "fgColor" [@@bs.get] 
    external setFgColor : document:('own) _Document_like -> fgColor:string ->  unit = "fgColor" [@@bs.set]
    external bgColor : document:('own) _Document_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : document:('own) _Document_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external anchors : document:('own) _Document_like ->  _HTMLCollection = "anchors" [@@bs.get] 
    external applets : document:('own) _Document_like ->  _HTMLCollection = "applets" [@@bs.get] 
    external styleSheets : document:('own) _Document_like ->  _StyleSheetList = "styleSheets" [@@bs.get] 
    external fullscreenEnabled : document:('own) _Document_like ->  bool = "fullscreenEnabled" [@@bs.get] 
    external fullscreenElement : document:('own) _Document_like ->  _Element option = "fullscreenElement" [@@bs.get] [@@bs.return null_to_opt]
    external fullscreen : document:('own) _Document_like ->  bool = "fullscreen" [@@bs.get] 
    external onfullscreenchange : document:('own) _Document_like ->  (_Event -> 'a723 [@bs]) option = "onfullscreenchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfullscreenchange : document:('own) _Document_like -> onfullscreenchange:(_Event -> 'a724 [@bs]) Js.null ->  unit = "onfullscreenchange" [@@bs.set]
    external onfullscreenerror : document:('own) _Document_like ->  (_Event -> 'a725 [@bs]) option = "onfullscreenerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfullscreenerror : document:('own) _Document_like -> onfullscreenerror:(_Event -> 'a726 [@bs]) Js.null ->  unit = "onfullscreenerror" [@@bs.set]
    external get : document:('own) _Document_like -> name:string ->  'a727 = "" [@@bs.get_index] 
    external adoptNode : node:(_) _Node_like ->  _Node = "adoptNode" [@@bs.send.pipe: ('own) _Document_like] 
    external append : document:('own) _Document_like ->  (('own) _Document_like, unit, ('a728)) variadic_func = "append" [@@bs.get]
    external captureEvents :  unit = "captureEvents" [@@bs.send.pipe: ('own) _Document_like] 
    external clear :  unit = "clear" [@@bs.send.pipe: ('own) _Document_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) _Document_like] 
    external createAttribute : localName:string ->  _Attr = "createAttribute" [@@bs.send.pipe: ('own) _Document_like] 
    external createAttributeNS : namespace:string Js.null -> qualifiedName:string ->  _Attr = "createAttributeNS" [@@bs.send.pipe: ('own) _Document_like] 
    external createComment : data:string ->  _Comment = "createComment" [@@bs.send.pipe: ('own) _Document_like] 
    external createDocumentFragment :  _DocumentFragment = "createDocumentFragment" [@@bs.send.pipe: ('own) _Document_like] 
    external createElement : localName:string -> ?options:(_) _ElementCreationOptions_like Js.undefined ->  _Element = "createElement" [@@bs.send.pipe: ('own) _Document_like] 
    external createElementNS : namespace:string Js.null -> qualifiedName:string -> ?options:(_) _ElementCreationOptions_like Js.undefined ->  _Element = "createElementNS" [@@bs.send.pipe: ('own) _Document_like] 
    external createEvent : interface_:string ->  _Event = "createEvent" [@@bs.send.pipe: ('own) _Document_like] 
    external createNodeIterator : root:(_) _Node_like -> ?whatToShow:int Js.undefined -> ?filter:(_) _NodeFilter_like Js.null Js.undefined ->  _NodeIterator = "createNodeIterator" [@@bs.send.pipe: ('own) _Document_like] 
    external createProcessingInstruction : target:string -> data:string ->  _ProcessingInstruction = "createProcessingInstruction" [@@bs.send.pipe: ('own) _Document_like] 
    external createRange :  _Range = "createRange" [@@bs.send.pipe: ('own) _Document_like] 
    external createTextNode : data:string ->  _Text = "createTextNode" [@@bs.send.pipe: ('own) _Document_like] 
    external createTouch : view:(_) _Window_like -> target:(_) _EventTarget_like -> identifier:int -> pageX:float -> pageY:float -> screenX:float -> screenY:float ->  _Touch = "createTouch" [@@bs.send.pipe: ('own) _Document_like] 
    external createTouchList : document:('own) _Document_like ->  (('own) _Document_like, _TouchList, ((_) _Touch_like)) variadic_func = "createTouchList" [@@bs.get]
    external createTreeWalker : root:(_) _Node_like -> ?whatToShow:int Js.undefined -> ?filter:(_) _NodeFilter_like Js.null Js.undefined ->  _TreeWalker = "createTreeWalker" [@@bs.send.pipe: ('own) _Document_like] 
    external elementFromPoint : x:float -> y:float ->  _Element option = "elementFromPoint" [@@bs.send.pipe: ('own) _Document_like] [@@bs.return null_to_opt]
    external elementsFromPoint : x:float -> y:float ->  _Element array = "elementsFromPoint" [@@bs.send.pipe: ('own) _Document_like] 
    external exitFullscreen :  unit Js.Promise.t = "exitFullscreen" [@@bs.send.pipe: ('own) _Document_like] 
    external getElementById : elementId:string ->  _Element option = "getElementById" [@@bs.send.pipe: ('own) _Document_like] [@@bs.return null_to_opt]
    external getElementsByClassName : classNames:string ->  _HTMLCollection = "getElementsByClassName" [@@bs.send.pipe: ('own) _Document_like] 
    external getElementsByName : elementName:string ->  _NodeList = "getElementsByName" [@@bs.send.pipe: ('own) _Document_like] 
    external getElementsByTagName : qualifiedName:string ->  _HTMLCollection = "getElementsByTagName" [@@bs.send.pipe: ('own) _Document_like] 
    external getElementsByTagNameNS : namespace:string Js.null -> qualifiedName:string ->  _HTMLCollection = "getElementsByTagNameNS" [@@bs.send.pipe: ('own) _Document_like] 
    external hasFocus :  bool = "hasFocus" [@@bs.send.pipe: ('own) _Document_like] 
    external importNode : node:(_) _Node_like -> ?deep:Js.boolean Js.undefined ->  _Node = "importNode" [@@bs.send.pipe: ('own) _Document_like] 
    external open_ : ?type_:string Js.undefined -> ?replace:string Js.undefined ->  _Document = "open" [@@bs.send.pipe: ('own) _Document_like] 
    external prepend : document:('own) _Document_like ->  (('own) _Document_like, unit, ('a729)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  _Element option = "querySelector" [@@bs.send.pipe: ('own) _Document_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  _NodeList = "querySelectorAll" [@@bs.send.pipe: ('own) _Document_like] 
    external releaseEvents :  unit = "releaseEvents" [@@bs.send.pipe: ('own) _Document_like] 
    external write : document:('own) _Document_like ->  (('own) _Document_like, unit, (string)) variadic_func = "write" [@@bs.get]
    external writeln : document:('own) _Document_like ->  (('own) _Document_like, unit, (string)) variadic_func = "writeln" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_Document) in
      (return:(_) _Document_like)
    
    let cast_to_Dom_document x =
      let return = Obj.magic (x:_Document) in
      (return:Dom.document)
    
    let cast_from_Dom_document x =
      let return = Obj.magic (x:Dom.document) in
      (return:_Document)
    
    let append ~nodes document =
      let func = append document in
      let args = to_arg nodes in
      apply func document args
    
    let append ~nodes document =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes document in
      return
    
    let createElement ~localName ?options document =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      createElement ~localName ~options document
    
    let createElementNS ~namespace ~qualifiedName ?options document =
      let conv_options = Js_undefined.from_opt in
      let options = conv_options options in
      createElementNS ~namespace ~qualifiedName ~options document
    
    let createNodeIterator ~root ?whatToShow ?filter document =
      let conv_whatToShow = Js_undefined.from_opt in
      let whatToShow = conv_whatToShow whatToShow in
      let conv_filter = Js_undefined.from_opt in
      let filter = conv_filter filter in
      createNodeIterator ~root ~whatToShow ~filter document
    
    let createTouchList ~touches document =
      let func = createTouchList document in
      let args = to_arg touches in
      apply func document args
    
    let createTreeWalker ~root ?whatToShow ?filter document =
      let conv_whatToShow = Js_undefined.from_opt in
      let whatToShow = conv_whatToShow whatToShow in
      let conv_filter = Js_undefined.from_opt in
      let filter = conv_filter filter in
      createTreeWalker ~root ~whatToShow ~filter document
    
    let importNode ~node ?deep document =
      let conv_deep = Js_undefined.from_opt in
      let deep = conv_deep deep in
      importNode ~node ~deep document
    
    let open_ ?type_ ?replace document =
      let conv_type = Js_undefined.from_opt in
      let type_ = conv_type type_ in
      let conv_replace = Js_undefined.from_opt in
      let replace = conv_replace replace in
      open_ ~type_ ~replace document
    
    let prepend ~nodes document =
      let func = prepend document in
      let args = to_arg nodes in
      apply func document args
    
    let prepend ~nodes document =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes document in
      return
    
    let write ~text document =
      let func = write document in
      let args = to_arg text in
      apply func document args
    
    let writeln ~text document =
      let func = writeln document in
      let args = to_arg text in
      apply func document args
    
end
 module CharacterData = struct
    include Node
    
    external previousElementSibling : characterData:('own) _CharacterData_like ->  _Element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : characterData:('own) _CharacterData_like ->  _Element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external data : characterData:('own) _CharacterData_like ->  string = "data" [@@bs.get] 
    external setData : characterData:('own) _CharacterData_like -> data:string ->  unit = "data" [@@bs.set]
    external length : characterData:('own) _CharacterData_like ->  int = "length" [@@bs.get] 
    external after : characterData:('own) _CharacterData_like ->  (('own) _CharacterData_like, unit, ('a730)) variadic_func = "after" [@@bs.get]
    external appendData : data:string ->  unit = "appendData" [@@bs.send.pipe: ('own) _CharacterData_like] 
    external before : characterData:('own) _CharacterData_like ->  (('own) _CharacterData_like, unit, ('a731)) variadic_func = "before" [@@bs.get]
    external deleteData : offset:int -> count:int ->  unit = "deleteData" [@@bs.send.pipe: ('own) _CharacterData_like] 
    external insertData : offset:int -> data:string ->  unit = "insertData" [@@bs.send.pipe: ('own) _CharacterData_like] 
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) _CharacterData_like] 
    external replaceData : offset:int -> count:int -> data:string ->  unit = "replaceData" [@@bs.send.pipe: ('own) _CharacterData_like] 
    external replaceWith : characterData:('own) _CharacterData_like ->  (('own) _CharacterData_like, unit, ('a732)) variadic_func = "replaceWith" [@@bs.get]
    external substringData : offset:int -> count:int ->  string = "substringData" [@@bs.send.pipe: ('own) _CharacterData_like] 
    
    let downcast x =
      let return = Obj.magic (x:_CharacterData) in
      (return:(_) _CharacterData_like)
    
    let cast_to_Dom_characterData x =
      let return = Obj.magic (x:_CharacterData) in
      (return:Dom.characterData)
    
    let cast_from_Dom_characterData x =
      let return = Obj.magic (x:Dom.characterData) in
      (return:_CharacterData)
    
    let after ~nodes characterData =
      let func = after characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let after ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes characterData in
      return
    
    let before ~nodes characterData =
      let func = before characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let before ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes characterData in
      return
    
    let replaceWith ~nodes characterData =
      let func = replaceWith characterData in
      let args = to_arg nodes in
      apply func characterData args
    
    let replaceWith ~nodes characterData =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes characterData in
      return
    
end
 module MouseEvent = struct
    include UIEvent
    
    external screenX : mouseEvent:('own) _MouseEvent_like ->  int = "screenX" [@@bs.get] 
    external screenY : mouseEvent:('own) _MouseEvent_like ->  int = "screenY" [@@bs.get] 
    external clientX : mouseEvent:('own) _MouseEvent_like ->  int = "clientX" [@@bs.get] 
    external clientY : mouseEvent:('own) _MouseEvent_like ->  int = "clientY" [@@bs.get] 
    external ctrlKey : mouseEvent:('own) _MouseEvent_like ->  bool = "ctrlKey" [@@bs.get] 
    external shiftKey : mouseEvent:('own) _MouseEvent_like ->  bool = "shiftKey" [@@bs.get] 
    external altKey : mouseEvent:('own) _MouseEvent_like ->  bool = "altKey" [@@bs.get] 
    external metaKey : mouseEvent:('own) _MouseEvent_like ->  bool = "metaKey" [@@bs.get] 
    external button : mouseEvent:('own) _MouseEvent_like ->  int = "button" [@@bs.get] 
    external relatedTarget : mouseEvent:('own) _MouseEvent_like ->  _EventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external which : mouseEvent:('own) _MouseEvent_like ->  int = "which" [@@bs.get] 
    external initMouseEvent : typeArg:string -> bubblesArg:Js.boolean -> cancelableArg:Js.boolean -> viewArg:(_) _Window_like Js.null -> detailArg:int -> screenXArg:int -> screenYArg:int -> clientXArg:int -> clientYArg:int -> ctrlKeyArg:Js.boolean -> altKeyArg:Js.boolean -> shiftKeyArg:Js.boolean -> metaKeyArg:Js.boolean -> buttonArg:int -> relatedTargetArg:(_) _EventTarget_like Js.null ->  unit = "initMouseEvent" [@@bs.send.pipe: ('own) _MouseEvent_like] 
    
    let downcast x =
      let return = Obj.magic (x:_MouseEvent) in
      (return:(_) _MouseEvent_like)
    
    let cast_to_Dom_mouseEvent x =
      let return = Obj.magic (x:_MouseEvent) in
      (return:Dom.mouseEvent)
    
    let cast_from_Dom_mouseEvent x =
      let return = Obj.magic (x:Dom.mouseEvent) in
      (return:_MouseEvent)
    
end
 module Element = struct
    include Node
    
    external children : element:('own) _Element_like ->  _HTMLCollection = "children" [@@bs.get] 
    external firstElementChild : element:('own) _Element_like ->  _Element option = "firstElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external lastElementChild : element:('own) _Element_like ->  _Element option = "lastElementChild" [@@bs.get] [@@bs.return null_to_opt]
    external childElementCount : element:('own) _Element_like ->  int = "childElementCount" [@@bs.get] 
    external previousElementSibling : element:('own) _Element_like ->  _Element option = "previousElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external nextElementSibling : element:('own) _Element_like ->  _Element option = "nextElementSibling" [@@bs.get] [@@bs.return null_to_opt]
    external namespaceURI : element:('own) _Element_like ->  string option = "namespaceURI" [@@bs.get] [@@bs.return null_to_opt]
    external prefix : element:('own) _Element_like ->  string option = "prefix" [@@bs.get] [@@bs.return null_to_opt]
    external localName : element:('own) _Element_like ->  string = "localName" [@@bs.get] 
    external tagName : element:('own) _Element_like ->  string = "tagName" [@@bs.get] 
    external id : element:('own) _Element_like ->  string = "id" [@@bs.get] 
    external setId : element:('own) _Element_like -> id:string ->  unit = "id" [@@bs.set]
    external className : element:('own) _Element_like ->  string = "className" [@@bs.get] 
    external setClassName : element:('own) _Element_like -> className:string ->  unit = "className" [@@bs.set]
    external classList : element:('own) _Element_like ->  _DOMTokenList = "classList" [@@bs.get] 
    external attributes : element:('own) _Element_like ->  _NamedNodeMap = "attributes" [@@bs.get] 
    external scrollTop : element:('own) _Element_like ->  float = "scrollTop" [@@bs.get] 
    external setScrollTop : element:('own) _Element_like -> scrollTop:float ->  unit = "scrollTop" [@@bs.set]
    external scrollLeft : element:('own) _Element_like ->  float = "scrollLeft" [@@bs.get] 
    external setScrollLeft : element:('own) _Element_like -> scrollLeft:float ->  unit = "scrollLeft" [@@bs.set]
    external scrollWidth : element:('own) _Element_like ->  int = "scrollWidth" [@@bs.get] 
    external scrollHeight : element:('own) _Element_like ->  int = "scrollHeight" [@@bs.get] 
    external clientTop : element:('own) _Element_like ->  int = "clientTop" [@@bs.get] 
    external clientLeft : element:('own) _Element_like ->  int = "clientLeft" [@@bs.get] 
    external clientWidth : element:('own) _Element_like ->  int = "clientWidth" [@@bs.get] 
    external clientHeight : element:('own) _Element_like ->  int = "clientHeight" [@@bs.get] 
    external innerHTML : element:('own) _Element_like ->  string = "innerHTML" [@@bs.get] 
    external setInnerHTML : element:('own) _Element_like -> innerHTML:string ->  unit = "innerHTML" [@@bs.set]
    external outerHTML : element:('own) _Element_like ->  string = "outerHTML" [@@bs.get] 
    external setOuterHTML : element:('own) _Element_like -> outerHTML:string ->  unit = "outerHTML" [@@bs.set]
    external after : element:('own) _Element_like ->  (('own) _Element_like, unit, ('a733)) variadic_func = "after" [@@bs.get]
    external append : element:('own) _Element_like ->  (('own) _Element_like, unit, ('a734)) variadic_func = "append" [@@bs.get]
    external before : element:('own) _Element_like ->  (('own) _Element_like, unit, ('a735)) variadic_func = "before" [@@bs.get]
    external closest : selectors:string ->  _Element option = "closest" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external enterFormalActivationState :  unit = "enterFormalActivationState" [@@bs.send.pipe: ('own) _Element_like] 
    external exitFormalActivationState :  unit = "exitFormalActivationState" [@@bs.send.pipe: ('own) _Element_like] 
    external getAttribute : name:string ->  string option = "getAttribute" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external getAttributeNS : namespace:string Js.null -> localName:string ->  string option = "getAttributeNS" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external getAttributeNames :  string array = "getAttributeNames" [@@bs.send.pipe: ('own) _Element_like] 
    external getAttributeNode : name:string ->  _Attr option = "getAttributeNode" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external getAttributeNodeNS : namespace:string Js.null -> localName:string ->  _Attr option = "getAttributeNodeNS" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external getBoundingClientRect :  _DOMRect = "getBoundingClientRect" [@@bs.send.pipe: ('own) _Element_like] 
    external getClientRects :  _DOMRect array = "getClientRects" [@@bs.send.pipe: ('own) _Element_like] 
    external getElementsByClassName : classNames:string ->  _HTMLCollection = "getElementsByClassName" [@@bs.send.pipe: ('own) _Element_like] 
    external getElementsByTagName : localName:string ->  _HTMLCollection = "getElementsByTagName" [@@bs.send.pipe: ('own) _Element_like] 
    external getElementsByTagNameNS : namespace:string Js.null -> localName:string ->  _HTMLCollection = "getElementsByTagNameNS" [@@bs.send.pipe: ('own) _Element_like] 
    external hasAttribute : name:string ->  bool = "hasAttribute" [@@bs.send.pipe: ('own) _Element_like] 
    external hasAttributeNS : namespace:string Js.null -> localName:string ->  bool = "hasAttributeNS" [@@bs.send.pipe: ('own) _Element_like] 
    external hasAttributes :  bool = "hasAttributes" [@@bs.send.pipe: ('own) _Element_like] 
    external insertAdjacentElement : where_:string -> element:(_) _Element_like ->  _Element option = "insertAdjacentElement" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external insertAdjacentHTML : position:string -> html:string ->  unit = "insertAdjacentHTML" [@@bs.send.pipe: ('own) _Element_like] 
    external insertAdjacentText : where_:string -> data:string ->  unit = "insertAdjacentText" [@@bs.send.pipe: ('own) _Element_like] 
    external matches : selectors:string ->  bool = "matches" [@@bs.send.pipe: ('own) _Element_like] 
    external prepend : element:('own) _Element_like ->  (('own) _Element_like, unit, ('a736)) variadic_func = "prepend" [@@bs.get]
    external querySelector : selectors:string ->  _Element option = "querySelector" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external querySelectorAll : selectors:string ->  _NodeList = "querySelectorAll" [@@bs.send.pipe: ('own) _Element_like] 
    external remove :  unit = "remove" [@@bs.send.pipe: ('own) _Element_like] 
    external removeAttribute : name:string ->  unit = "removeAttribute" [@@bs.send.pipe: ('own) _Element_like] 
    external removeAttributeNS : namespace:string Js.null -> localName:string ->  unit = "removeAttributeNS" [@@bs.send.pipe: ('own) _Element_like] 
    external removeAttributeNode : oldAttr:(_) _Attr_like ->  _Attr = "removeAttributeNode" [@@bs.send.pipe: ('own) _Element_like] 
    external replaceWith : element:('own) _Element_like ->  (('own) _Element_like, unit, ('a737)) variadic_func = "replaceWith" [@@bs.get]
    external requestFullscreen :  unit Js.Promise.t = "requestFullscreen" [@@bs.send.pipe: ('own) _Element_like] 
    external scroll : x:float -> y:float ->  unit = "scroll" [@@bs.send.pipe: ('own) _Element_like] 
    external scrollBy : x:float -> y:float ->  unit = "scrollBy" [@@bs.send.pipe: ('own) _Element_like] 
    external scrollTo : x:float -> y:float ->  unit = "scrollTo" [@@bs.send.pipe: ('own) _Element_like] 
    external setAttribute : name:string -> value:string ->  unit = "setAttribute" [@@bs.send.pipe: ('own) _Element_like] 
    external setAttributeNS : namespace:string Js.null -> name:string -> value:string ->  unit = "setAttributeNS" [@@bs.send.pipe: ('own) _Element_like] 
    external setAttributeNode : attr:(_) _Attr_like ->  _Attr option = "setAttributeNode" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external setAttributeNodeNS : attr:(_) _Attr_like ->  _Attr option = "setAttributeNodeNS" [@@bs.send.pipe: ('own) _Element_like] [@@bs.return null_to_opt]
    external webkitMatchesSelector : selectors:string ->  bool = "webkitMatchesSelector" [@@bs.send.pipe: ('own) _Element_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Element) in
      (return:(_) _Element_like)
    
    let cast_to_Dom_element x =
      let return = Obj.magic (x:_Element) in
      (return:Dom.element)
    
    let cast_from_Dom_element x =
      let return = Obj.magic (x:Dom.element) in
      (return:_Element)
    
    let after ~nodes element =
      let func = after element in
      let args = to_arg nodes in
      apply func element args
    
    let after ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = after ~nodes element in
      return
    
    let append ~nodes element =
      let func = append element in
      let args = to_arg nodes in
      apply func element args
    
    let append ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = append ~nodes element in
      return
    
    let before ~nodes element =
      let func = before element in
      let args = to_arg nodes in
      apply func element args
    
    let before ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = before ~nodes element in
      return
    
    let prepend ~nodes element =
      let func = prepend element in
      let args = to_arg nodes in
      apply func element args
    
    let prepend ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = prepend ~nodes element in
      return
    
    let replaceWith ~nodes element =
      let func = replaceWith element in
      let args = to_arg nodes in
      apply func element args
    
    let replaceWith ~nodes element =
      let conv_nodes = function
        | `Node (x: (_) _Node_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let conv_nodes = access_array conv_nodes in
      let nodes = conv_nodes nodes in
      let return = replaceWith ~nodes element in
      return
    
end
 module FocusEvent = struct
    include UIEvent
    
    external relatedTarget : focusEvent:('own) _FocusEvent_like ->  _EventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_FocusEvent) in
      (return:(_) _FocusEvent_like)
    
    let cast_to_Dom_focusEvent x =
      let return = Obj.magic (x:_FocusEvent) in
      (return:Dom.focusEvent)
    
    let cast_from_Dom_focusEvent x =
      let return = Obj.magic (x:Dom.focusEvent) in
      (return:_FocusEvent)
    
end
 module Window = struct
    include GlobalScope
    
    external localStorage : window:('own) _Window_like ->  _Storage = "localStorage" [@@bs.get] 
    external sessionStorage : window:('own) _Window_like ->  _Storage = "sessionStorage" [@@bs.get] 
    external onafterprint : window:('own) _Window_like ->  (_Event -> 'a738 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : window:('own) _Window_like -> onafterprint:(_Event -> 'a739 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : window:('own) _Window_like ->  (_Event -> 'a740 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : window:('own) _Window_like -> onbeforeprint:(_Event -> 'a741 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : window:('own) _Window_like ->  (_Event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : window:('own) _Window_like -> onbeforeunload:(_Event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : window:('own) _Window_like ->  (_Event -> 'a742 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : window:('own) _Window_like -> onhashchange:(_Event -> 'a743 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : window:('own) _Window_like ->  (_Event -> 'a744 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : window:('own) _Window_like -> onlanguagechange:(_Event -> 'a745 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : window:('own) _Window_like ->  (_Event -> 'a746 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : window:('own) _Window_like -> onmessage:(_Event -> 'a747 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : window:('own) _Window_like ->  (_Event -> 'a748 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : window:('own) _Window_like -> onoffline:(_Event -> 'a749 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : window:('own) _Window_like ->  (_Event -> 'a750 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : window:('own) _Window_like -> ononline:(_Event -> 'a751 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : window:('own) _Window_like ->  (_Event -> 'a752 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : window:('own) _Window_like -> onpagehide:(_Event -> 'a753 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : window:('own) _Window_like ->  (_Event -> 'a754 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : window:('own) _Window_like -> onpageshow:(_Event -> 'a755 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : window:('own) _Window_like ->  (_Event -> 'a756 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : window:('own) _Window_like -> onpopstate:(_Event -> 'a757 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : window:('own) _Window_like ->  (_Event -> 'a758 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : window:('own) _Window_like -> onrejectionhandled:(_Event -> 'a759 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : window:('own) _Window_like ->  (_Event -> 'a760 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : window:('own) _Window_like -> onstorage:(_Event -> 'a761 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : window:('own) _Window_like ->  (_Event -> 'a762 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : window:('own) _Window_like -> onunhandledrejection:(_Event -> 'a763 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : window:('own) _Window_like ->  (_Event -> 'a764 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : window:('own) _Window_like -> onunload:(_Event -> 'a765 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    external onabort : window:('own) _Window_like ->  (_Event -> 'a766 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : window:('own) _Window_like -> onabort:(_Event -> 'a767 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : window:('own) _Window_like ->  (_Event -> 'a768 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : window:('own) _Window_like -> onblur:(_Event -> 'a769 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : window:('own) _Window_like ->  (_Event -> 'a770 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : window:('own) _Window_like -> oncancel:(_Event -> 'a771 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : window:('own) _Window_like ->  (_Event -> 'a772 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : window:('own) _Window_like -> oncanplay:(_Event -> 'a773 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : window:('own) _Window_like ->  (_Event -> 'a774 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : window:('own) _Window_like -> oncanplaythrough:(_Event -> 'a775 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : window:('own) _Window_like ->  (_Event -> 'a776 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : window:('own) _Window_like -> onchange:(_Event -> 'a777 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : window:('own) _Window_like ->  (_Event -> 'a778 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : window:('own) _Window_like -> onclick:(_Event -> 'a779 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : window:('own) _Window_like ->  (_Event -> 'a780 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : window:('own) _Window_like -> onclose:(_Event -> 'a781 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : window:('own) _Window_like ->  (_Event -> 'a782 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : window:('own) _Window_like -> oncontextmenu:(_Event -> 'a783 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : window:('own) _Window_like ->  (_Event -> 'a784 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : window:('own) _Window_like -> oncuechange:(_Event -> 'a785 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : window:('own) _Window_like ->  (_Event -> 'a786 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : window:('own) _Window_like -> ondblclick:(_Event -> 'a787 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : window:('own) _Window_like ->  (_Event -> 'a788 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : window:('own) _Window_like -> ondrag:(_Event -> 'a789 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : window:('own) _Window_like ->  (_Event -> 'a790 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : window:('own) _Window_like -> ondragend:(_Event -> 'a791 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : window:('own) _Window_like ->  (_Event -> 'a792 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : window:('own) _Window_like -> ondragenter:(_Event -> 'a793 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : window:('own) _Window_like ->  (_Event -> 'a794 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : window:('own) _Window_like -> ondragexit:(_Event -> 'a795 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : window:('own) _Window_like ->  (_Event -> 'a796 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : window:('own) _Window_like -> ondragleave:(_Event -> 'a797 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : window:('own) _Window_like ->  (_Event -> 'a798 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : window:('own) _Window_like -> ondragover:(_Event -> 'a799 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : window:('own) _Window_like ->  (_Event -> 'a800 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : window:('own) _Window_like -> ondragstart:(_Event -> 'a801 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : window:('own) _Window_like ->  (_Event -> 'a802 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : window:('own) _Window_like -> ondrop:(_Event -> 'a803 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : window:('own) _Window_like ->  (_Event -> 'a804 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : window:('own) _Window_like -> ondurationchange:(_Event -> 'a805 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : window:('own) _Window_like ->  (_Event -> 'a806 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : window:('own) _Window_like -> onemptied:(_Event -> 'a807 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : window:('own) _Window_like ->  (_Event -> 'a808 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : window:('own) _Window_like -> onended:(_Event -> 'a809 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : window:('own) _Window_like ->  ('a810 -> string -> int -> int -> 'a811 -> 'a812 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : window:('own) _Window_like -> onerror:('a813 -> string -> int -> int -> 'a814 -> 'a815 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : window:('own) _Window_like ->  (_Event -> 'a816 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : window:('own) _Window_like -> onfocus:(_Event -> 'a817 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : window:('own) _Window_like ->  (_Event -> 'a818 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : window:('own) _Window_like -> oninput:(_Event -> 'a819 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : window:('own) _Window_like ->  (_Event -> 'a820 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : window:('own) _Window_like -> oninvalid:(_Event -> 'a821 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : window:('own) _Window_like ->  (_Event -> 'a822 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : window:('own) _Window_like -> onkeydown:(_Event -> 'a823 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : window:('own) _Window_like ->  (_Event -> 'a824 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : window:('own) _Window_like -> onkeypress:(_Event -> 'a825 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : window:('own) _Window_like ->  (_Event -> 'a826 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : window:('own) _Window_like -> onkeyup:(_Event -> 'a827 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : window:('own) _Window_like ->  (_Event -> 'a828 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : window:('own) _Window_like -> onload:(_Event -> 'a829 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : window:('own) _Window_like ->  (_Event -> 'a830 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : window:('own) _Window_like -> onloadeddata:(_Event -> 'a831 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : window:('own) _Window_like ->  (_Event -> 'a832 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : window:('own) _Window_like -> onloadedmetadata:(_Event -> 'a833 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : window:('own) _Window_like ->  (_Event -> 'a834 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : window:('own) _Window_like -> onloadstart:(_Event -> 'a835 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : window:('own) _Window_like ->  (_Event -> 'a836 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : window:('own) _Window_like -> onmousedown:(_Event -> 'a837 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : window:('own) _Window_like ->  (_Event -> 'a838 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : window:('own) _Window_like -> onmouseenter:(_Event -> 'a839 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : window:('own) _Window_like ->  (_Event -> 'a840 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : window:('own) _Window_like -> onmouseleave:(_Event -> 'a841 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : window:('own) _Window_like ->  (_Event -> 'a842 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : window:('own) _Window_like -> onmousemove:(_Event -> 'a843 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : window:('own) _Window_like ->  (_Event -> 'a844 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : window:('own) _Window_like -> onmouseout:(_Event -> 'a845 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : window:('own) _Window_like ->  (_Event -> 'a846 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : window:('own) _Window_like -> onmouseover:(_Event -> 'a847 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : window:('own) _Window_like ->  (_Event -> 'a848 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : window:('own) _Window_like -> onmouseup:(_Event -> 'a849 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : window:('own) _Window_like ->  (_Event -> 'a850 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : window:('own) _Window_like -> onwheel:(_Event -> 'a851 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : window:('own) _Window_like ->  (_Event -> 'a852 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : window:('own) _Window_like -> onpause:(_Event -> 'a853 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : window:('own) _Window_like ->  (_Event -> 'a854 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : window:('own) _Window_like -> onplay:(_Event -> 'a855 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : window:('own) _Window_like ->  (_Event -> 'a856 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : window:('own) _Window_like -> onplaying:(_Event -> 'a857 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : window:('own) _Window_like ->  (_Event -> 'a858 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : window:('own) _Window_like -> onprogress:(_Event -> 'a859 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : window:('own) _Window_like ->  (_Event -> 'a860 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : window:('own) _Window_like -> onratechange:(_Event -> 'a861 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : window:('own) _Window_like ->  (_Event -> 'a862 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : window:('own) _Window_like -> onreset:(_Event -> 'a863 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : window:('own) _Window_like ->  (_Event -> 'a864 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : window:('own) _Window_like -> onresize:(_Event -> 'a865 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : window:('own) _Window_like ->  (_Event -> 'a866 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : window:('own) _Window_like -> onscroll:(_Event -> 'a867 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : window:('own) _Window_like ->  (_Event -> 'a868 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : window:('own) _Window_like -> onseeked:(_Event -> 'a869 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : window:('own) _Window_like ->  (_Event -> 'a870 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : window:('own) _Window_like -> onseeking:(_Event -> 'a871 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : window:('own) _Window_like ->  (_Event -> 'a872 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : window:('own) _Window_like -> onselect:(_Event -> 'a873 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : window:('own) _Window_like ->  (_Event -> 'a874 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : window:('own) _Window_like -> onshow:(_Event -> 'a875 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : window:('own) _Window_like ->  (_Event -> 'a876 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : window:('own) _Window_like -> onstalled:(_Event -> 'a877 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : window:('own) _Window_like ->  (_Event -> 'a878 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : window:('own) _Window_like -> onsubmit:(_Event -> 'a879 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : window:('own) _Window_like ->  (_Event -> 'a880 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : window:('own) _Window_like -> onsuspend:(_Event -> 'a881 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : window:('own) _Window_like ->  (_Event -> 'a882 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : window:('own) _Window_like -> ontimeupdate:(_Event -> 'a883 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : window:('own) _Window_like ->  (_Event -> 'a884 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : window:('own) _Window_like -> ontoggle:(_Event -> 'a885 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : window:('own) _Window_like ->  (_Event -> 'a886 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : window:('own) _Window_like -> onvolumechange:(_Event -> 'a887 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : window:('own) _Window_like ->  (_Event -> 'a888 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : window:('own) _Window_like -> onwaiting:(_Event -> 'a889 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : window:('own) _Window_like ->  (_Event -> 'a890 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : window:('own) _Window_like -> ontransitionend:(_Event -> 'a891 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external crypto : window:('own) _Window_like ->  _Crypto = "crypto" [@@bs.get] 
    external window : window:('own) _Window_like ->  _WindowProxy = "window" [@@bs.get] 
    external self : window:('own) _Window_like ->  _WindowProxy = "self" [@@bs.get] 
    external document : window:('own) _Window_like ->  _Document = "document" [@@bs.get] 
    external location : window:('own) _Window_like ->  _Location = "location" [@@bs.get] 
    external history : window:('own) _Window_like ->  _History = "history" [@@bs.get] 
    external customElements : window:('own) _Window_like ->  _CustomElementRegistry = "customElements" [@@bs.get] 
    external status : window:('own) _Window_like ->  string = "status" [@@bs.get] 
    external setStatus : window:('own) _Window_like -> status:string ->  unit = "status" [@@bs.set]
    external closed_ : window:('own) _Window_like ->  bool = "closed" [@@bs.get] 
    external frames : window:('own) _Window_like ->  _WindowProxy = "frames" [@@bs.get] 
    external top : window:('own) _Window_like ->  _WindowProxy option = "top" [@@bs.get] [@@bs.return null_to_opt]
    external parent : window:('own) _Window_like ->  _WindowProxy option = "parent" [@@bs.get] [@@bs.return null_to_opt]
    external frameElement : window:('own) _Window_like ->  _Element option = "frameElement" [@@bs.get] [@@bs.return null_to_opt]
    external navigator : window:('own) _Window_like ->  _Navigator = "navigator" [@@bs.get] 
    external performance : window:('own) _Window_like ->  _Performance = "performance" [@@bs.get] 
    external screen : window:('own) _Window_like ->  _Screen = "screen" [@@bs.get] 
    external innerWidth : window:('own) _Window_like ->  int = "innerWidth" [@@bs.get] 
    external innerHeight : window:('own) _Window_like ->  int = "innerHeight" [@@bs.get] 
    external scrollX : window:('own) _Window_like ->  int = "scrollX" [@@bs.get] 
    external pageXOffset : window:('own) _Window_like ->  int = "pageXOffset" [@@bs.get] 
    external scrollY : window:('own) _Window_like ->  int = "scrollY" [@@bs.get] 
    external pageYOffset : window:('own) _Window_like ->  int = "pageYOffset" [@@bs.get] 
    external screenX : window:('own) _Window_like ->  int = "screenX" [@@bs.get] 
    external screenY : window:('own) _Window_like ->  int = "screenY" [@@bs.get] 
    external outerWidth : window:('own) _Window_like ->  int = "outerWidth" [@@bs.get] 
    external outerHeight : window:('own) _Window_like ->  int = "outerHeight" [@@bs.get] 
    external devicePixelRatio : window:('own) _Window_like ->  float = "devicePixelRatio" [@@bs.get] 
    external testRunner : window:('own) _Window_like ->  _TestRunner = "testRunner" [@@bs.get] 
    external paintWorklet : window:('own) _Window_like ->  _Worklet = "paintWorklet" [@@bs.get] 
    external alert : message:string ->  unit = "alert" [@@bs.send.pipe: ('own) _Window_like] 
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) _Window_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) _Window_like] 
    external cancelAnimationFrame : handle:int ->  unit = "cancelAnimationFrame" [@@bs.send.pipe: ('own) _Window_like] 
    external captureEvents :  unit = "captureEvents" [@@bs.send.pipe: ('own) _Window_like] 
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) _Window_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) _Window_like] 
    external close :  unit = "close" [@@bs.send.pipe: ('own) _Window_like] 
    external debug : arg:string ->  unit = "debug" [@@bs.send.pipe: ('own) _Window_like] 
    external fetch : input:'a892 -> ?init:(_) _RequestInit_like Js.undefined ->  _Response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) _Window_like] 
    external gc :  unit = "gc" [@@bs.send.pipe: ('own) _Window_like] 
    external getComputedStyle : elt:(_) _Element_like -> ?pseudoElt:string Js.undefined ->  _CSSStyleDeclaration = "getComputedStyle" [@@bs.send.pipe: ('own) _Window_like] 
    external matchMedia : query:string ->  _MediaQueryList = "matchMedia" [@@bs.send.pipe: ('own) _Window_like] 
    external moveBy : x:int -> y:int ->  unit = "moveBy" [@@bs.send.pipe: ('own) _Window_like] 
    external moveTo : x:int -> y:int ->  unit = "moveTo" [@@bs.send.pipe: ('own) _Window_like] 
    external openURLInDefaultBrowser : href:string ->  unit = "openURLInDefaultBrowser" [@@bs.send.pipe: ('own) _Window_like] 
    external postMessage : message:'a893 -> targetOrigin:string ->  unit = "postMessage" [@@bs.send.pipe: ('own) _Window_like] 
    external releaseEvents :  unit = "releaseEvents" [@@bs.send.pipe: ('own) _Window_like] 
    external requestAnimationFrame : callback:(float -> unit [@bs]) ->  int = "requestAnimationFrame" [@@bs.send.pipe: ('own) _Window_like] 
    external resizeBy : x:int -> y:int ->  unit = "resizeBy" [@@bs.send.pipe: ('own) _Window_like] 
    external resizeTo : x:int -> y:int ->  unit = "resizeTo" [@@bs.send.pipe: ('own) _Window_like] 
    external scroll : x:float -> y:float ->  unit = "scroll" [@@bs.send.pipe: ('own) _Window_like] 
    external scrollBy : x:float -> y:float ->  unit = "scrollBy" [@@bs.send.pipe: ('own) _Window_like] 
    external scrollTo : x:float -> y:float ->  unit = "scrollTo" [@@bs.send.pipe: ('own) _Window_like] 
    external setInterval : window:('own) _Window_like ->  (('own) _Window_like, int, ('a894*(int Js.undefined*('a895)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : window:('own) _Window_like ->  (('own) _Window_like, int, ('a896*(int Js.undefined*('a897)))) variadic_func = "setTimeout" [@@bs.get]
    external trap :  unit = "trap" [@@bs.send.pipe: ('own) _Window_like] 
    external webdriverCallback : ?result:'a898 Js.undefined ->  unit = "webdriverCallback" [@@bs.send.pipe: ('own) _Window_like] 
    external webdriverTimeout :  unit = "webdriverTimeout" [@@bs.send.pipe: ('own) _Window_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Window) in
      (return:(_) _Window_like)
    
    let cast_to_Dom_window x =
      let return = Obj.magic (x:_Window) in
      (return:Dom.window)
    
    let cast_from_Dom_window x =
      let return = Obj.magic (x:Dom.window) in
      (return:_Window)
    
    let clearInterval ?handle window =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle window
    
    let clearTimeout ?handle window =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle window
    
    let fetch ~input ~init window =
      let conv_input = function
        | `Request (x: (_) _Request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init window in
      return
    
    let fetch ~input ?init window =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init window
    
    let getComputedStyle ~elt ?pseudoElt window =
      let conv_pseudoElt = Js_undefined.from_opt in
      let pseudoElt = conv_pseudoElt pseudoElt in
      getComputedStyle ~elt ~pseudoElt window
    
    let setInterval ~handler ~timeout ~arguments window =
      let func = setInterval window in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func window args
    
    let setInterval ~handler ~timeout ~arguments window =
      let conv_handler = function
        | `Callback (x: ('a899, 'a900, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments window in
      return
    
    let setInterval ~handler ?timeout ~arguments window =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments window
    
    let setTimeout ~handler ~timeout ~arguments window =
      let func = setTimeout window in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func window args
    
    let setTimeout ~handler ~timeout ~arguments window =
      let conv_handler = function
        | `Callback (x: ('a901, 'a902, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments window in
      return
    
    let setTimeout ~handler ?timeout ~arguments window =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments window
    
    let webdriverCallback ?result window =
      let conv_result = Js_undefined.from_opt in
      let result = conv_result result in
      webdriverCallback ~result window
    
end
 module WorkerGlobalScope = struct
    include GlobalScope
    
    external crypto : workerGlobalScope:('own) _WorkerGlobalScope_like ->  _Crypto = "crypto" [@@bs.get] 
    external self : workerGlobalScope:('own) _WorkerGlobalScope_like ->  _WorkerGlobalScope = "self" [@@bs.get] 
    external location : workerGlobalScope:('own) _WorkerGlobalScope_like ->  _WorkerLocation = "location" [@@bs.get] 
    external onerror : workerGlobalScope:('own) _WorkerGlobalScope_like ->  ('a903 -> string -> int -> int -> 'a904 -> 'a905 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : workerGlobalScope:('own) _WorkerGlobalScope_like -> onerror:('a906 -> string -> int -> int -> 'a907 -> 'a908 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external navigator : workerGlobalScope:('own) _WorkerGlobalScope_like ->  _WorkerNavigator = "navigator" [@@bs.get] 
    external atob : atob:string ->  string = "atob" [@@bs.send.pipe: ('own) _WorkerGlobalScope_like] 
    external btoa : btoa:string ->  string = "btoa" [@@bs.send.pipe: ('own) _WorkerGlobalScope_like] 
    external clearInterval : ?handle:int Js.undefined ->  unit = "clearInterval" [@@bs.send.pipe: ('own) _WorkerGlobalScope_like] 
    external clearTimeout : ?handle:int Js.undefined ->  unit = "clearTimeout" [@@bs.send.pipe: ('own) _WorkerGlobalScope_like] 
    external fetch : input:'a909 -> ?init:(_) _RequestInit_like Js.undefined ->  _Response Js.Promise.t = "fetch" [@@bs.send.pipe: ('own) _WorkerGlobalScope_like] 
    external importScripts : workerGlobalScope:('own) _WorkerGlobalScope_like ->  (('own) _WorkerGlobalScope_like, unit, (string)) variadic_func = "importScripts" [@@bs.get]
    external setInterval : workerGlobalScope:('own) _WorkerGlobalScope_like ->  (('own) _WorkerGlobalScope_like, int, ('a910*(int Js.undefined*('a911)))) variadic_func = "setInterval" [@@bs.get]
    external setTimeout : workerGlobalScope:('own) _WorkerGlobalScope_like ->  (('own) _WorkerGlobalScope_like, int, ('a912*(int Js.undefined*('a913)))) variadic_func = "setTimeout" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_WorkerGlobalScope) in
      (return:(_) _WorkerGlobalScope_like)
    
    let clearInterval ?handle workerGlobalScope =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearInterval ~handle workerGlobalScope
    
    let clearTimeout ?handle workerGlobalScope =
      let conv_handle = Js_undefined.from_opt in
      let handle = conv_handle handle in
      clearTimeout ~handle workerGlobalScope
    
    let fetch ~input ~init workerGlobalScope =
      let conv_input = function
        | `Request (x: (_) _Request_like) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let input = conv_input input in
      let return = fetch ~input ~init workerGlobalScope in
      return
    
    let fetch ~input ?init workerGlobalScope =
      let conv_init = Js_undefined.from_opt in
      let init = conv_init init in
      fetch ~input ~init workerGlobalScope
    
    let importScripts ~urls workerGlobalScope =
      let func = importScripts workerGlobalScope in
      let args = to_arg urls in
      apply func workerGlobalScope args
    
    let setInterval ~handler ~timeout ~arguments workerGlobalScope =
      let func = setInterval workerGlobalScope in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func workerGlobalScope args
    
    let setInterval ~handler ~timeout ~arguments workerGlobalScope =
      let conv_handler = function
        | `Callback (x: ('a914, 'a915, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setInterval ~handler ~timeout ~arguments workerGlobalScope in
      return
    
    let setInterval ~handler ?timeout ~arguments workerGlobalScope =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setInterval ~handler ~timeout ~arguments workerGlobalScope
    
    let setTimeout ~handler ~timeout ~arguments workerGlobalScope =
      let func = setTimeout workerGlobalScope in
      let args = to_arg arguments in
      let args = unsafe_add args timeout in
      let args = unsafe_add args handler in
      apply func workerGlobalScope args
    
    let setTimeout ~handler ~timeout ~arguments workerGlobalScope =
      let conv_handler = function
        | `Callback (x: ('a916, 'a917, _) variadic_callback0) -> Obj.magic x
        | `String (x: string) -> Obj.magic x
         in
      let handler = conv_handler handler in
      let return = setTimeout ~handler ~timeout ~arguments workerGlobalScope in
      return
    
    let setTimeout ~handler ?timeout ~arguments workerGlobalScope =
      let conv_timeout = Js_undefined.from_opt in
      let timeout = conv_timeout timeout in
      setTimeout ~handler ~timeout ~arguments workerGlobalScope
    
end
 module WorkletGlobalScope = struct
    include GlobalScope
    
    
    
    let downcast x =
      let return = Obj.magic (x:_WorkletGlobalScope) in
      (return:(_) _WorkletGlobalScope_like)
    
end
 module ExtendableMessageEventInit = struct
    include ExtendableEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?data:'a918 -> ?origin:string -> ?lastEventId:string -> unit ->  _ExtendableMessageEventInit = "" [@@bs.obj]
    external data : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like ->  'a919 = "data" [@@bs.get] 
    external setData : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like -> data:'a920 ->  unit = "data" [@@bs.set]
    external origin : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like ->  string = "origin" [@@bs.get] 
    external setOrigin : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like -> origin:string ->  unit = "origin" [@@bs.set]
    external lastEventId : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like ->  string = "lastEventId" [@@bs.get] 
    external setLastEventId : extendableMessageEventInit:('own) _ExtendableMessageEventInit_like -> lastEventId:string ->  unit = "lastEventId" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ExtendableMessageEventInit) in
      (return:(_) _ExtendableMessageEventInit_like)
    
end
 module EventModifierInit = struct
    include UIEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) _Window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> unit ->  _EventModifierInit = "" [@@bs.obj]
    external ctrlKey : eventModifierInit:('own) _EventModifierInit_like ->  bool = "ctrlKey" [@@bs.get] 
    external setCtrlKey : eventModifierInit:('own) _EventModifierInit_like -> ctrlKey:Js.boolean ->  unit = "ctrlKey" [@@bs.set]
    external shiftKey : eventModifierInit:('own) _EventModifierInit_like ->  bool = "shiftKey" [@@bs.get] 
    external setShiftKey : eventModifierInit:('own) _EventModifierInit_like -> shiftKey:Js.boolean ->  unit = "shiftKey" [@@bs.set]
    external altKey : eventModifierInit:('own) _EventModifierInit_like ->  bool = "altKey" [@@bs.get] 
    external setAltKey : eventModifierInit:('own) _EventModifierInit_like -> altKey:Js.boolean ->  unit = "altKey" [@@bs.set]
    external metaKey : eventModifierInit:('own) _EventModifierInit_like ->  bool = "metaKey" [@@bs.get] 
    external setMetaKey : eventModifierInit:('own) _EventModifierInit_like -> metaKey:Js.boolean ->  unit = "metaKey" [@@bs.set]
    external keyModifierStateAltGraph : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateAltGraph" [@@bs.get] 
    external setKeyModifierStateAltGraph : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateAltGraph:Js.boolean ->  unit = "keyModifierStateAltGraph" [@@bs.set]
    external keyModifierStateCapsLock : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateCapsLock" [@@bs.get] 
    external setKeyModifierStateCapsLock : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateCapsLock:Js.boolean ->  unit = "keyModifierStateCapsLock" [@@bs.set]
    external keyModifierStateFn : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateFn" [@@bs.get] 
    external setKeyModifierStateFn : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateFn:Js.boolean ->  unit = "keyModifierStateFn" [@@bs.set]
    external keyModifierStateFnLock : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateFnLock" [@@bs.get] 
    external setKeyModifierStateFnLock : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateFnLock:Js.boolean ->  unit = "keyModifierStateFnLock" [@@bs.set]
    external keyModifierStateHyper : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateHyper" [@@bs.get] 
    external setKeyModifierStateHyper : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateHyper:Js.boolean ->  unit = "keyModifierStateHyper" [@@bs.set]
    external keyModifierStateNumLock : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateNumLock" [@@bs.get] 
    external setKeyModifierStateNumLock : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateNumLock:Js.boolean ->  unit = "keyModifierStateNumLock" [@@bs.set]
    external keyModifierStateOS : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateOS" [@@bs.get] 
    external setKeyModifierStateOS : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateOS:Js.boolean ->  unit = "keyModifierStateOS" [@@bs.set]
    external keyModifierStateScrollLock : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateScrollLock" [@@bs.get] 
    external setKeyModifierStateScrollLock : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateScrollLock:Js.boolean ->  unit = "keyModifierStateScrollLock" [@@bs.set]
    external keyModifierStateSuper : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateSuper" [@@bs.get] 
    external setKeyModifierStateSuper : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateSuper:Js.boolean ->  unit = "keyModifierStateSuper" [@@bs.set]
    external keyModifierStateSymbol : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateSymbol" [@@bs.get] 
    external setKeyModifierStateSymbol : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateSymbol:Js.boolean ->  unit = "keyModifierStateSymbol" [@@bs.set]
    external keyModifierStateSymbolLock : eventModifierInit:('own) _EventModifierInit_like ->  bool = "keyModifierStateSymbolLock" [@@bs.get] 
    external setKeyModifierStateSymbolLock : eventModifierInit:('own) _EventModifierInit_like -> keyModifierStateSymbolLock:Js.boolean ->  unit = "keyModifierStateSymbolLock" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_EventModifierInit) in
      (return:(_) _EventModifierInit_like)
    
end
 module FocusEventInit = struct
    include UIEventInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) _Window_like Js.null -> ?detail:int -> ?relatedTarget:(_) _EventTarget_like Js.null -> unit ->  _FocusEventInit = "" [@@bs.obj]
    external relatedTarget : focusEventInit:('own) _FocusEventInit_like ->  _EventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external setRelatedTarget : focusEventInit:('own) _FocusEventInit_like -> relatedTarget:_EventTarget Js.null ->  unit = "relatedTarget" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_FocusEventInit) in
      (return:(_) _FocusEventInit_like)
    
end
 module Comment = struct
    include CharacterData
    
    
    
    let downcast x =
      let return = Obj.magic (x:_Comment) in
      (return:(_) _Comment_like)
    
    let cast_to_Dom_comment x =
      let return = Obj.magic (x:_Comment) in
      (return:Dom.comment)
    
    let cast_from_Dom_comment x =
      let return = Obj.magic (x:Dom.comment) in
      (return:_Comment)
    
end
 module HTMLElement = struct
    include Element
    
    external style : hTMLElement:('own) _HTMLElement_like ->  _CSSStyleDeclaration = "style" [@@bs.get] 
    external oncopy : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a921 [@bs]) option = "oncopy" [@@bs.get] [@@bs.return null_to_opt]
    external setOncopy : hTMLElement:('own) _HTMLElement_like -> oncopy:(_Event -> 'a922 [@bs]) Js.null ->  unit = "oncopy" [@@bs.set]
    external oncut : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a923 [@bs]) option = "oncut" [@@bs.get] [@@bs.return null_to_opt]
    external setOncut : hTMLElement:('own) _HTMLElement_like -> oncut:(_Event -> 'a924 [@bs]) Js.null ->  unit = "oncut" [@@bs.set]
    external onpaste : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a925 [@bs]) option = "onpaste" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpaste : hTMLElement:('own) _HTMLElement_like -> onpaste:(_Event -> 'a926 [@bs]) Js.null ->  unit = "onpaste" [@@bs.set]
    external onabort : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a927 [@bs]) option = "onabort" [@@bs.get] [@@bs.return null_to_opt]
    external setOnabort : hTMLElement:('own) _HTMLElement_like -> onabort:(_Event -> 'a928 [@bs]) Js.null ->  unit = "onabort" [@@bs.set]
    external onblur : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a929 [@bs]) option = "onblur" [@@bs.get] [@@bs.return null_to_opt]
    external setOnblur : hTMLElement:('own) _HTMLElement_like -> onblur:(_Event -> 'a930 [@bs]) Js.null ->  unit = "onblur" [@@bs.set]
    external oncancel : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a931 [@bs]) option = "oncancel" [@@bs.get] [@@bs.return null_to_opt]
    external setOncancel : hTMLElement:('own) _HTMLElement_like -> oncancel:(_Event -> 'a932 [@bs]) Js.null ->  unit = "oncancel" [@@bs.set]
    external oncanplay : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a933 [@bs]) option = "oncanplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplay : hTMLElement:('own) _HTMLElement_like -> oncanplay:(_Event -> 'a934 [@bs]) Js.null ->  unit = "oncanplay" [@@bs.set]
    external oncanplaythrough : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a935 [@bs]) option = "oncanplaythrough" [@@bs.get] [@@bs.return null_to_opt]
    external setOncanplaythrough : hTMLElement:('own) _HTMLElement_like -> oncanplaythrough:(_Event -> 'a936 [@bs]) Js.null ->  unit = "oncanplaythrough" [@@bs.set]
    external onchange : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a937 [@bs]) option = "onchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnchange : hTMLElement:('own) _HTMLElement_like -> onchange:(_Event -> 'a938 [@bs]) Js.null ->  unit = "onchange" [@@bs.set]
    external onclick : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a939 [@bs]) option = "onclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclick : hTMLElement:('own) _HTMLElement_like -> onclick:(_Event -> 'a940 [@bs]) Js.null ->  unit = "onclick" [@@bs.set]
    external onclose : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a941 [@bs]) option = "onclose" [@@bs.get] [@@bs.return null_to_opt]
    external setOnclose : hTMLElement:('own) _HTMLElement_like -> onclose:(_Event -> 'a942 [@bs]) Js.null ->  unit = "onclose" [@@bs.set]
    external oncontextmenu : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a943 [@bs]) option = "oncontextmenu" [@@bs.get] [@@bs.return null_to_opt]
    external setOncontextmenu : hTMLElement:('own) _HTMLElement_like -> oncontextmenu:(_Event -> 'a944 [@bs]) Js.null ->  unit = "oncontextmenu" [@@bs.set]
    external oncuechange : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a945 [@bs]) option = "oncuechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOncuechange : hTMLElement:('own) _HTMLElement_like -> oncuechange:(_Event -> 'a946 [@bs]) Js.null ->  unit = "oncuechange" [@@bs.set]
    external ondblclick : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a947 [@bs]) option = "ondblclick" [@@bs.get] [@@bs.return null_to_opt]
    external setOndblclick : hTMLElement:('own) _HTMLElement_like -> ondblclick:(_Event -> 'a948 [@bs]) Js.null ->  unit = "ondblclick" [@@bs.set]
    external ondrag : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a949 [@bs]) option = "ondrag" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrag : hTMLElement:('own) _HTMLElement_like -> ondrag:(_Event -> 'a950 [@bs]) Js.null ->  unit = "ondrag" [@@bs.set]
    external ondragend : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a951 [@bs]) option = "ondragend" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragend : hTMLElement:('own) _HTMLElement_like -> ondragend:(_Event -> 'a952 [@bs]) Js.null ->  unit = "ondragend" [@@bs.set]
    external ondragenter : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a953 [@bs]) option = "ondragenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragenter : hTMLElement:('own) _HTMLElement_like -> ondragenter:(_Event -> 'a954 [@bs]) Js.null ->  unit = "ondragenter" [@@bs.set]
    external ondragexit : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a955 [@bs]) option = "ondragexit" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragexit : hTMLElement:('own) _HTMLElement_like -> ondragexit:(_Event -> 'a956 [@bs]) Js.null ->  unit = "ondragexit" [@@bs.set]
    external ondragleave : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a957 [@bs]) option = "ondragleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragleave : hTMLElement:('own) _HTMLElement_like -> ondragleave:(_Event -> 'a958 [@bs]) Js.null ->  unit = "ondragleave" [@@bs.set]
    external ondragover : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a959 [@bs]) option = "ondragover" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragover : hTMLElement:('own) _HTMLElement_like -> ondragover:(_Event -> 'a960 [@bs]) Js.null ->  unit = "ondragover" [@@bs.set]
    external ondragstart : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a961 [@bs]) option = "ondragstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOndragstart : hTMLElement:('own) _HTMLElement_like -> ondragstart:(_Event -> 'a962 [@bs]) Js.null ->  unit = "ondragstart" [@@bs.set]
    external ondrop : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a963 [@bs]) option = "ondrop" [@@bs.get] [@@bs.return null_to_opt]
    external setOndrop : hTMLElement:('own) _HTMLElement_like -> ondrop:(_Event -> 'a964 [@bs]) Js.null ->  unit = "ondrop" [@@bs.set]
    external ondurationchange : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a965 [@bs]) option = "ondurationchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOndurationchange : hTMLElement:('own) _HTMLElement_like -> ondurationchange:(_Event -> 'a966 [@bs]) Js.null ->  unit = "ondurationchange" [@@bs.set]
    external onemptied : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a967 [@bs]) option = "onemptied" [@@bs.get] [@@bs.return null_to_opt]
    external setOnemptied : hTMLElement:('own) _HTMLElement_like -> onemptied:(_Event -> 'a968 [@bs]) Js.null ->  unit = "onemptied" [@@bs.set]
    external onended : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a969 [@bs]) option = "onended" [@@bs.get] [@@bs.return null_to_opt]
    external setOnended : hTMLElement:('own) _HTMLElement_like -> onended:(_Event -> 'a970 [@bs]) Js.null ->  unit = "onended" [@@bs.set]
    external onerror : hTMLElement:('own) _HTMLElement_like ->  ('a971 -> string -> int -> int -> 'a972 -> 'a973 [@bs]) option = "onerror" [@@bs.get] [@@bs.return null_to_opt]
    external setOnerror : hTMLElement:('own) _HTMLElement_like -> onerror:('a974 -> string -> int -> int -> 'a975 -> 'a976 [@bs]) Js.null ->  unit = "onerror" [@@bs.set]
    external onfocus : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a977 [@bs]) option = "onfocus" [@@bs.get] [@@bs.return null_to_opt]
    external setOnfocus : hTMLElement:('own) _HTMLElement_like -> onfocus:(_Event -> 'a978 [@bs]) Js.null ->  unit = "onfocus" [@@bs.set]
    external oninput : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a979 [@bs]) option = "oninput" [@@bs.get] [@@bs.return null_to_opt]
    external setOninput : hTMLElement:('own) _HTMLElement_like -> oninput:(_Event -> 'a980 [@bs]) Js.null ->  unit = "oninput" [@@bs.set]
    external oninvalid : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a981 [@bs]) option = "oninvalid" [@@bs.get] [@@bs.return null_to_opt]
    external setOninvalid : hTMLElement:('own) _HTMLElement_like -> oninvalid:(_Event -> 'a982 [@bs]) Js.null ->  unit = "oninvalid" [@@bs.set]
    external onkeydown : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a983 [@bs]) option = "onkeydown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeydown : hTMLElement:('own) _HTMLElement_like -> onkeydown:(_Event -> 'a984 [@bs]) Js.null ->  unit = "onkeydown" [@@bs.set]
    external onkeypress : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a985 [@bs]) option = "onkeypress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeypress : hTMLElement:('own) _HTMLElement_like -> onkeypress:(_Event -> 'a986 [@bs]) Js.null ->  unit = "onkeypress" [@@bs.set]
    external onkeyup : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a987 [@bs]) option = "onkeyup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnkeyup : hTMLElement:('own) _HTMLElement_like -> onkeyup:(_Event -> 'a988 [@bs]) Js.null ->  unit = "onkeyup" [@@bs.set]
    external onload : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a989 [@bs]) option = "onload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnload : hTMLElement:('own) _HTMLElement_like -> onload:(_Event -> 'a990 [@bs]) Js.null ->  unit = "onload" [@@bs.set]
    external onloadeddata : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a991 [@bs]) option = "onloadeddata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadeddata : hTMLElement:('own) _HTMLElement_like -> onloadeddata:(_Event -> 'a992 [@bs]) Js.null ->  unit = "onloadeddata" [@@bs.set]
    external onloadedmetadata : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a993 [@bs]) option = "onloadedmetadata" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadedmetadata : hTMLElement:('own) _HTMLElement_like -> onloadedmetadata:(_Event -> 'a994 [@bs]) Js.null ->  unit = "onloadedmetadata" [@@bs.set]
    external onloadstart : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a995 [@bs]) option = "onloadstart" [@@bs.get] [@@bs.return null_to_opt]
    external setOnloadstart : hTMLElement:('own) _HTMLElement_like -> onloadstart:(_Event -> 'a996 [@bs]) Js.null ->  unit = "onloadstart" [@@bs.set]
    external onmousedown : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a997 [@bs]) option = "onmousedown" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousedown : hTMLElement:('own) _HTMLElement_like -> onmousedown:(_Event -> 'a998 [@bs]) Js.null ->  unit = "onmousedown" [@@bs.set]
    external onmouseenter : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a999 [@bs]) option = "onmouseenter" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseenter : hTMLElement:('own) _HTMLElement_like -> onmouseenter:(_Event -> 'a1000 [@bs]) Js.null ->  unit = "onmouseenter" [@@bs.set]
    external onmouseleave : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1001 [@bs]) option = "onmouseleave" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseleave : hTMLElement:('own) _HTMLElement_like -> onmouseleave:(_Event -> 'a1002 [@bs]) Js.null ->  unit = "onmouseleave" [@@bs.set]
    external onmousemove : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1003 [@bs]) option = "onmousemove" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmousemove : hTMLElement:('own) _HTMLElement_like -> onmousemove:(_Event -> 'a1004 [@bs]) Js.null ->  unit = "onmousemove" [@@bs.set]
    external onmouseout : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1005 [@bs]) option = "onmouseout" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseout : hTMLElement:('own) _HTMLElement_like -> onmouseout:(_Event -> 'a1006 [@bs]) Js.null ->  unit = "onmouseout" [@@bs.set]
    external onmouseover : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1007 [@bs]) option = "onmouseover" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseover : hTMLElement:('own) _HTMLElement_like -> onmouseover:(_Event -> 'a1008 [@bs]) Js.null ->  unit = "onmouseover" [@@bs.set]
    external onmouseup : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1009 [@bs]) option = "onmouseup" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmouseup : hTMLElement:('own) _HTMLElement_like -> onmouseup:(_Event -> 'a1010 [@bs]) Js.null ->  unit = "onmouseup" [@@bs.set]
    external onwheel : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1011 [@bs]) option = "onwheel" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwheel : hTMLElement:('own) _HTMLElement_like -> onwheel:(_Event -> 'a1012 [@bs]) Js.null ->  unit = "onwheel" [@@bs.set]
    external onpause : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1013 [@bs]) option = "onpause" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpause : hTMLElement:('own) _HTMLElement_like -> onpause:(_Event -> 'a1014 [@bs]) Js.null ->  unit = "onpause" [@@bs.set]
    external onplay : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1015 [@bs]) option = "onplay" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplay : hTMLElement:('own) _HTMLElement_like -> onplay:(_Event -> 'a1016 [@bs]) Js.null ->  unit = "onplay" [@@bs.set]
    external onplaying : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1017 [@bs]) option = "onplaying" [@@bs.get] [@@bs.return null_to_opt]
    external setOnplaying : hTMLElement:('own) _HTMLElement_like -> onplaying:(_Event -> 'a1018 [@bs]) Js.null ->  unit = "onplaying" [@@bs.set]
    external onprogress : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1019 [@bs]) option = "onprogress" [@@bs.get] [@@bs.return null_to_opt]
    external setOnprogress : hTMLElement:('own) _HTMLElement_like -> onprogress:(_Event -> 'a1020 [@bs]) Js.null ->  unit = "onprogress" [@@bs.set]
    external onratechange : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1021 [@bs]) option = "onratechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnratechange : hTMLElement:('own) _HTMLElement_like -> onratechange:(_Event -> 'a1022 [@bs]) Js.null ->  unit = "onratechange" [@@bs.set]
    external onreset : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1023 [@bs]) option = "onreset" [@@bs.get] [@@bs.return null_to_opt]
    external setOnreset : hTMLElement:('own) _HTMLElement_like -> onreset:(_Event -> 'a1024 [@bs]) Js.null ->  unit = "onreset" [@@bs.set]
    external onresize : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1025 [@bs]) option = "onresize" [@@bs.get] [@@bs.return null_to_opt]
    external setOnresize : hTMLElement:('own) _HTMLElement_like -> onresize:(_Event -> 'a1026 [@bs]) Js.null ->  unit = "onresize" [@@bs.set]
    external onscroll : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1027 [@bs]) option = "onscroll" [@@bs.get] [@@bs.return null_to_opt]
    external setOnscroll : hTMLElement:('own) _HTMLElement_like -> onscroll:(_Event -> 'a1028 [@bs]) Js.null ->  unit = "onscroll" [@@bs.set]
    external onseeked : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1029 [@bs]) option = "onseeked" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeked : hTMLElement:('own) _HTMLElement_like -> onseeked:(_Event -> 'a1030 [@bs]) Js.null ->  unit = "onseeked" [@@bs.set]
    external onseeking : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1031 [@bs]) option = "onseeking" [@@bs.get] [@@bs.return null_to_opt]
    external setOnseeking : hTMLElement:('own) _HTMLElement_like -> onseeking:(_Event -> 'a1032 [@bs]) Js.null ->  unit = "onseeking" [@@bs.set]
    external onselect : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1033 [@bs]) option = "onselect" [@@bs.get] [@@bs.return null_to_opt]
    external setOnselect : hTMLElement:('own) _HTMLElement_like -> onselect:(_Event -> 'a1034 [@bs]) Js.null ->  unit = "onselect" [@@bs.set]
    external onshow : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1035 [@bs]) option = "onshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnshow : hTMLElement:('own) _HTMLElement_like -> onshow:(_Event -> 'a1036 [@bs]) Js.null ->  unit = "onshow" [@@bs.set]
    external onstalled : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1037 [@bs]) option = "onstalled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstalled : hTMLElement:('own) _HTMLElement_like -> onstalled:(_Event -> 'a1038 [@bs]) Js.null ->  unit = "onstalled" [@@bs.set]
    external onsubmit : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1039 [@bs]) option = "onsubmit" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsubmit : hTMLElement:('own) _HTMLElement_like -> onsubmit:(_Event -> 'a1040 [@bs]) Js.null ->  unit = "onsubmit" [@@bs.set]
    external onsuspend : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1041 [@bs]) option = "onsuspend" [@@bs.get] [@@bs.return null_to_opt]
    external setOnsuspend : hTMLElement:('own) _HTMLElement_like -> onsuspend:(_Event -> 'a1042 [@bs]) Js.null ->  unit = "onsuspend" [@@bs.set]
    external ontimeupdate : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1043 [@bs]) option = "ontimeupdate" [@@bs.get] [@@bs.return null_to_opt]
    external setOntimeupdate : hTMLElement:('own) _HTMLElement_like -> ontimeupdate:(_Event -> 'a1044 [@bs]) Js.null ->  unit = "ontimeupdate" [@@bs.set]
    external ontoggle : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1045 [@bs]) option = "ontoggle" [@@bs.get] [@@bs.return null_to_opt]
    external setOntoggle : hTMLElement:('own) _HTMLElement_like -> ontoggle:(_Event -> 'a1046 [@bs]) Js.null ->  unit = "ontoggle" [@@bs.set]
    external onvolumechange : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1047 [@bs]) option = "onvolumechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnvolumechange : hTMLElement:('own) _HTMLElement_like -> onvolumechange:(_Event -> 'a1048 [@bs]) Js.null ->  unit = "onvolumechange" [@@bs.set]
    external onwaiting : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1049 [@bs]) option = "onwaiting" [@@bs.get] [@@bs.return null_to_opt]
    external setOnwaiting : hTMLElement:('own) _HTMLElement_like -> onwaiting:(_Event -> 'a1050 [@bs]) Js.null ->  unit = "onwaiting" [@@bs.set]
    external ontransitionend : hTMLElement:('own) _HTMLElement_like ->  (_Event -> 'a1051 [@bs]) option = "ontransitionend" [@@bs.get] [@@bs.return null_to_opt]
    external setOntransitionend : hTMLElement:('own) _HTMLElement_like -> ontransitionend:(_Event -> 'a1052 [@bs]) Js.null ->  unit = "ontransitionend" [@@bs.set]
    external title : hTMLElement:('own) _HTMLElement_like ->  string = "title" [@@bs.get] 
    external setTitle : hTMLElement:('own) _HTMLElement_like -> title:string ->  unit = "title" [@@bs.set]
    external lang : hTMLElement:('own) _HTMLElement_like ->  string = "lang" [@@bs.get] 
    external setLang : hTMLElement:('own) _HTMLElement_like -> lang:string ->  unit = "lang" [@@bs.set]
    external dataset : hTMLElement:('own) _HTMLElement_like ->  _DOMStringMap = "dataset" [@@bs.get] 
    external hidden : hTMLElement:('own) _HTMLElement_like ->  bool = "hidden" [@@bs.get] 
    external setHidden : hTMLElement:('own) _HTMLElement_like -> hidden:Js.boolean ->  unit = "hidden" [@@bs.set]
    external offsetParent : hTMLElement:('own) _HTMLElement_like ->  _Element option = "offsetParent" [@@bs.get] [@@bs.return null_to_opt]
    external offsetTop : hTMLElement:('own) _HTMLElement_like ->  int = "offsetTop" [@@bs.get] 
    external offsetLeft : hTMLElement:('own) _HTMLElement_like ->  int = "offsetLeft" [@@bs.get] 
    external offsetWidth : hTMLElement:('own) _HTMLElement_like ->  int = "offsetWidth" [@@bs.get] 
    external offsetHeight : hTMLElement:('own) _HTMLElement_like ->  int = "offsetHeight" [@@bs.get] 
    external blur :  unit = "blur" [@@bs.send.pipe: ('own) _HTMLElement_like] 
    external click :  unit = "click" [@@bs.send.pipe: ('own) _HTMLElement_like] 
    external focus :  unit = "focus" [@@bs.send.pipe: ('own) _HTMLElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLElement) in
      (return:(_) _HTMLElement_like)
    
    let cast_to_Dom_htmlElement x =
      let return = Obj.magic (x:_HTMLElement) in
      (return:Dom.htmlElement)
    
    let cast_from_Dom_htmlElement x =
      let return = Obj.magic (x:Dom.htmlElement) in
      (return:_HTMLElement)
    
end
 module CSSSupportsRule = struct
    include CSSConditionRule
    
    
    
    let downcast x =
      let return = Obj.magic (x:_CSSSupportsRule) in
      (return:(_) _CSSSupportsRule_like)
    
end
 module PaintWorkletGlobalScope = struct
    include WorkletGlobalScope
    
    external registerPaint : name:string -> paintCtor:(unit -> unit [@bs]) ->  unit = "registerPaint" [@@bs.send.pipe: ('own) _PaintWorkletGlobalScope_like] 
    
    let downcast x =
      let return = Obj.magic (x:_PaintWorkletGlobalScope) in
      (return:(_) _PaintWorkletGlobalScope_like)
    
end
 module ServiceWorkerGlobalScope = struct
    include WorkerGlobalScope
    
    external onmessage : serviceWorkerGlobalScope:('own) _ServiceWorkerGlobalScope_like ->  (_Event -> 'a1053 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : serviceWorkerGlobalScope:('own) _ServiceWorkerGlobalScope_like -> onmessage:(_Event -> 'a1054 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_ServiceWorkerGlobalScope) in
      (return:(_) _ServiceWorkerGlobalScope_like)
    
end
 module DedicatedWorkerGlobalScope = struct
    include WorkerGlobalScope
    
    external onmessage : dedicatedWorkerGlobalScope:('own) _DedicatedWorkerGlobalScope_like ->  (_Event -> 'a1055 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : dedicatedWorkerGlobalScope:('own) _DedicatedWorkerGlobalScope_like -> onmessage:(_Event -> 'a1056 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external close :  unit = "close" [@@bs.send.pipe: ('own) _DedicatedWorkerGlobalScope_like] 
    external postMessage : message:'a1057 ->  unit = "postMessage" [@@bs.send.pipe: ('own) _DedicatedWorkerGlobalScope_like] 
    
    let downcast x =
      let return = Obj.magic (x:_DedicatedWorkerGlobalScope) in
      (return:(_) _DedicatedWorkerGlobalScope_like)
    
end
 module CSSMediaRule = struct
    include CSSConditionRule
    
    external media : cSSMediaRule:('own) _CSSMediaRule_like ->  _MediaList = "media" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_CSSMediaRule) in
      (return:(_) _CSSMediaRule_like)
    
end
 module ProcessingInstruction = struct
    include CharacterData
    
    external target : processingInstruction:('own) _ProcessingInstruction_like ->  string = "target" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_ProcessingInstruction) in
      (return:(_) _ProcessingInstruction_like)
    
    let cast_to_Dom_processingInstruction x =
      let return = Obj.magic (x:_ProcessingInstruction) in
      (return:Dom.processingInstruction)
    
    let cast_from_Dom_processingInstruction x =
      let return = Obj.magic (x:Dom.processingInstruction) in
      (return:_ProcessingInstruction)
    
end
 module XMLDocument = struct
    include Document
    
    
    
    let downcast x =
      let return = Obj.magic (x:_XMLDocument) in
      (return:(_) _XMLDocument_like)
    
    let cast_to_Dom_xmlDocument x =
      let return = Obj.magic (x:_XMLDocument) in
      (return:Dom.xmlDocument)
    
    let cast_from_Dom_xmlDocument x =
      let return = Obj.magic (x:Dom.xmlDocument) in
      (return:_XMLDocument)
    
end
 module TestWorkletGlobalScope = struct
    include WorkletGlobalScope
    
    external registerKeyValue : key:string -> value:string ->  unit = "registerKeyValue" [@@bs.send.pipe: ('own) _TestWorkletGlobalScope_like] 
    
    let downcast x =
      let return = Obj.magic (x:_TestWorkletGlobalScope) in
      (return:(_) _TestWorkletGlobalScope_like)
    
end
 module SVGElement = struct
    include Element
    
    
    
    let downcast x =
      let return = Obj.magic (x:_SVGElement) in
      (return:(_) _SVGElement_like)
    
end
 module Text = struct
    include CharacterData
    
    external wholeText : text:('own) _Text_like ->  string = "wholeText" [@@bs.get] 
    external splitText : offset:int ->  _Text = "splitText" [@@bs.send.pipe: ('own) _Text_like] 
    
    let downcast x =
      let return = Obj.magic (x:_Text) in
      (return:(_) _Text_like)
    
    let cast_to_Dom_text x =
      let return = Obj.magic (x:_Text) in
      (return:Dom.text)
    
    let cast_from_Dom_text x =
      let return = Obj.magic (x:Dom.text) in
      (return:_Text)
    
end
 module KeyboardEventInit = struct
    include EventModifierInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) _Window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> ?key:string -> ?code:string -> ?location:int -> ?repeat:Js.boolean -> ?isComposing:Js.boolean -> unit ->  _KeyboardEventInit = "" [@@bs.obj]
    external key : keyboardEventInit:('own) _KeyboardEventInit_like ->  string = "key" [@@bs.get] 
    external setKey : keyboardEventInit:('own) _KeyboardEventInit_like -> key:string ->  unit = "key" [@@bs.set]
    external code : keyboardEventInit:('own) _KeyboardEventInit_like ->  string = "code" [@@bs.get] 
    external setCode : keyboardEventInit:('own) _KeyboardEventInit_like -> code:string ->  unit = "code" [@@bs.set]
    external location : keyboardEventInit:('own) _KeyboardEventInit_like ->  int = "location" [@@bs.get] 
    external setLocation : keyboardEventInit:('own) _KeyboardEventInit_like -> location:int ->  unit = "location" [@@bs.set]
    external repeat : keyboardEventInit:('own) _KeyboardEventInit_like ->  bool = "repeat" [@@bs.get] 
    external setRepeat : keyboardEventInit:('own) _KeyboardEventInit_like -> repeat:Js.boolean ->  unit = "repeat" [@@bs.set]
    external isComposing : keyboardEventInit:('own) _KeyboardEventInit_like ->  bool = "isComposing" [@@bs.get] 
    external setIsComposing : keyboardEventInit:('own) _KeyboardEventInit_like -> isComposing:Js.boolean ->  unit = "isComposing" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_KeyboardEventInit) in
      (return:(_) _KeyboardEventInit_like)
    
end
 module MouseEventInit = struct
    include EventModifierInit
    
    external make : ?bubbles:Js.boolean -> ?cancelable:Js.boolean -> ?view:(_) _Window_like Js.null -> ?detail:int -> ?ctrlKey:Js.boolean -> ?shiftKey:Js.boolean -> ?altKey:Js.boolean -> ?metaKey:Js.boolean -> ?keyModifierStateAltGraph:Js.boolean -> ?keyModifierStateCapsLock:Js.boolean -> ?keyModifierStateFn:Js.boolean -> ?keyModifierStateFnLock:Js.boolean -> ?keyModifierStateHyper:Js.boolean -> ?keyModifierStateNumLock:Js.boolean -> ?keyModifierStateOS:Js.boolean -> ?keyModifierStateScrollLock:Js.boolean -> ?keyModifierStateSuper:Js.boolean -> ?keyModifierStateSymbol:Js.boolean -> ?keyModifierStateSymbolLock:Js.boolean -> ?screenX:int -> ?screenY:int -> ?clientX:int -> ?clientY:int -> ?button:int -> ?relatedTarget:(_) _EventTarget_like Js.null -> unit ->  _MouseEventInit = "" [@@bs.obj]
    external screenX : mouseEventInit:('own) _MouseEventInit_like ->  int = "screenX" [@@bs.get] 
    external setScreenX : mouseEventInit:('own) _MouseEventInit_like -> screenX:int ->  unit = "screenX" [@@bs.set]
    external screenY : mouseEventInit:('own) _MouseEventInit_like ->  int = "screenY" [@@bs.get] 
    external setScreenY : mouseEventInit:('own) _MouseEventInit_like -> screenY:int ->  unit = "screenY" [@@bs.set]
    external clientX : mouseEventInit:('own) _MouseEventInit_like ->  int = "clientX" [@@bs.get] 
    external setClientX : mouseEventInit:('own) _MouseEventInit_like -> clientX:int ->  unit = "clientX" [@@bs.set]
    external clientY : mouseEventInit:('own) _MouseEventInit_like ->  int = "clientY" [@@bs.get] 
    external setClientY : mouseEventInit:('own) _MouseEventInit_like -> clientY:int ->  unit = "clientY" [@@bs.set]
    external button : mouseEventInit:('own) _MouseEventInit_like ->  int = "button" [@@bs.get] 
    external setButton : mouseEventInit:('own) _MouseEventInit_like -> button:int ->  unit = "button" [@@bs.set]
    external relatedTarget : mouseEventInit:('own) _MouseEventInit_like ->  _EventTarget option = "relatedTarget" [@@bs.get] [@@bs.return null_to_opt]
    external setRelatedTarget : mouseEventInit:('own) _MouseEventInit_like -> relatedTarget:_EventTarget Js.null ->  unit = "relatedTarget" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_MouseEventInit) in
      (return:(_) _MouseEventInit_like)
    
end
 module HTMLIFrameElement = struct
    include HTMLElement
    
    external src : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> src:string ->  unit = "src" [@@bs.set]
    external sandbox : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  _DOMTokenList = "sandbox" [@@bs.get] 
    external allowFullscreen : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  bool = "allowFullscreen" [@@bs.get] 
    external setAllowFullscreen : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> allowFullscreen:Js.boolean ->  unit = "allowFullscreen" [@@bs.set]
    external width : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> width:string ->  unit = "width" [@@bs.set]
    external height : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  string = "height" [@@bs.get] 
    external setHeight : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> height:string ->  unit = "height" [@@bs.set]
    external contentDocument : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  _Document option = "contentDocument" [@@bs.get] [@@bs.return null_to_opt]
    external contentWindow : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  _WindowProxy option = "contentWindow" [@@bs.get] [@@bs.return null_to_opt]
    external frameBorder : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  string = "frameBorder" [@@bs.get] 
    external setFrameBorder : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> frameBorder:string ->  unit = "frameBorder" [@@bs.set]
    external mozbrowser : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  bool = "mozbrowser" [@@bs.get] 
    external setMozbrowser : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> mozbrowser:Js.boolean ->  unit = "mozbrowser" [@@bs.set]
    external mozprivatebrowsing : hTMLIFrameElement:('own) _HTMLIFrameElement_like ->  bool = "mozprivatebrowsing" [@@bs.get] 
    external setMozprivatebrowsing : hTMLIFrameElement:('own) _HTMLIFrameElement_like -> mozprivatebrowsing:Js.boolean ->  unit = "mozprivatebrowsing" [@@bs.set]
    external getVisible :  bool = "getVisible" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    external goBack :  unit = "goBack" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    external goForward :  unit = "goForward" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    external reload : ?hardReload:Js.boolean Js.undefined ->  unit = "reload" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    external setVisible : visible:Js.boolean ->  unit = "setVisible" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    external stop :  unit = "stop" [@@bs.send.pipe: ('own) _HTMLIFrameElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLIFrameElement) in
      (return:(_) _HTMLIFrameElement_like)
    
    let reload ?hardReload hTMLIFrameElement =
      let conv_hardReload = Js_undefined.from_opt in
      let hardReload = conv_hardReload hardReload in
      reload ~hardReload hTMLIFrameElement
    
end
 module SVGGraphicsElement = struct
    include SVGElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_SVGGraphicsElement) in
      (return:(_) _SVGGraphicsElement_like)
    
end
 module HTMLScriptElement = struct
    include HTMLElement
    
    external src : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLScriptElement:('own) _HTMLScriptElement_like -> src:string ->  unit = "src" [@@bs.set]
    external type_ : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLScriptElement:('own) _HTMLScriptElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external charset : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "charset" [@@bs.get] 
    external setCharset : hTMLScriptElement:('own) _HTMLScriptElement_like -> charset:string ->  unit = "charset" [@@bs.set]
    external async : hTMLScriptElement:('own) _HTMLScriptElement_like ->  bool = "async" [@@bs.get] 
    external setAsync : hTMLScriptElement:('own) _HTMLScriptElement_like -> async:Js.boolean ->  unit = "async" [@@bs.set]
    external defer : hTMLScriptElement:('own) _HTMLScriptElement_like ->  bool = "defer" [@@bs.get] 
    external setDefer : hTMLScriptElement:('own) _HTMLScriptElement_like -> defer:Js.boolean ->  unit = "defer" [@@bs.set]
    external crossOrigin : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLScriptElement:('own) _HTMLScriptElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external text : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLScriptElement:('own) _HTMLScriptElement_like -> text:string ->  unit = "text" [@@bs.set]
    external integrity : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : hTMLScriptElement:('own) _HTMLScriptElement_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external event : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "event" [@@bs.get] 
    external setEvent : hTMLScriptElement:('own) _HTMLScriptElement_like -> event:string ->  unit = "event" [@@bs.set]
    external htmlFor : hTMLScriptElement:('own) _HTMLScriptElement_like ->  string = "htmlFor" [@@bs.get] 
    external setHtmlFor : hTMLScriptElement:('own) _HTMLScriptElement_like -> htmlFor:string ->  unit = "htmlFor" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLScriptElement) in
      (return:(_) _HTMLScriptElement_like)
    
end
 module HTMLObjectElement = struct
    include HTMLElement
    
    external type_ : hTMLObjectElement:('own) _HTMLObjectElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLObjectElement:('own) _HTMLObjectElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external form : hTMLObjectElement:('own) _HTMLObjectElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external validity : hTMLObjectElement:('own) _HTMLObjectElement_like ->  _ValidityState = "validity" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLObjectElement) in
      (return:(_) _HTMLObjectElement_like)
    
end
 module HTMLMediaElement = struct
    include HTMLElement
    
    external error : hTMLMediaElement:('own) _HTMLMediaElement_like ->  _MediaError option = "error" [@@bs.get] [@@bs.return null_to_opt]
    external src : hTMLMediaElement:('own) _HTMLMediaElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLMediaElement:('own) _HTMLMediaElement_like -> src:string ->  unit = "src" [@@bs.set]
    external currentSrc : hTMLMediaElement:('own) _HTMLMediaElement_like ->  string = "currentSrc" [@@bs.get] 
    external networkState : hTMLMediaElement:('own) _HTMLMediaElement_like ->  int = "networkState" [@@bs.get] 
    external preload : hTMLMediaElement:('own) _HTMLMediaElement_like ->  string = "preload" [@@bs.get] 
    external setPreload : hTMLMediaElement:('own) _HTMLMediaElement_like -> preload:string ->  unit = "preload" [@@bs.set]
    external readyState : hTMLMediaElement:('own) _HTMLMediaElement_like ->  int = "readyState" [@@bs.get] 
    external paused : hTMLMediaElement:('own) _HTMLMediaElement_like ->  bool = "paused" [@@bs.get] 
    external autoplay : hTMLMediaElement:('own) _HTMLMediaElement_like ->  bool = "autoplay" [@@bs.get] 
    external setAutoplay : hTMLMediaElement:('own) _HTMLMediaElement_like -> autoplay:Js.boolean ->  unit = "autoplay" [@@bs.set]
    external canPlayType : type_:string ->  string = "canPlayType" [@@bs.send.pipe: ('own) _HTMLMediaElement_like] 
    external load :  unit = "load" [@@bs.send.pipe: ('own) _HTMLMediaElement_like] 
    external pause :  unit = "pause" [@@bs.send.pipe: ('own) _HTMLMediaElement_like] 
    external play :  unit = "play" [@@bs.send.pipe: ('own) _HTMLMediaElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLMediaElement) in
      (return:(_) _HTMLMediaElement_like)
    
    let _NETWORK_EMPTY  =
      
      0
    
    let _NETWORK_IDLE  =
      
      1
    
    let _NETWORK_LOADING  =
      
      2
    
    let _NETWORK_NO_SOURCE  =
      
      3
    
    let _HAVE_NOTHING  =
      
      0
    
    let _HAVE_METADATA  =
      
      1
    
    let _HAVE_CURRENT_DATA  =
      
      2
    
    let _HAVE_FUTURE_DATA  =
      
      3
    
    let _HAVE_ENOUGH_DATA  =
      
      4
    
end
 module HTMLImageElement = struct
    include HTMLElement
    
    external alt : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "alt" [@@bs.get] 
    external setAlt : hTMLImageElement:('own) _HTMLImageElement_like -> alt:string ->  unit = "alt" [@@bs.set]
    external src : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLImageElement:('own) _HTMLImageElement_like -> src:string ->  unit = "src" [@@bs.set]
    external crossOrigin : hTMLImageElement:('own) _HTMLImageElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLImageElement:('own) _HTMLImageElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external useMap : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "useMap" [@@bs.get] 
    external setUseMap : hTMLImageElement:('own) _HTMLImageElement_like -> useMap:string ->  unit = "useMap" [@@bs.set]
    external isMap : hTMLImageElement:('own) _HTMLImageElement_like ->  bool = "isMap" [@@bs.get] 
    external setIsMap : hTMLImageElement:('own) _HTMLImageElement_like -> isMap:Js.boolean ->  unit = "isMap" [@@bs.set]
    external width : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "width" [@@bs.get] 
    external setWidth : hTMLImageElement:('own) _HTMLImageElement_like -> width:int ->  unit = "width" [@@bs.set]
    external height : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "height" [@@bs.get] 
    external setHeight : hTMLImageElement:('own) _HTMLImageElement_like -> height:int ->  unit = "height" [@@bs.set]
    external naturalWidth : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "naturalWidth" [@@bs.get] 
    external naturalHeight : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "naturalHeight" [@@bs.get] 
    external complete : hTMLImageElement:('own) _HTMLImageElement_like ->  bool = "complete" [@@bs.get] 
    external currentSrc : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "currentSrc" [@@bs.get] 
    external name : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLImageElement:('own) _HTMLImageElement_like -> name:string ->  unit = "name" [@@bs.set]
    external align : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLImageElement:('own) _HTMLImageElement_like -> align:string ->  unit = "align" [@@bs.set]
    external hspace : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "hspace" [@@bs.get] 
    external setHspace : hTMLImageElement:('own) _HTMLImageElement_like -> hspace:int ->  unit = "hspace" [@@bs.set]
    external vspace : hTMLImageElement:('own) _HTMLImageElement_like ->  int = "vspace" [@@bs.get] 
    external setVspace : hTMLImageElement:('own) _HTMLImageElement_like -> vspace:int ->  unit = "vspace" [@@bs.set]
    external longDesc : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "longDesc" [@@bs.get] 
    external setLongDesc : hTMLImageElement:('own) _HTMLImageElement_like -> longDesc:string ->  unit = "longDesc" [@@bs.set]
    external border : hTMLImageElement:('own) _HTMLImageElement_like ->  string = "border" [@@bs.get] 
    external setBorder : hTMLImageElement:('own) _HTMLImageElement_like -> border:string ->  unit = "border" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLImageElement) in
      (return:(_) _HTMLImageElement_like)
    
end
 module HTMLTableColElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableColElement) in
      (return:(_) _HTMLTableColElement_like)
    
end
 module HTMLTitleElement = struct
    include HTMLElement
    
    external text : hTMLTitleElement:('own) _HTMLTitleElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLTitleElement:('own) _HTMLTitleElement_like -> text:string ->  unit = "text" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTitleElement) in
      (return:(_) _HTMLTitleElement_like)
    
end
 module HTMLDataElement = struct
    include HTMLElement
    
    external value : hTMLDataElement:('own) _HTMLDataElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLDataElement:('own) _HTMLDataElement_like -> value:string ->  unit = "value" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDataElement) in
      (return:(_) _HTMLDataElement_like)
    
end
 module HTMLMetaElement = struct
    include HTMLElement
    
    external name : hTMLMetaElement:('own) _HTMLMetaElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLMetaElement:('own) _HTMLMetaElement_like -> name:string ->  unit = "name" [@@bs.set]
    external content : hTMLMetaElement:('own) _HTMLMetaElement_like ->  string = "content" [@@bs.get] 
    external setContent : hTMLMetaElement:('own) _HTMLMetaElement_like -> content:string ->  unit = "content" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLMetaElement) in
      (return:(_) _HTMLMetaElement_like)
    
end
 module HTMLLIElement = struct
    include HTMLElement
    
    external value : hTMLLIElement:('own) _HTMLLIElement_like ->  int = "value" [@@bs.get] 
    external setValue : hTMLLIElement:('own) _HTMLLIElement_like -> value:int ->  unit = "value" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLLIElement) in
      (return:(_) _HTMLLIElement_like)
    
end
 module HTMLOptGroupElement = struct
    include HTMLElement
    
    external disabled : hTMLOptGroupElement:('own) _HTMLOptGroupElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLOptGroupElement:('own) _HTMLOptGroupElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLOptGroupElement) in
      (return:(_) _HTMLOptGroupElement_like)
    
end
 module HTMLFieldSetElement = struct
    include HTMLElement
    
    external disabled : hTMLFieldSetElement:('own) _HTMLFieldSetElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLFieldSetElement:('own) _HTMLFieldSetElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLFieldSetElement:('own) _HTMLFieldSetElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external elements : hTMLFieldSetElement:('own) _HTMLFieldSetElement_like ->  _HTMLCollection = "elements" [@@bs.get] 
    external validity : hTMLFieldSetElement:('own) _HTMLFieldSetElement_like ->  _ValidityState = "validity" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFieldSetElement) in
      (return:(_) _HTMLFieldSetElement_like)
    
end
 module HTMLDListElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDListElement) in
      (return:(_) _HTMLDListElement_like)
    
end
 module HTMLBodyElement = struct
    include HTMLElement
    
    external onafterprint : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1058 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : hTMLBodyElement:('own) _HTMLBodyElement_like -> onafterprint:(_Event -> 'a1059 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1060 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : hTMLBodyElement:('own) _HTMLBodyElement_like -> onbeforeprint:(_Event -> 'a1061 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : hTMLBodyElement:('own) _HTMLBodyElement_like -> onbeforeunload:(_Event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1062 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : hTMLBodyElement:('own) _HTMLBodyElement_like -> onhashchange:(_Event -> 'a1063 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1064 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : hTMLBodyElement:('own) _HTMLBodyElement_like -> onlanguagechange:(_Event -> 'a1065 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1066 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : hTMLBodyElement:('own) _HTMLBodyElement_like -> onmessage:(_Event -> 'a1067 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1068 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : hTMLBodyElement:('own) _HTMLBodyElement_like -> onoffline:(_Event -> 'a1069 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1070 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : hTMLBodyElement:('own) _HTMLBodyElement_like -> ononline:(_Event -> 'a1071 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1072 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : hTMLBodyElement:('own) _HTMLBodyElement_like -> onpagehide:(_Event -> 'a1073 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1074 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : hTMLBodyElement:('own) _HTMLBodyElement_like -> onpageshow:(_Event -> 'a1075 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1076 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : hTMLBodyElement:('own) _HTMLBodyElement_like -> onpopstate:(_Event -> 'a1077 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1078 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : hTMLBodyElement:('own) _HTMLBodyElement_like -> onrejectionhandled:(_Event -> 'a1079 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1080 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : hTMLBodyElement:('own) _HTMLBodyElement_like -> onstorage:(_Event -> 'a1081 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1082 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : hTMLBodyElement:('own) _HTMLBodyElement_like -> onunhandledrejection:(_Event -> 'a1083 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : hTMLBodyElement:('own) _HTMLBodyElement_like ->  (_Event -> 'a1084 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : hTMLBodyElement:('own) _HTMLBodyElement_like -> onunload:(_Event -> 'a1085 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    external text : hTMLBodyElement:('own) _HTMLBodyElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLBodyElement:('own) _HTMLBodyElement_like -> text:string ->  unit = "text" [@@bs.set]
    external bgColor : hTMLBodyElement:('own) _HTMLBodyElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLBodyElement:('own) _HTMLBodyElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external background : hTMLBodyElement:('own) _HTMLBodyElement_like ->  string = "background" [@@bs.get] 
    external setBackground : hTMLBodyElement:('own) _HTMLBodyElement_like -> background:string ->  unit = "background" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLBodyElement) in
      (return:(_) _HTMLBodyElement_like)
    
end
 module HTMLLegendElement = struct
    include HTMLElement
    
    external form : hTMLLegendElement:('own) _HTMLLegendElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLLegendElement) in
      (return:(_) _HTMLLegendElement_like)
    
end
 module HTMLBaseElement = struct
    include HTMLElement
    
    external href : hTMLBaseElement:('own) _HTMLBaseElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLBaseElement:('own) _HTMLBaseElement_like -> href:string ->  unit = "href" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLBaseElement) in
      (return:(_) _HTMLBaseElement_like)
    
end
 module HTMLUListElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLUListElement) in
      (return:(_) _HTMLUListElement_like)
    
end
 module HTMLHtmlElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLHtmlElement) in
      (return:(_) _HTMLHtmlElement_like)
    
end
 module HTMLTimeElement = struct
    include HTMLElement
    
    external dateTime : hTMLTimeElement:('own) _HTMLTimeElement_like ->  string = "dateTime" [@@bs.get] 
    external setDateTime : hTMLTimeElement:('own) _HTMLTimeElement_like -> dateTime:string ->  unit = "dateTime" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTimeElement) in
      (return:(_) _HTMLTimeElement_like)
    
end
 module HTMLTableSectionElement = struct
    include HTMLElement
    
    external rows : hTMLTableSectionElement:('own) _HTMLTableSectionElement_like ->  _HTMLCollection = "rows" [@@bs.get] 
    external deleteRow : index:int ->  unit = "deleteRow" [@@bs.send.pipe: ('own) _HTMLTableSectionElement_like] 
    external insertRow : ?index:int Js.undefined ->  _HTMLElement = "insertRow" [@@bs.send.pipe: ('own) _HTMLTableSectionElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableSectionElement) in
      (return:(_) _HTMLTableSectionElement_like)
    
    let insertRow ?index hTMLTableSectionElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertRow ~index hTMLTableSectionElement
    
end
 module HTMLFrameElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFrameElement) in
      (return:(_) _HTMLFrameElement_like)
    
end
 module HTMLLinkElement = struct
    include HTMLElement
    
    external sheet : hTMLLinkElement:('own) _HTMLLinkElement_like ->  _StyleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    external href : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLLinkElement:('own) _HTMLLinkElement_like -> href:string ->  unit = "href" [@@bs.set]
    external crossOrigin : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string option = "crossOrigin" [@@bs.get] [@@bs.return null_to_opt]
    external setCrossOrigin : hTMLLinkElement:('own) _HTMLLinkElement_like -> crossOrigin:string Js.null ->  unit = "crossOrigin" [@@bs.set]
    external rel : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "rel" [@@bs.get] 
    external setRel : hTMLLinkElement:('own) _HTMLLinkElement_like -> rel:string ->  unit = "rel" [@@bs.set]
    external relList : hTMLLinkElement:('own) _HTMLLinkElement_like ->  _DOMTokenList = "relList" [@@bs.get] 
    external media : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "media" [@@bs.get] 
    external setMedia : hTMLLinkElement:('own) _HTMLLinkElement_like -> media:string ->  unit = "media" [@@bs.set]
    external hreflang : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "hreflang" [@@bs.get] 
    external setHreflang : hTMLLinkElement:('own) _HTMLLinkElement_like -> hreflang:string ->  unit = "hreflang" [@@bs.set]
    external type_ : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLLinkElement:('own) _HTMLLinkElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external integrity : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "integrity" [@@bs.get] 
    external setIntegrity : hTMLLinkElement:('own) _HTMLLinkElement_like -> integrity:string ->  unit = "integrity" [@@bs.set]
    external charset : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "charset" [@@bs.get] 
    external setCharset : hTMLLinkElement:('own) _HTMLLinkElement_like -> charset:string ->  unit = "charset" [@@bs.set]
    external rev : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "rev" [@@bs.get] 
    external setRev : hTMLLinkElement:('own) _HTMLLinkElement_like -> rev:string ->  unit = "rev" [@@bs.set]
    external target : hTMLLinkElement:('own) _HTMLLinkElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLLinkElement:('own) _HTMLLinkElement_like -> target:string ->  unit = "target" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLLinkElement) in
      (return:(_) _HTMLLinkElement_like)
    
end
 module HTMLEmbedElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLEmbedElement) in
      (return:(_) _HTMLEmbedElement_like)
    
end
 module HTMLMeterElement = struct
    include HTMLElement
    
    external labels : hTMLMeterElement:('own) _HTMLMeterElement_like ->  _NodeList = "labels" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLMeterElement) in
      (return:(_) _HTMLMeterElement_like)
    
end
 module HTMLTableCaptionElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableCaptionElement) in
      (return:(_) _HTMLTableCaptionElement_like)
    
end
 module HTMLLabelElement = struct
    include HTMLElement
    
    external form : hTMLLabelElement:('own) _HTMLLabelElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external htmlFor : hTMLLabelElement:('own) _HTMLLabelElement_like ->  string = "htmlFor" [@@bs.get] 
    external setHtmlFor : hTMLLabelElement:('own) _HTMLLabelElement_like -> htmlFor:string ->  unit = "htmlFor" [@@bs.set]
    external control : hTMLLabelElement:('own) _HTMLLabelElement_like ->  _HTMLElement option = "control" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLLabelElement) in
      (return:(_) _HTMLLabelElement_like)
    
end
 module HTMLAnchorElement = struct
    include HTMLElement
    
    external href : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "href" [@@bs.get] 
    external setHref : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> href:string ->  unit = "href" [@@bs.set]
    external origin : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "origin" [@@bs.get] 
    external protocol : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "protocol" [@@bs.get] 
    external setProtocol : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> protocol:string ->  unit = "protocol" [@@bs.set]
    external username : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "username" [@@bs.get] 
    external setUsername : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> username:string ->  unit = "username" [@@bs.set]
    external password : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "password" [@@bs.get] 
    external setPassword : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> password:string ->  unit = "password" [@@bs.set]
    external host : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "host" [@@bs.get] 
    external setHost : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> host:string ->  unit = "host" [@@bs.set]
    external hostname : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "hostname" [@@bs.get] 
    external setHostname : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> hostname:string ->  unit = "hostname" [@@bs.set]
    external port : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "port" [@@bs.get] 
    external setPort : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> port:string ->  unit = "port" [@@bs.set]
    external pathname : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "pathname" [@@bs.get] 
    external setPathname : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> pathname:string ->  unit = "pathname" [@@bs.set]
    external search : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "search" [@@bs.get] 
    external setSearch : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> search:string ->  unit = "search" [@@bs.set]
    external hash : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "hash" [@@bs.get] 
    external setHash : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> hash:string ->  unit = "hash" [@@bs.set]
    external target : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> target:string ->  unit = "target" [@@bs.set]
    external rel : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "rel" [@@bs.get] 
    external setRel : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> rel:string ->  unit = "rel" [@@bs.set]
    external relList : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  _DOMTokenList = "relList" [@@bs.get] 
    external text : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> text:string ->  unit = "text" [@@bs.set]
    external coords : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "coords" [@@bs.get] 
    external setCoords : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> coords:string ->  unit = "coords" [@@bs.set]
    external name : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> name:string ->  unit = "name" [@@bs.set]
    external rev : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "rev" [@@bs.get] 
    external setRev : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> rev:string ->  unit = "rev" [@@bs.set]
    external shape : hTMLAnchorElement:('own) _HTMLAnchorElement_like ->  string = "shape" [@@bs.get] 
    external setShape : hTMLAnchorElement:('own) _HTMLAnchorElement_like -> shape:string ->  unit = "shape" [@@bs.set]
    external toString :  string = "toString" [@@bs.send.pipe: ('own) _HTMLAnchorElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLAnchorElement) in
      (return:(_) _HTMLAnchorElement_like)
    
end
 module HTMLHeadElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLHeadElement) in
      (return:(_) _HTMLHeadElement_like)
    
end
 module HTMLOutputElement = struct
    include HTMLElement
    
    external form : hTMLOutputElement:('own) _HTMLOutputElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external validity : hTMLOutputElement:('own) _HTMLOutputElement_like ->  _ValidityState = "validity" [@@bs.get] 
    external labels : hTMLOutputElement:('own) _HTMLOutputElement_like ->  _NodeList = "labels" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLOutputElement) in
      (return:(_) _HTMLOutputElement_like)
    
end
 module HTMLUnknownElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLUnknownElement) in
      (return:(_) _HTMLUnknownElement_like)
    
end
 module HTMLParamElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLParamElement) in
      (return:(_) _HTMLParamElement_like)
    
end
 module HTMLOptionElement = struct
    include HTMLElement
    
    external disabled : hTMLOptionElement:('own) _HTMLOptionElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLOptionElement:('own) _HTMLOptionElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLOptionElement:('own) _HTMLOptionElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external label : hTMLOptionElement:('own) _HTMLOptionElement_like ->  string = "label" [@@bs.get] 
    external setLabel : hTMLOptionElement:('own) _HTMLOptionElement_like -> label:string ->  unit = "label" [@@bs.set]
    external defaultSelected : hTMLOptionElement:('own) _HTMLOptionElement_like ->  bool = "defaultSelected" [@@bs.get] 
    external setDefaultSelected : hTMLOptionElement:('own) _HTMLOptionElement_like -> defaultSelected:Js.boolean ->  unit = "defaultSelected" [@@bs.set]
    external selected : hTMLOptionElement:('own) _HTMLOptionElement_like ->  bool = "selected" [@@bs.get] 
    external setSelected : hTMLOptionElement:('own) _HTMLOptionElement_like -> selected:Js.boolean ->  unit = "selected" [@@bs.set]
    external value : hTMLOptionElement:('own) _HTMLOptionElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLOptionElement:('own) _HTMLOptionElement_like -> value:string ->  unit = "value" [@@bs.set]
    external text : hTMLOptionElement:('own) _HTMLOptionElement_like ->  string = "text" [@@bs.get] 
    external setText : hTMLOptionElement:('own) _HTMLOptionElement_like -> text:string ->  unit = "text" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLOptionElement) in
      (return:(_) _HTMLOptionElement_like)
    
end
 module HTMLOListElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLOListElement) in
      (return:(_) _HTMLOListElement_like)
    
end
 module HTMLSelectElement = struct
    include HTMLElement
    
    external disabled : hTMLSelectElement:('own) _HTMLSelectElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLSelectElement:('own) _HTMLSelectElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLSelectElement:('own) _HTMLSelectElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external multiple : hTMLSelectElement:('own) _HTMLSelectElement_like ->  bool = "multiple" [@@bs.get] 
    external setMultiple : hTMLSelectElement:('own) _HTMLSelectElement_like -> multiple:Js.boolean ->  unit = "multiple" [@@bs.set]
    external name : hTMLSelectElement:('own) _HTMLSelectElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLSelectElement:('own) _HTMLSelectElement_like -> name:string ->  unit = "name" [@@bs.set]
    external size : hTMLSelectElement:('own) _HTMLSelectElement_like ->  int = "size" [@@bs.get] 
    external setSize : hTMLSelectElement:('own) _HTMLSelectElement_like -> size:int ->  unit = "size" [@@bs.set]
    external type_ : hTMLSelectElement:('own) _HTMLSelectElement_like ->  string = "type" [@@bs.get] 
    external options : hTMLSelectElement:('own) _HTMLSelectElement_like ->  _HTMLOptionsCollection = "options" [@@bs.get] 
    external length : hTMLSelectElement:('own) _HTMLSelectElement_like ->  int = "length" [@@bs.get] 
    external setLength : hTMLSelectElement:('own) _HTMLSelectElement_like -> length:int ->  unit = "length" [@@bs.set]
    external selectedIndex : hTMLSelectElement:('own) _HTMLSelectElement_like ->  int = "selectedIndex" [@@bs.get] 
    external setSelectedIndex : hTMLSelectElement:('own) _HTMLSelectElement_like -> selectedIndex:int ->  unit = "selectedIndex" [@@bs.set]
    external value : hTMLSelectElement:('own) _HTMLSelectElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLSelectElement:('own) _HTMLSelectElement_like -> value:string ->  unit = "value" [@@bs.set]
    external validity : hTMLSelectElement:('own) _HTMLSelectElement_like ->  _ValidityState = "validity" [@@bs.get] 
    external labels : hTMLSelectElement:('own) _HTMLSelectElement_like ->  _NodeList = "labels" [@@bs.get] 
    external add : element:'a1086 -> ?before:'a1087 Js.undefined ->  unit = "add" [@@bs.send.pipe: ('own) _HTMLSelectElement_like] 
    external item : index:int ->  _Element option = "item" [@@bs.send.pipe: ('own) _HTMLSelectElement_like] [@@bs.return null_to_opt]
    external namedItem : name:string ->  _HTMLOptionElement option = "namedItem" [@@bs.send.pipe: ('own) _HTMLSelectElement_like] [@@bs.return null_to_opt]
    external remove : index:int ->  unit = "remove" [@@bs.send.pipe: ('own) _HTMLSelectElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLSelectElement) in
      (return:(_) _HTMLSelectElement_like)
    
    let add ~element ~before hTMLSelectElement =
      let conv_element = function
        | `HTMLOptionElement (x: (_) _HTMLOptionElement_like) -> Obj.magic x
        | `HTMLOptGroupElement (x: (_) _HTMLOptGroupElement_like) -> 
        Obj.magic x
         in
      let element = conv_element element in
      let conv_before = function
        | `HTMLElement_Null (x: (_) _HTMLElement_like Js.null) -> Obj.magic x
        | `Int_Null (x: int Js.null) -> Obj.magic x
         in
      let conv_before = access_undef conv_before in
      let before = conv_before before in
      let return = add ~element ~before hTMLSelectElement in
      return
    
    let add ~element ?before hTMLSelectElement =
      let conv_before = Js_undefined.from_opt in
      let before = conv_before before in
      add ~element ~before hTMLSelectElement
    
end
 module HTMLStyleElement = struct
    include HTMLElement
    
    external sheet : hTMLStyleElement:('own) _HTMLStyleElement_like ->  _StyleSheet option = "sheet" [@@bs.get] [@@bs.return null_to_opt]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLStyleElement) in
      (return:(_) _HTMLStyleElement_like)
    
end
 module HTMLQuoteElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLQuoteElement) in
      (return:(_) _HTMLQuoteElement_like)
    
end
 module HTMLBRElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLBRElement) in
      (return:(_) _HTMLBRElement_like)
    
end
 module HTMLButtonElement = struct
    include HTMLElement
    
    external disabled : hTMLButtonElement:('own) _HTMLButtonElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLButtonElement:('own) _HTMLButtonElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLButtonElement:('own) _HTMLButtonElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external formAction : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "formAction" [@@bs.get] 
    external setFormAction : hTMLButtonElement:('own) _HTMLButtonElement_like -> formAction:string ->  unit = "formAction" [@@bs.set]
    external formEnctype : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "formEnctype" [@@bs.get] 
    external setFormEnctype : hTMLButtonElement:('own) _HTMLButtonElement_like -> formEnctype:string ->  unit = "formEnctype" [@@bs.set]
    external formMethod : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "formMethod" [@@bs.get] 
    external setFormMethod : hTMLButtonElement:('own) _HTMLButtonElement_like -> formMethod:string ->  unit = "formMethod" [@@bs.set]
    external formNoValidate : hTMLButtonElement:('own) _HTMLButtonElement_like ->  bool = "formNoValidate" [@@bs.get] 
    external setFormNoValidate : hTMLButtonElement:('own) _HTMLButtonElement_like -> formNoValidate:Js.boolean ->  unit = "formNoValidate" [@@bs.set]
    external formTarget : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "formTarget" [@@bs.get] 
    external setFormTarget : hTMLButtonElement:('own) _HTMLButtonElement_like -> formTarget:string ->  unit = "formTarget" [@@bs.set]
    external name : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLButtonElement:('own) _HTMLButtonElement_like -> name:string ->  unit = "name" [@@bs.set]
    external type_ : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLButtonElement:('own) _HTMLButtonElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external value : hTMLButtonElement:('own) _HTMLButtonElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLButtonElement:('own) _HTMLButtonElement_like -> value:string ->  unit = "value" [@@bs.set]
    external validity : hTMLButtonElement:('own) _HTMLButtonElement_like ->  _ValidityState = "validity" [@@bs.get] 
    external labels : hTMLButtonElement:('own) _HTMLButtonElement_like ->  _NodeList = "labels" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLButtonElement) in
      (return:(_) _HTMLButtonElement_like)
    
end
 module HTMLHRElement = struct
    include HTMLElement
    
    external align : hTMLHRElement:('own) _HTMLHRElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLHRElement:('own) _HTMLHRElement_like -> align:string ->  unit = "align" [@@bs.set]
    external color : hTMLHRElement:('own) _HTMLHRElement_like ->  string = "color" [@@bs.get] 
    external setColor : hTMLHRElement:('own) _HTMLHRElement_like -> color:string ->  unit = "color" [@@bs.set]
    external width : hTMLHRElement:('own) _HTMLHRElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLHRElement:('own) _HTMLHRElement_like -> width:string ->  unit = "width" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLHRElement) in
      (return:(_) _HTMLHRElement_like)
    
end
 module HTMLTextAreaElement = struct
    include HTMLElement
    
    external cols : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  int = "cols" [@@bs.get] 
    external setCols : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> cols:int ->  unit = "cols" [@@bs.set]
    external disabled : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external name : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> name:string ->  unit = "name" [@@bs.set]
    external placeholder : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "placeholder" [@@bs.get] 
    external setPlaceholder : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> placeholder:string ->  unit = "placeholder" [@@bs.set]
    external readOnly : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  bool = "readOnly" [@@bs.get] 
    external setReadOnly : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> readOnly:Js.boolean ->  unit = "readOnly" [@@bs.set]
    external required : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  bool = "required" [@@bs.get] 
    external setRequired : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> required:Js.boolean ->  unit = "required" [@@bs.set]
    external rows : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  int = "rows" [@@bs.get] 
    external setRows : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> rows:int ->  unit = "rows" [@@bs.set]
    external wrap : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "wrap" [@@bs.get] 
    external setWrap : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> wrap:string ->  unit = "wrap" [@@bs.set]
    external type_ : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "type" [@@bs.get] 
    external defaultValue : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "defaultValue" [@@bs.get] 
    external setDefaultValue : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> defaultValue:string ->  unit = "defaultValue" [@@bs.set]
    external value : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> value:string ->  unit = "value" [@@bs.set]
    external labels : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  _NodeList = "labels" [@@bs.get] 
    external selectionStart : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  int = "selectionStart" [@@bs.get] 
    external setSelectionStart : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> selectionStart:int ->  unit = "selectionStart" [@@bs.set]
    external selectionEnd : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  int = "selectionEnd" [@@bs.get] 
    external setSelectionEnd : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> selectionEnd:int ->  unit = "selectionEnd" [@@bs.set]
    external selectionDirection : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like ->  string = "selectionDirection" [@@bs.get] 
    external setSelectionDirection : hTMLTextAreaElement:('own) _HTMLTextAreaElement_like -> selectionDirection:string ->  unit = "selectionDirection" [@@bs.set]
    external setSelectionRange : start:int -> end_:int -> ?direction:string Js.undefined ->  unit = "setSelectionRange" [@@bs.send.pipe: ('own) _HTMLTextAreaElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTextAreaElement) in
      (return:(_) _HTMLTextAreaElement_like)
    
    let setSelectionRange ~start ~end_ ?direction hTMLTextAreaElement =
      let conv_direction = Js_undefined.from_opt in
      let direction = conv_direction direction in
      setSelectionRange ~start ~end_ ~direction hTMLTextAreaElement
    
end
 module HTMLSourceElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLSourceElement) in
      (return:(_) _HTMLSourceElement_like)
    
end
 module HTMLPreElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLPreElement) in
      (return:(_) _HTMLPreElement_like)
    
end
 module HTMLModElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLModElement) in
      (return:(_) _HTMLModElement_like)
    
end
 module HTMLMapElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLMapElement) in
      (return:(_) _HTMLMapElement_like)
    
end
 module HTMLTemplateElement = struct
    include HTMLElement
    
    external content : hTMLTemplateElement:('own) _HTMLTemplateElement_like ->  _DocumentFragment = "content" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTemplateElement) in
      (return:(_) _HTMLTemplateElement_like)
    
end
 module HTMLDirectoryElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDirectoryElement) in
      (return:(_) _HTMLDirectoryElement_like)
    
end
 module HTMLInputElement = struct
    include HTMLElement
    
    external accept : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "accept" [@@bs.get] 
    external setAccept : hTMLInputElement:('own) _HTMLInputElement_like -> accept:string ->  unit = "accept" [@@bs.set]
    external alt : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "alt" [@@bs.get] 
    external setAlt : hTMLInputElement:('own) _HTMLInputElement_like -> alt:string ->  unit = "alt" [@@bs.set]
    external defaultChecked : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "defaultChecked" [@@bs.get] 
    external setDefaultChecked : hTMLInputElement:('own) _HTMLInputElement_like -> defaultChecked:Js.boolean ->  unit = "defaultChecked" [@@bs.set]
    external checked : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "checked" [@@bs.get] 
    external setChecked : hTMLInputElement:('own) _HTMLInputElement_like -> checked:Js.boolean ->  unit = "checked" [@@bs.set]
    external dirName : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "dirName" [@@bs.get] 
    external setDirName : hTMLInputElement:('own) _HTMLInputElement_like -> dirName:string ->  unit = "dirName" [@@bs.set]
    external disabled : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "disabled" [@@bs.get] 
    external setDisabled : hTMLInputElement:('own) _HTMLInputElement_like -> disabled:Js.boolean ->  unit = "disabled" [@@bs.set]
    external form : hTMLInputElement:('own) _HTMLInputElement_like ->  _HTMLFormElement option = "form" [@@bs.get] [@@bs.return null_to_opt]
    external files : hTMLInputElement:('own) _HTMLInputElement_like ->  _FileList option = "files" [@@bs.get] [@@bs.return null_to_opt]
    external formAction : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "formAction" [@@bs.get] 
    external setFormAction : hTMLInputElement:('own) _HTMLInputElement_like -> formAction:string ->  unit = "formAction" [@@bs.set]
    external formEnctype : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "formEnctype" [@@bs.get] 
    external setFormEnctype : hTMLInputElement:('own) _HTMLInputElement_like -> formEnctype:string ->  unit = "formEnctype" [@@bs.set]
    external formMethod : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "formMethod" [@@bs.get] 
    external setFormMethod : hTMLInputElement:('own) _HTMLInputElement_like -> formMethod:string ->  unit = "formMethod" [@@bs.set]
    external formNoValidate : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "formNoValidate" [@@bs.get] 
    external setFormNoValidate : hTMLInputElement:('own) _HTMLInputElement_like -> formNoValidate:Js.boolean ->  unit = "formNoValidate" [@@bs.set]
    external formTarget : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "formTarget" [@@bs.get] 
    external setFormTarget : hTMLInputElement:('own) _HTMLInputElement_like -> formTarget:string ->  unit = "formTarget" [@@bs.set]
    external indeterminate : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "indeterminate" [@@bs.get] 
    external setIndeterminate : hTMLInputElement:('own) _HTMLInputElement_like -> indeterminate:Js.boolean ->  unit = "indeterminate" [@@bs.set]
    external max : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "max" [@@bs.get] 
    external setMax : hTMLInputElement:('own) _HTMLInputElement_like -> max:string ->  unit = "max" [@@bs.set]
    external maxLength : hTMLInputElement:('own) _HTMLInputElement_like ->  int = "maxLength" [@@bs.get] 
    external setMaxLength : hTMLInputElement:('own) _HTMLInputElement_like -> maxLength:int ->  unit = "maxLength" [@@bs.set]
    external min : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "min" [@@bs.get] 
    external setMin : hTMLInputElement:('own) _HTMLInputElement_like -> min:string ->  unit = "min" [@@bs.set]
    external minLength : hTMLInputElement:('own) _HTMLInputElement_like ->  int = "minLength" [@@bs.get] 
    external setMinLength : hTMLInputElement:('own) _HTMLInputElement_like -> minLength:int ->  unit = "minLength" [@@bs.set]
    external multiple : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "multiple" [@@bs.get] 
    external setMultiple : hTMLInputElement:('own) _HTMLInputElement_like -> multiple:Js.boolean ->  unit = "multiple" [@@bs.set]
    external name : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLInputElement:('own) _HTMLInputElement_like -> name:string ->  unit = "name" [@@bs.set]
    external pattern : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "pattern" [@@bs.get] 
    external setPattern : hTMLInputElement:('own) _HTMLInputElement_like -> pattern:string ->  unit = "pattern" [@@bs.set]
    external placeholder : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "placeholder" [@@bs.get] 
    external setPlaceholder : hTMLInputElement:('own) _HTMLInputElement_like -> placeholder:string ->  unit = "placeholder" [@@bs.set]
    external readOnly : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "readOnly" [@@bs.get] 
    external setReadOnly : hTMLInputElement:('own) _HTMLInputElement_like -> readOnly:Js.boolean ->  unit = "readOnly" [@@bs.set]
    external required : hTMLInputElement:('own) _HTMLInputElement_like ->  bool = "required" [@@bs.get] 
    external setRequired : hTMLInputElement:('own) _HTMLInputElement_like -> required:Js.boolean ->  unit = "required" [@@bs.set]
    external size : hTMLInputElement:('own) _HTMLInputElement_like ->  int = "size" [@@bs.get] 
    external setSize : hTMLInputElement:('own) _HTMLInputElement_like -> size:int ->  unit = "size" [@@bs.set]
    external src : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "src" [@@bs.get] 
    external setSrc : hTMLInputElement:('own) _HTMLInputElement_like -> src:string ->  unit = "src" [@@bs.set]
    external step : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "step" [@@bs.get] 
    external setStep : hTMLInputElement:('own) _HTMLInputElement_like -> step:string ->  unit = "step" [@@bs.set]
    external type_ : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "type" [@@bs.get] 
    external setType : hTMLInputElement:('own) _HTMLInputElement_like -> type_:string ->  unit = "type" [@@bs.set]
    external defaultValue : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "defaultValue" [@@bs.get] 
    external setDefaultValue : hTMLInputElement:('own) _HTMLInputElement_like -> defaultValue:string ->  unit = "defaultValue" [@@bs.set]
    external value : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "value" [@@bs.get] 
    external setValue : hTMLInputElement:('own) _HTMLInputElement_like -> value:string ->  unit = "value" [@@bs.set]
    external labels : hTMLInputElement:('own) _HTMLInputElement_like ->  _NodeList = "labels" [@@bs.get] 
    external selectionStart : hTMLInputElement:('own) _HTMLInputElement_like ->  int = "selectionStart" [@@bs.get] 
    external setSelectionStart : hTMLInputElement:('own) _HTMLInputElement_like -> selectionStart:int ->  unit = "selectionStart" [@@bs.set]
    external selectionEnd : hTMLInputElement:('own) _HTMLInputElement_like ->  int = "selectionEnd" [@@bs.get] 
    external setSelectionEnd : hTMLInputElement:('own) _HTMLInputElement_like -> selectionEnd:int ->  unit = "selectionEnd" [@@bs.set]
    external selectionDirection : hTMLInputElement:('own) _HTMLInputElement_like ->  string = "selectionDirection" [@@bs.get] 
    external setSelectionDirection : hTMLInputElement:('own) _HTMLInputElement_like -> selectionDirection:string ->  unit = "selectionDirection" [@@bs.set]
    external selectFiles : path:string array ->  unit = "selectFiles" [@@bs.send.pipe: ('own) _HTMLInputElement_like] 
    external setSelectionRange : start:int -> end_:int -> ?direction:string Js.undefined ->  unit = "setSelectionRange" [@@bs.send.pipe: ('own) _HTMLInputElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLInputElement) in
      (return:(_) _HTMLInputElement_like)
    
    let setSelectionRange ~start ~end_ ?direction hTMLInputElement =
      let conv_direction = Js_undefined.from_opt in
      let direction = conv_direction direction in
      setSelectionRange ~start ~end_ ~direction hTMLInputElement
    
end
 module HTMLParagraphElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLParagraphElement) in
      (return:(_) _HTMLParagraphElement_like)
    
end
 module HTMLAreaElement = struct
    include HTMLElement
    
    external relList : hTMLAreaElement:('own) _HTMLAreaElement_like ->  _DOMTokenList = "relList" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLAreaElement) in
      (return:(_) _HTMLAreaElement_like)
    
end
 module HTMLSpanElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLSpanElement) in
      (return:(_) _HTMLSpanElement_like)
    
end
 module HTMLFormElement = struct
    include HTMLElement
    
    external acceptCharset : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "acceptCharset" [@@bs.get] 
    external setAcceptCharset : hTMLFormElement:('own) _HTMLFormElement_like -> acceptCharset:string ->  unit = "acceptCharset" [@@bs.set]
    external action : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "action" [@@bs.get] 
    external setAction : hTMLFormElement:('own) _HTMLFormElement_like -> action:string ->  unit = "action" [@@bs.set]
    external autocomplete : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "autocomplete" [@@bs.get] 
    external setAutocomplete : hTMLFormElement:('own) _HTMLFormElement_like -> autocomplete:string ->  unit = "autocomplete" [@@bs.set]
    external enctype : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "enctype" [@@bs.get] 
    external setEnctype : hTMLFormElement:('own) _HTMLFormElement_like -> enctype:string ->  unit = "enctype" [@@bs.set]
    external encoding : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "encoding" [@@bs.get] 
    external setEncoding : hTMLFormElement:('own) _HTMLFormElement_like -> encoding:string ->  unit = "encoding" [@@bs.set]
    external method_ : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "method" [@@bs.get] 
    external setMethod : hTMLFormElement:('own) _HTMLFormElement_like -> method_:string ->  unit = "method" [@@bs.set]
    external name : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLFormElement:('own) _HTMLFormElement_like -> name:string ->  unit = "name" [@@bs.set]
    external noValidate : hTMLFormElement:('own) _HTMLFormElement_like ->  bool = "noValidate" [@@bs.get] 
    external setNoValidate : hTMLFormElement:('own) _HTMLFormElement_like -> noValidate:Js.boolean ->  unit = "noValidate" [@@bs.set]
    external target : hTMLFormElement:('own) _HTMLFormElement_like ->  string = "target" [@@bs.get] 
    external setTarget : hTMLFormElement:('own) _HTMLFormElement_like -> target:string ->  unit = "target" [@@bs.set]
    external elements : hTMLFormElement:('own) _HTMLFormElement_like ->  _HTMLFormControlsCollection = "elements" [@@bs.get] 
    external length : hTMLFormElement:('own) _HTMLFormElement_like ->  int = "length" [@@bs.get] 
    external get : hTMLFormElement:('own) _HTMLFormElement_like -> index:int ->  _Element option = "" [@@bs.get_index] [@@bs.return null_to_opt]
    external reset :  unit = "reset" [@@bs.send.pipe: ('own) _HTMLFormElement_like] 
    external submit :  unit = "submit" [@@bs.send.pipe: ('own) _HTMLFormElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFormElement) in
      (return:(_) _HTMLFormElement_like)
    
end
 module HTMLDataListElement = struct
    include HTMLElement
    
    external options : hTMLDataListElement:('own) _HTMLDataListElement_like ->  _HTMLCollection = "options" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDataListElement) in
      (return:(_) _HTMLDataListElement_like)
    
end
 module HTMLCanvasElement = struct
    include HTMLElement
    
    external width : hTMLCanvasElement:('own) _HTMLCanvasElement_like ->  int = "width" [@@bs.get] 
    external setWidth : hTMLCanvasElement:('own) _HTMLCanvasElement_like -> width:int ->  unit = "width" [@@bs.set]
    external height : hTMLCanvasElement:('own) _HTMLCanvasElement_like ->  int = "height" [@@bs.get] 
    external setHeight : hTMLCanvasElement:('own) _HTMLCanvasElement_like -> height:int ->  unit = "height" [@@bs.set]
    external getContext : hTMLCanvasElement:('own) _HTMLCanvasElement_like ->  (('own) _HTMLCanvasElement_like, 'a1088 Js.null, (string*('a1089))) variadic_func = "getContext" [@@bs.get]
    external toDataURL : hTMLCanvasElement:('own) _HTMLCanvasElement_like ->  (('own) _HTMLCanvasElement_like, string, (string Js.undefined*('a1090))) variadic_func = "toDataURL" [@@bs.get]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLCanvasElement) in
      (return:(_) _HTMLCanvasElement_like)
    
    let getContext ~contextId ~arguments hTMLCanvasElement =
      let func = getContext hTMLCanvasElement in
      let args = to_arg arguments in
      let args = unsafe_add args contextId in
      apply func hTMLCanvasElement args
    
    let getContext ~contextId ~arguments hTMLCanvasElement =
      let conv_return = identity in
      let return = getContext ~contextId ~arguments hTMLCanvasElement in
      let conv_return = null_to_opt conv_return in
      let return = conv_return return in
      return
    
    let toDataURL ~type_ ~arguments hTMLCanvasElement =
      let func = toDataURL hTMLCanvasElement in
      let args = to_arg arguments in
      let args = unsafe_add args type_ in
      apply func hTMLCanvasElement args
    
    let toDataURL ?type_ ~arguments hTMLCanvasElement =
      let conv_type = Js_undefined.from_opt in
      let type_ = conv_type type_ in
      toDataURL ~type_ ~arguments hTMLCanvasElement
    
end
 module HTMLTrackElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTrackElement) in
      (return:(_) _HTMLTrackElement_like)
    
end
 module HTMLTableRowElement = struct
    include HTMLElement
    
    external rowIndex : hTMLTableRowElement:('own) _HTMLTableRowElement_like ->  int = "rowIndex" [@@bs.get] 
    external sectionRowIndex : hTMLTableRowElement:('own) _HTMLTableRowElement_like ->  int = "sectionRowIndex" [@@bs.get] 
    external cells : hTMLTableRowElement:('own) _HTMLTableRowElement_like ->  _HTMLCollection = "cells" [@@bs.get] 
    external bgColor : hTMLTableRowElement:('own) _HTMLTableRowElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableRowElement:('own) _HTMLTableRowElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external deleteCell : index:int ->  unit = "deleteCell" [@@bs.send.pipe: ('own) _HTMLTableRowElement_like] 
    external insertCell : ?index:int Js.undefined ->  _HTMLElement = "insertCell" [@@bs.send.pipe: ('own) _HTMLTableRowElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableRowElement) in
      (return:(_) _HTMLTableRowElement_like)
    
    let insertCell ?index hTMLTableRowElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertCell ~index hTMLTableRowElement
    
end
 module HTMLDivElement = struct
    include HTMLElement
    
    external align : hTMLDivElement:('own) _HTMLDivElement_like ->  string = "align" [@@bs.get] 
    external setAlign : hTMLDivElement:('own) _HTMLDivElement_like -> align:string ->  unit = "align" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDivElement) in
      (return:(_) _HTMLDivElement_like)
    
end
 module HTMLAppletElement = struct
    include HTMLElement
    
    external name : hTMLAppletElement:('own) _HTMLAppletElement_like ->  string = "name" [@@bs.get] 
    external setName : hTMLAppletElement:('own) _HTMLAppletElement_like -> name:string ->  unit = "name" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLAppletElement) in
      (return:(_) _HTMLAppletElement_like)
    
end
 module HTMLDialogElement = struct
    include HTMLElement
    
    external open_ : hTMLDialogElement:('own) _HTMLDialogElement_like ->  bool = "open" [@@bs.get] 
    external setOpen : hTMLDialogElement:('own) _HTMLDialogElement_like -> open_:Js.boolean ->  unit = "open" [@@bs.set]
    external returnValue : hTMLDialogElement:('own) _HTMLDialogElement_like ->  string = "returnValue" [@@bs.get] 
    external setReturnValue : hTMLDialogElement:('own) _HTMLDialogElement_like -> returnValue:string ->  unit = "returnValue" [@@bs.set]
    external close : ?returnValue:string Js.undefined ->  unit = "close" [@@bs.send.pipe: ('own) _HTMLDialogElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDialogElement) in
      (return:(_) _HTMLDialogElement_like)
    
    let close ?returnValue hTMLDialogElement =
      let conv_returnValue = Js_undefined.from_opt in
      let returnValue = conv_returnValue returnValue in
      close ~returnValue hTMLDialogElement
    
end
 module HTMLFrameSetElement = struct
    include HTMLElement
    
    external onafterprint : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1091 [@bs]) option = "onafterprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnafterprint : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onafterprint:(_Event -> 'a1092 [@bs]) Js.null ->  unit = "onafterprint" [@@bs.set]
    external onbeforeprint : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1093 [@bs]) option = "onbeforeprint" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeprint : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onbeforeprint:(_Event -> 'a1094 [@bs]) Js.null ->  unit = "onbeforeprint" [@@bs.set]
    external onbeforeunload : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> string Js.null [@bs]) option = "onbeforeunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnbeforeunload : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onbeforeunload:(_Event -> string Js.null [@bs]) Js.null ->  unit = "onbeforeunload" [@@bs.set]
    external onhashchange : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1095 [@bs]) option = "onhashchange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnhashchange : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onhashchange:(_Event -> 'a1096 [@bs]) Js.null ->  unit = "onhashchange" [@@bs.set]
    external onlanguagechange : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1097 [@bs]) option = "onlanguagechange" [@@bs.get] [@@bs.return null_to_opt]
    external setOnlanguagechange : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onlanguagechange:(_Event -> 'a1098 [@bs]) Js.null ->  unit = "onlanguagechange" [@@bs.set]
    external onmessage : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1099 [@bs]) option = "onmessage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnmessage : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onmessage:(_Event -> 'a1100 [@bs]) Js.null ->  unit = "onmessage" [@@bs.set]
    external onoffline : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1101 [@bs]) option = "onoffline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnoffline : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onoffline:(_Event -> 'a1102 [@bs]) Js.null ->  unit = "onoffline" [@@bs.set]
    external ononline : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1103 [@bs]) option = "ononline" [@@bs.get] [@@bs.return null_to_opt]
    external setOnonline : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> ononline:(_Event -> 'a1104 [@bs]) Js.null ->  unit = "ononline" [@@bs.set]
    external onpagehide : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1105 [@bs]) option = "onpagehide" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpagehide : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onpagehide:(_Event -> 'a1106 [@bs]) Js.null ->  unit = "onpagehide" [@@bs.set]
    external onpageshow : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1107 [@bs]) option = "onpageshow" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpageshow : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onpageshow:(_Event -> 'a1108 [@bs]) Js.null ->  unit = "onpageshow" [@@bs.set]
    external onpopstate : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1109 [@bs]) option = "onpopstate" [@@bs.get] [@@bs.return null_to_opt]
    external setOnpopstate : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onpopstate:(_Event -> 'a1110 [@bs]) Js.null ->  unit = "onpopstate" [@@bs.set]
    external onrejectionhandled : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1111 [@bs]) option = "onrejectionhandled" [@@bs.get] [@@bs.return null_to_opt]
    external setOnrejectionhandled : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onrejectionhandled:(_Event -> 'a1112 [@bs]) Js.null ->  unit = "onrejectionhandled" [@@bs.set]
    external onstorage : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1113 [@bs]) option = "onstorage" [@@bs.get] [@@bs.return null_to_opt]
    external setOnstorage : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onstorage:(_Event -> 'a1114 [@bs]) Js.null ->  unit = "onstorage" [@@bs.set]
    external onunhandledrejection : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1115 [@bs]) option = "onunhandledrejection" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunhandledrejection : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onunhandledrejection:(_Event -> 'a1116 [@bs]) Js.null ->  unit = "onunhandledrejection" [@@bs.set]
    external onunload : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like ->  (_Event -> 'a1117 [@bs]) option = "onunload" [@@bs.get] [@@bs.return null_to_opt]
    external setOnunload : hTMLFrameSetElement:('own) _HTMLFrameSetElement_like -> onunload:(_Event -> 'a1118 [@bs]) Js.null ->  unit = "onunload" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFrameSetElement) in
      (return:(_) _HTMLFrameSetElement_like)
    
end
 module HTMLDetailsElement = struct
    include HTMLElement
    
    external open_ : hTMLDetailsElement:('own) _HTMLDetailsElement_like ->  bool = "open" [@@bs.get] 
    external setOpen : hTMLDetailsElement:('own) _HTMLDetailsElement_like -> open_:Js.boolean ->  unit = "open" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLDetailsElement) in
      (return:(_) _HTMLDetailsElement_like)
    
end
 module HTMLProgressElement = struct
    include HTMLElement
    
    external labels : hTMLProgressElement:('own) _HTMLProgressElement_like ->  _NodeList = "labels" [@@bs.get] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLProgressElement) in
      (return:(_) _HTMLProgressElement_like)
    
end
 module HTMLFontElement = struct
    include HTMLElement
    
    external color : hTMLFontElement:('own) _HTMLFontElement_like ->  string = "color" [@@bs.get] 
    external setColor : hTMLFontElement:('own) _HTMLFontElement_like -> color:string ->  unit = "color" [@@bs.set]
    external face : hTMLFontElement:('own) _HTMLFontElement_like ->  string = "face" [@@bs.get] 
    external setFace : hTMLFontElement:('own) _HTMLFontElement_like -> face:string ->  unit = "face" [@@bs.set]
    external size : hTMLFontElement:('own) _HTMLFontElement_like ->  string = "size" [@@bs.get] 
    external setSize : hTMLFontElement:('own) _HTMLFontElement_like -> size:string ->  unit = "size" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLFontElement) in
      (return:(_) _HTMLFontElement_like)
    
end
 module HTMLTableCellElement = struct
    include HTMLElement
    
    external colSpan : hTMLTableCellElement:('own) _HTMLTableCellElement_like ->  int = "colSpan" [@@bs.get] 
    external setColSpan : hTMLTableCellElement:('own) _HTMLTableCellElement_like -> colSpan:int ->  unit = "colSpan" [@@bs.set]
    external rowSpan : hTMLTableCellElement:('own) _HTMLTableCellElement_like ->  int = "rowSpan" [@@bs.get] 
    external setRowSpan : hTMLTableCellElement:('own) _HTMLTableCellElement_like -> rowSpan:int ->  unit = "rowSpan" [@@bs.set]
    external cellIndex : hTMLTableCellElement:('own) _HTMLTableCellElement_like ->  int = "cellIndex" [@@bs.get] 
    external width : hTMLTableCellElement:('own) _HTMLTableCellElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLTableCellElement:('own) _HTMLTableCellElement_like -> width:string ->  unit = "width" [@@bs.set]
    external bgColor : hTMLTableCellElement:('own) _HTMLTableCellElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableCellElement:('own) _HTMLTableCellElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableCellElement) in
      (return:(_) _HTMLTableCellElement_like)
    
end
 module HTMLTableElement = struct
    include HTMLElement
    
    external caption : hTMLTableElement:('own) _HTMLTableElement_like ->  _HTMLTableCaptionElement option = "caption" [@@bs.get] [@@bs.return null_to_opt]
    external setCaption : hTMLTableElement:('own) _HTMLTableElement_like -> caption:_HTMLTableCaptionElement Js.null ->  unit = "caption" [@@bs.set]
    external tHead : hTMLTableElement:('own) _HTMLTableElement_like ->  _HTMLTableSectionElement option = "tHead" [@@bs.get] [@@bs.return null_to_opt]
    external setTHead : hTMLTableElement:('own) _HTMLTableElement_like -> tHead:_HTMLTableSectionElement Js.null ->  unit = "tHead" [@@bs.set]
    external tFoot : hTMLTableElement:('own) _HTMLTableElement_like ->  _HTMLTableSectionElement option = "tFoot" [@@bs.get] [@@bs.return null_to_opt]
    external setTFoot : hTMLTableElement:('own) _HTMLTableElement_like -> tFoot:_HTMLTableSectionElement Js.null ->  unit = "tFoot" [@@bs.set]
    external tBodies : hTMLTableElement:('own) _HTMLTableElement_like ->  _HTMLCollection = "tBodies" [@@bs.get] 
    external rows : hTMLTableElement:('own) _HTMLTableElement_like ->  _HTMLCollection = "rows" [@@bs.get] 
    external width : hTMLTableElement:('own) _HTMLTableElement_like ->  string = "width" [@@bs.get] 
    external setWidth : hTMLTableElement:('own) _HTMLTableElement_like -> width:string ->  unit = "width" [@@bs.set]
    external bgColor : hTMLTableElement:('own) _HTMLTableElement_like ->  string = "bgColor" [@@bs.get] 
    external setBgColor : hTMLTableElement:('own) _HTMLTableElement_like -> bgColor:string ->  unit = "bgColor" [@@bs.set]
    external createCaption :  _HTMLTableCaptionElement = "createCaption" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external createTBody :  _HTMLTableSectionElement = "createTBody" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external createTFoot :  _HTMLTableSectionElement = "createTFoot" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external createTHead :  _HTMLTableSectionElement = "createTHead" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external deleteCaption :  unit = "deleteCaption" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external deleteRow : index:int ->  unit = "deleteRow" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external deleteTFoot :  unit = "deleteTFoot" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external deleteTHead :  unit = "deleteTHead" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    external insertRow : ?index:int Js.undefined ->  _HTMLTableRowElement = "insertRow" [@@bs.send.pipe: ('own) _HTMLTableElement_like] 
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableElement) in
      (return:(_) _HTMLTableElement_like)
    
    let insertRow ?index hTMLTableElement =
      let conv_index = Js_undefined.from_opt in
      let index = conv_index index in
      insertRow ~index hTMLTableElement
    
end
 module HTMLHeadingElement = struct
    include HTMLElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLHeadingElement) in
      (return:(_) _HTMLHeadingElement_like)
    
end
 module HTMLAudioElement = struct
    include HTMLMediaElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLAudioElement) in
      (return:(_) _HTMLAudioElement_like)
    
end
 module HTMLTableHeaderCellElement = struct
    include HTMLTableCellElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableHeaderCellElement) in
      (return:(_) _HTMLTableHeaderCellElement_like)
    
end
 module SVGSVGElement = struct
    include SVGGraphicsElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_SVGSVGElement) in
      (return:(_) _SVGSVGElement_like)
    
end
 module HTMLVideoElement = struct
    include HTMLMediaElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLVideoElement) in
      (return:(_) _HTMLVideoElement_like)
    
end
 module HTMLTableDataCellElement = struct
    include HTMLTableCellElement
    
    
    
    let downcast x =
      let return = Obj.magic (x:_HTMLTableDataCellElement) in
      (return:(_) _HTMLTableDataCellElement_like)
    
end
